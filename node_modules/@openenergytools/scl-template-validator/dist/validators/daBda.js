import { isTypeMissing, getTypeChild } from '../foundation.js';

async function dAValidator(element) {
    if (isTypeMissing(element))
        return [
            {
                title: `Missing mandatory attribute type`,
                message: `${element.parentElement?.getAttribute("id")}>${element.getAttribute("name")}`,
            },
        ];
    const child = getTypeChild(element);
    if (child === null)
        return [
            {
                title: `Type attribute is not referencing any DAType or EnumType`,
                message: `${element.parentElement?.getAttribute("id")}>${element.getAttribute("name")}`,
            },
        ];
    return [];
}

export { dAValidator };
//# sourceMappingURL=daBda.js.map
