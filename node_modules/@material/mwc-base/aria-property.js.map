{"version":3,"file":"aria-property.js","sources":["../../../../node_modules/@material/mwc-base/aria-property.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * TypeScript version of the decorator\n * @see https://www.typescriptlang.org/docs/handbook/decorators.html#property-decorators\n */\nfunction tsDecorator(prototype, name, descriptor) {\n    const constructor = prototype.constructor;\n    if (!descriptor) {\n        /**\n         * lit uses internal properties with two leading underscores to\n         * provide storage for accessors\n         */\n        const litInternalPropertyKey = `__${name}`;\n        descriptor =\n            constructor.getPropertyDescriptor(name, litInternalPropertyKey);\n        if (!descriptor) {\n            throw new Error('@ariaProperty must be used after a @property decorator');\n        }\n    }\n    // descriptor must exist at this point, reassign so typescript understands\n    const propDescriptor = descriptor;\n    let attribute = '';\n    if (!propDescriptor.set) {\n        throw new Error(`@ariaProperty requires a setter for ${name}`);\n    }\n    // TODO(b/202853219): Remove this check when internal tooling is\n    // compatible\n    // tslint:disable-next-line:no-any bail if applied to internal generated class\n    if (prototype.dispatchWizEvent) {\n        return descriptor;\n    }\n    const wrappedDescriptor = {\n        configurable: true,\n        enumerable: true,\n        set(value) {\n            if (attribute === '') {\n                const options = constructor.getPropertyOptions(name);\n                // if attribute is not a string, use `name` instead\n                attribute =\n                    typeof options.attribute === 'string' ? options.attribute : name;\n            }\n            if (this.hasAttribute(attribute)) {\n                this.removeAttribute(attribute);\n            }\n            propDescriptor.set.call(this, value);\n        }\n    };\n    if (propDescriptor.get) {\n        wrappedDescriptor.get = function () {\n            return propDescriptor.get.call(this);\n        };\n    }\n    return wrappedDescriptor;\n}\n/**\n * A property decorator proxies an aria attribute to an internal node\n *\n * This decorator is only intended for use with ARIA attributes, such as `role`\n * and `aria-label` due to screenreader needs.\n *\n * Upon first render, `@ariaProperty` will remove the attribute from the host\n * element to prevent screenreaders from reading the host instead of the\n * internal node.\n *\n * This decorator should only be used for non-Symbol public fields decorated\n * with `@property`, or on a setter with an optional getter.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @ariaProperty\n *   @property({ type: String, attribute: 'aria-label' })\n *   ariaLabel!: string;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function ariaProperty(protoOrDescriptor, name, \n// tslint:disable-next-line:no-any any is required as a return type from decorators\ndescriptor) {\n    if (name !== undefined) {\n        return tsDecorator(protoOrDescriptor, name, descriptor);\n    }\n    else {\n        throw new Error('@ariaProperty only supports TypeScript Decorators');\n    }\n}\n//# sourceMappingURL=aria-property.js.map"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE;AAClD,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAC9C,IAAI,IAAI,CAAC,UAAU,EAAE;AACrB;AACA;AACA;AACA;AACA,QAAQ,MAAM,sBAAsB,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AACnD,QAAQ,UAAU;AAClB,YAAY,WAAW,CAAC,qBAAqB,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AAC5E,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,YAAY,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AACtF,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,cAAc,GAAG,UAAU,CAAC;AACtC,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC;AACvB,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;AAC7B,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACvE,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,SAAS,CAAC,gBAAgB,EAAE;AACpC,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL,IAAI,MAAM,iBAAiB,GAAG;AAC9B,QAAQ,YAAY,EAAE,IAAI;AAC1B,QAAQ,UAAU,EAAE,IAAI;AACxB,QAAQ,GAAG,CAAC,KAAK,EAAE;AACnB,YAAY,IAAI,SAAS,KAAK,EAAE,EAAE;AAClC,gBAAgB,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACrE;AACA,gBAAgB,SAAS;AACzB,oBAAoB,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACrF,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;AAC9C,gBAAgB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAChD,aAAa;AACb,YAAY,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,IAAI,cAAc,CAAC,GAAG,EAAE;AAC5B,QAAQ,iBAAiB,CAAC,GAAG,GAAG,YAAY;AAC5C,YAAY,OAAO,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,SAAS,CAAC;AACV,KAAK;AACL,IAAI,OAAO,iBAAiB,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,iBAAiB,EAAE,IAAI;AACpD;AACA,UAAU,EAAE;AACZ,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;AAC5B,QAAQ,OAAO,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAChE,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;AAC7E,KAAK;AACL;;;;"}