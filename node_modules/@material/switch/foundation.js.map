{"version":3,"file":"foundation.js","sources":["../../../../node_modules/@material/switch/foundation.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCObserverFoundation } from '@material/base/observer-foundation';\nimport { CssClasses } from './constants';\n/**\n * `MDCSwitchFoundation` provides a state-only foundation for a switch\n * component.\n *\n * State observers and event handler entrypoints update a component's adapter's\n * state with the logic needed for switch to function.\n */\nvar MDCSwitchFoundation = /** @class */ (function (_super) {\n    __extends(MDCSwitchFoundation, _super);\n    function MDCSwitchFoundation(adapter) {\n        var _this = _super.call(this, adapter) || this;\n        _this.handleClick = _this.handleClick.bind(_this);\n        return _this;\n    }\n    /**\n     * Initializes the foundation and starts observing state changes.\n     */\n    MDCSwitchFoundation.prototype.init = function () {\n        this.observe(this.adapter.state, {\n            disabled: this.stopProcessingIfDisabled,\n            processing: this.stopProcessingIfDisabled,\n        });\n    };\n    /**\n     * Event handler for switch click events. Clicking on a switch will toggle its\n     * selected state.\n     */\n    MDCSwitchFoundation.prototype.handleClick = function () {\n        if (this.adapter.state.disabled) {\n            return;\n        }\n        this.adapter.state.selected = !this.adapter.state.selected;\n    };\n    MDCSwitchFoundation.prototype.stopProcessingIfDisabled = function () {\n        if (this.adapter.state.disabled) {\n            this.adapter.state.processing = false;\n        }\n    };\n    return MDCSwitchFoundation;\n}(MDCObserverFoundation));\nexport { MDCSwitchFoundation };\n/**\n * `MDCSwitchRenderFoundation` provides a state and rendering foundation for a\n * switch component.\n *\n * State observers and event handler entrypoints update a component's\n * adapter's state with the logic needed for switch to function.\n *\n * In response to state changes, the rendering foundation uses the component's\n * render adapter to keep the component's DOM updated with the state.\n */\nvar MDCSwitchRenderFoundation = /** @class */ (function (_super) {\n    __extends(MDCSwitchRenderFoundation, _super);\n    function MDCSwitchRenderFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the foundation and starts observing state changes.\n     */\n    MDCSwitchRenderFoundation.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this.observe(this.adapter.state, {\n            disabled: this.onDisabledChange,\n            processing: this.onProcessingChange,\n            selected: this.onSelectedChange,\n        });\n    };\n    /**\n     * Initializes the foundation from a server side rendered (SSR) component.\n     * This will sync the adapter's state with the current state of the DOM.\n     *\n     * This method should be called after `init()`.\n     */\n    MDCSwitchRenderFoundation.prototype.initFromDOM = function () {\n        // Turn off observers while setting state\n        this.setObserversEnabled(this.adapter.state, false);\n        this.adapter.state.selected = this.adapter.hasClass(CssClasses.SELECTED);\n        // Ensure aria-checked is set if attribute is not present\n        this.onSelectedChange();\n        this.adapter.state.disabled = this.adapter.isDisabled();\n        this.adapter.state.processing =\n            this.adapter.hasClass(CssClasses.PROCESSING);\n        // Re-observe state\n        this.setObserversEnabled(this.adapter.state, true);\n        this.stopProcessingIfDisabled();\n    };\n    MDCSwitchRenderFoundation.prototype.onDisabledChange = function () {\n        this.adapter.setDisabled(this.adapter.state.disabled);\n    };\n    MDCSwitchRenderFoundation.prototype.onProcessingChange = function () {\n        this.toggleClass(this.adapter.state.processing, CssClasses.PROCESSING);\n    };\n    MDCSwitchRenderFoundation.prototype.onSelectedChange = function () {\n        this.adapter.setAriaChecked(String(this.adapter.state.selected));\n        this.toggleClass(this.adapter.state.selected, CssClasses.SELECTED);\n        this.toggleClass(!this.adapter.state.selected, CssClasses.UNSELECTED);\n    };\n    MDCSwitchRenderFoundation.prototype.toggleClass = function (addClass, className) {\n        if (addClass) {\n            this.adapter.addClass(className);\n        }\n        else {\n            this.adapter.removeClass(className);\n        }\n    };\n    return MDCSwitchRenderFoundation;\n}(MDCSwitchFoundation));\nexport { MDCSwitchRenderFoundation };\n//# sourceMappingURL=foundation.js.map"],"names":[],"mappings":"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"}