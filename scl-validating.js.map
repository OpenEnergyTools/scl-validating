{"version":3,"file":"scl-validating.js","sources":["../../scl-validating.ts"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { LitElement, TemplateResult, css, html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\n\nimport '@material/mwc-button';\nimport '@material/mwc-dialog';\nimport '@material/mwc-formfield';\nimport '@material/mwc-icon';\nimport '@material/mwc-icon-button-toggle';\nimport '@material/mwc-list';\nimport '@material/mwc-snackbar';\nimport '@material/mwc-switch';\nimport type { Dialog } from '@material/mwc-dialog';\nimport type { IconButtonToggle } from '@material/mwc-icon-button-toggle';\nimport type { Snackbar } from '@material/mwc-snackbar';\n\nimport { validateSchema } from './schema/validateSchema.js';\nimport { validateTemplates } from './template/validateTemplates.js';\nimport { IssueDetail } from './foundation/utils.js';\n\n/** An editor [[`plugin`]] to configure validators and display their issue centrally */\nexport default class SclValidatingPlugin extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false }) doc!: XMLDocument;\n\n  /** The name of the document being edited */\n  @property() docName!: string;\n\n  /** SCL change indicator */\n  @property({ type: Number }) editCount = 0;\n\n  /** Issues return by the schema validator */\n  @state() schemaIssues: IssueDetail[] = [];\n\n  /** Issues returned by the template validator */\n  @state() templateIssues: IssueDetail[] = [];\n\n  /** Whether schema validator has had the initial run */\n  @state() waitForSchemaRun = true;\n\n  /** Whether template validator has had the initial run */\n  @state() waitForTemplateRun = true;\n\n  /** Whether schema validator shall run after each change to the doc */\n  @state() autoValidateSchema = true;\n\n  /** Whether template validator shall run after each change to the doc */\n  @state() autoValidateTemplate = false;\n\n  @query('mwc-dialog') dialog!: Dialog;\n\n  @query('.expand.template') expandTemplate!: IconButtonToggle;\n\n  @query('.expand.schema') expandSchema!: IconButtonToggle;\n\n  @query('#alertSchemaIssue') alertSchemaIssue!: Snackbar;\n\n  @query('#alertTemplateIssue') alertTemplateIssue!: Snackbar;\n\n  async run() {\n    this.dialog.show();\n  }\n\n  private async validateSchema(): Promise<void> {\n    this.schemaIssues.length = 0;\n    await this.requestUpdate('schemaIssues');\n\n    this.schemaIssues = await validateSchema(this.doc, this.docName);\n    this.waitForSchemaRun = false;\n\n    if (this.schemaIssues.length) {\n      this.alertSchemaIssue.labelText =\n        this.schemaIssues[this.schemaIssues.length - 1].title;\n      this.alertSchemaIssue.show();\n    }\n\n    this.requestUpdate('schemaIssues');\n  }\n\n  private async validateTemplates(): Promise<void> {\n    this.templateIssues.length = 0;\n    this.waitForTemplateRun = false;\n    for await (const issue of validateTemplates(this.doc)) {\n      this.templateIssues.push(...issue);\n      this.requestUpdate('templateIssues');\n    }\n\n    if (this.templateIssues.length) {\n      this.alertTemplateIssue.labelText =\n        this.templateIssues[this.templateIssues.length - 1].title;\n      this.alertTemplateIssue.show();\n    }\n\n    this.requestUpdate('templateIssues');\n  }\n\n  private async autoValidate(): Promise<void> {\n    if (!this.doc) await this.requestUpdate();\n\n    if (this.autoValidateTemplate) this.validateTemplates();\n    if (this.autoValidateSchema) this.validateSchema();\n  }\n\n  async performUpdate() {\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise<void>(resolve => requestAnimationFrame(() => resolve()));\n    super.performUpdate();\n  }\n\n  constructor() {\n    super();\n\n    window.addEventListener('oscd-edit', this.autoValidate.bind(this));\n    window.addEventListener('oscd-open', this.autoValidate.bind(this));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderValidatorsIssues(issues: IssueDetail[]): TemplateResult[] {\n    if (issues.length === 0)\n      return [html`<li divider padded role=\"separator\"></li>`];\n    return [\n      html`<li divider padded role=\"separator\"></li>`,\n      ...issues.map(\n        issue => html` <abbr title=\"${`${issue.title}\\n${issue.message}`}\"\n          ><mwc-list-item ?twoline=${!!issue.message}>\n            <span> ${issue.title}</span>\n            <span slot=\"secondary\">${issue.message}</span>\n          </mwc-list-item></abbr\n        >`\n      ),\n    ];\n  }\n\n  private renderTemplateValidator(): TemplateResult {\n    return html`<div style=\"display: flex; flex-direction: row\">\n        <div style=\"display: flex; flex-direction: column; flex: auto;\">\n          <div style=\"display: flex; flex-direction: row\">\n            <h3 style=\"flex:auto\">\n              ${`Template issues (${\n                this.waitForTemplateRun\n                  ? 'Run template validator'\n                  : this.templateIssues.length\n              })`}\n            </h3>\n            <mwc-icon-button-toggle\n              class=\"expand template\"\n              onIcon=\"expand_less\"\n              offIcon=\"expand_more\"\n              @click=\"${() => this.requestUpdate()}\"\n            ></mwc-icon-button-toggle>\n          </div>\n          <div style=\"display: flex; flex-direction: row\">\n            <div style=\"display:flex; align-items:center; flex:auto\">\n              <mwc-button\n                style=\"float: right\"\n                label=\"${`${\n                  this.waitForTemplateRun ? '' : 'Re-'\n                }Run manual validation`}\"\n                @click=\"${this.validateTemplates}\"\n              ></mwc-button>\n            </div>\n            <div style=\"display: flex\">\n              <mwc-formfield label=\"Auto validate on change\" alignEnd>\n                <mwc-switch\n                  @click=\"${() => {\n                    this.autoValidateTemplate = !this.autoValidateTemplate;\n                  }}\"\n                ></mwc-switch>\n              </mwc-formfield>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.expandTemplate && this.expandTemplate.on\n        ? html`<mwc-list>\n            <li divider padded role=\"separator\"></li>\n          </mwc-list>`\n        : html`<mwc-list id=\"content\" wrapFocus\n            >${this.renderValidatorsIssues(this.templateIssues)}</mwc-list\n          >`}`;\n  }\n\n  private renderSchemaValidator(): TemplateResult {\n    return html`<div style=\"display: flex; flex-direction: row\">\n        <div style=\"display: flex; flex-direction: column; flex: auto;\">\n          <div style=\"display: flex; flex-direction: row\">\n            <h3 style=\"flex:auto\">\n              ${`Schema issues (${\n                this.waitForSchemaRun\n                  ? 'Run schema validator'\n                  : this.schemaIssues.length\n              })`}\n            </h3>\n            <mwc-icon-button-toggle\n              class=\"expand schema\"\n              onIcon=\"expand_less\"\n              offIcon=\"expand_more\"\n              @click=\"${() => this.requestUpdate()}\"\n            ></mwc-icon-button-toggle>\n          </div>\n          <div style=\"display: flex; flex-direction: row\">\n            <div style=\"display:flex; align-items:center; flex:auto\">\n              <mwc-button\n                style=\"float: right\"\n                label=\"${`${\n                  this.waitForSchemaRun ? '' : 'Re-'\n                }Run manual validation`}\"\n                @click=\"${this.validateSchema}\"\n              ></mwc-button>\n            </div>\n            <div style=\"display: flex\">\n              <mwc-formfield label=\"Auto validate on change\" alignEnd>\n                <mwc-switch\n                  selected\n                  @click=\"${() => {\n                    this.autoValidateSchema = !this.autoValidateSchema;\n                  }}\"\n                ></mwc-switch>\n              </mwc-formfield>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.expandSchema && this.expandSchema.on\n        ? html`<mwc-list>\n            <li divider padded role=\"separator\"></li>\n          </mwc-list>`\n        : html`<mwc-list id=\"content\" wrapFocus\n            >${this.renderValidatorsIssues(this.schemaIssues)}</mwc-list\n          >`}`;\n  }\n\n  render(): TemplateResult {\n    if (!this.doc)\n      return html`<mwc-dialog\n        ><div>No SCL file loaded, yet!</div>\n        <mwc-button\n          label=\"Cancel\"\n          slot=\"secondaryAction\"\n          dialogAction=\"close\"\n        ></mwc-button>\n      </mwc-dialog>`;\n\n    return html`<mwc-dialog>\n        ${this.renderSchemaValidator()}${this.renderTemplateValidator()}\n        <mwc-button\n          label=\"Cancel\"\n          slot=\"secondaryAction\"\n          dialogAction=\"close\"\n        ></mwc-button>\n      </mwc-dialog>\n      <mwc-snackbar id=\"alertSchemaIssue\" .timeoutMs=${5000}>\n        <mwc-button slot=\"action\" @click=${() => this.dialog.show()}\n          >DETAIL</mwc-button\n        > </mwc-snackbar\n      ><mwc-snackbar id=\"alertTemplateIssue\" .timeoutMs=${4000}>\n        <mwc-button slot=\"action\" @click=${() => this.dialog.show()}\n          >DETAIL</mwc-button\n        >\n      </mwc-snackbar>`;\n  }\n\n  static styles = css`\n    mwc-dialog {\n      --mdc-dialog-max-width: 90vw;\n      --mdc-dialog-min-width: 50vw;\n    }\n  `;\n}\n"],"names":["LitElement","html","css","property","state","query"],"mappings":"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"}