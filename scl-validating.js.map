{"version":3,"file":"scl-validating.js","sourceRoot":"","sources":["../scl-validating.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { LitElement, TemplateResult, css, html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\n\nimport '@material/mwc-button';\nimport '@material/mwc-dialog';\nimport '@material/mwc-formfield';\nimport '@material/mwc-icon';\nimport '@material/mwc-icon-button-toggle';\nimport '@material/mwc-list';\nimport '@material/mwc-snackbar';\nimport '@material/mwc-switch';\nimport type { Dialog } from '@material/mwc-dialog';\nimport type { IconButtonToggle } from '@material/mwc-icon-button-toggle';\nimport type { Snackbar } from '@material/mwc-snackbar';\n\nimport { validateSchema } from './schema/validateSchema.js';\nimport { validateTemplates } from './template/validateTemplates.js';\nimport { IssueDetail } from './foundation/utils.js';\n\n/** An editor [[`plugin`]] to configure validators and display their issue centrally */\nexport default class SclValidatingPlugin extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false }) doc!: XMLDocument;\n\n  /** The name of the document being edited */\n  @property() docName!: string;\n\n  /** SCL change indicator */\n  @property({ type: Number }) editCount = 0;\n\n  /** Issues return by the schema validator */\n  @state() schemaIssues: IssueDetail[] = [];\n\n  /** Issues returned by the template validator */\n  @state() templateIssues: IssueDetail[] = [];\n\n  /** Whether schema validator has had the initial run */\n  @state() waitForSchemaRun = true;\n\n  /** Whether template validator has had the initial run */\n  @state() waitForTemplateRun = true;\n\n  /** Whether schema validator shall run after each change to the doc */\n  @state() autoValidateSchema = true;\n\n  /** Whether template validator shall run after each change to the doc */\n  @state() autoValidateTemplate = false;\n\n  @query('mwc-dialog') dialog!: Dialog;\n\n  @query('.expand.template') expandTemplate!: IconButtonToggle;\n\n  @query('.expand.schema') expandSchema!: IconButtonToggle;\n\n  @query('#alertSchemaIssue') alertSchemaIssue!: Snackbar;\n\n  @query('#alertTemplateIssue') alertTemplateIssue!: Snackbar;\n\n  async run() {\n    this.dialog.show();\n  }\n\n  private async validateSchema(): Promise<void> {\n    this.schemaIssues.length = 0;\n    await this.requestUpdate('schemaIssues');\n\n    const result = await validateSchema(this.doc, this.docName);\n    this.schemaIssues = result || [{ title: 'Invalid Schema!' }];\n    this.waitForSchemaRun = false;\n\n    if (this.schemaIssues.length) {\n      this.alertSchemaIssue.labelText =\n        this.schemaIssues[this.schemaIssues.length - 1].title;\n      this.alertSchemaIssue.show();\n    }\n\n    this.requestUpdate('schemaIssues');\n  }\n\n  private async validateTemplates(): Promise<void> {\n    this.templateIssues.length = 0;\n    this.waitForTemplateRun = false;\n    for await (const issue of validateTemplates(this.doc)) {\n      this.templateIssues.push(...issue);\n      this.requestUpdate('templateIssues');\n    }\n\n    if (this.templateIssues.length) {\n      this.alertTemplateIssue.labelText =\n        this.templateIssues[this.templateIssues.length - 1].title;\n      this.alertTemplateIssue.show();\n    }\n\n    this.requestUpdate('templateIssues');\n  }\n\n  private async autoValidate(): Promise<void> {\n    if (!this.doc) await this.requestUpdate();\n\n    if (this.autoValidateTemplate) this.validateTemplates();\n    if (this.autoValidateSchema) this.validateSchema();\n  }\n\n  async performUpdate() {\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise<void>(resolve => requestAnimationFrame(() => resolve()));\n    super.performUpdate();\n  }\n\n  constructor() {\n    super();\n\n    window.addEventListener('oscd-edit', this.autoValidate.bind(this));\n    window.addEventListener('oscd-open', this.autoValidate.bind(this));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderValidatorsIssues(issues: IssueDetail[]): TemplateResult[] {\n    if (issues.length === 0)\n      return [html`<li divider padded role=\"separator\"></li>`];\n    return [\n      html`<li divider padded role=\"separator\"></li>`,\n      ...issues.map(\n        issue => html` <abbr title=\"${`${issue.title}\\n${issue.message}`}\"\n          ><mwc-list-item ?twoline=${!!issue.message}>\n            <span> ${issue.title}</span>\n            <span slot=\"secondary\">${issue.message}</span>\n          </mwc-list-item></abbr\n        >`\n      ),\n    ];\n  }\n\n  private renderTemplateValidator(): TemplateResult {\n    return html`<div style=\"display: flex; flex-direction: row\">\n        <div style=\"display: flex; flex-direction: column; flex: auto;\">\n          <div style=\"display: flex; flex-direction: row\">\n            <h3 style=\"flex:auto\">\n              ${`Template issues (${\n                this.waitForTemplateRun\n                  ? 'Run template validator'\n                  : this.templateIssues.length\n              })`}\n            </h3>\n            <mwc-icon-button-toggle\n              class=\"expand template\"\n              onIcon=\"expand_less\"\n              offIcon=\"expand_more\"\n              @click=\"${() => this.requestUpdate()}\"\n            ></mwc-icon-button-toggle>\n          </div>\n          <div style=\"display: flex; flex-direction: row\">\n            <div style=\"display:flex; align-items:center; flex:auto\">\n              <mwc-button\n                style=\"float: right\"\n                label=\"${`${\n                  this.waitForTemplateRun ? '' : 'Re-'\n                }Run manual validation`}\"\n                @click=\"${this.validateTemplates}\"\n              ></mwc-button>\n            </div>\n            <div style=\"display: flex\">\n              <mwc-formfield label=\"Auto validate on change\" alignEnd>\n                <mwc-switch\n                  @click=\"${() => {\n                    this.autoValidateTemplate = !this.autoValidateTemplate;\n                  }}\"\n                ></mwc-switch>\n              </mwc-formfield>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.expandTemplate && this.expandTemplate.on\n        ? html`<mwc-list>\n            <li divider padded role=\"separator\"></li>\n          </mwc-list>`\n        : html`<mwc-list id=\"content\" wrapFocus\n            >${this.renderValidatorsIssues(this.templateIssues)}</mwc-list\n          >`}`;\n  }\n\n  private renderSchemaValidator(): TemplateResult {\n    return html`<div style=\"display: flex; flex-direction: row\">\n        <div style=\"display: flex; flex-direction: column; flex: auto;\">\n          <div style=\"display: flex; flex-direction: row\">\n            <h3 style=\"flex:auto\">\n              ${`Schema issues (${\n                this.waitForSchemaRun\n                  ? 'Run schema validator'\n                  : this.schemaIssues.length\n              })`}\n            </h3>\n            <mwc-icon-button-toggle\n              class=\"expand schema\"\n              onIcon=\"expand_less\"\n              offIcon=\"expand_more\"\n              @click=\"${() => this.requestUpdate()}\"\n            ></mwc-icon-button-toggle>\n          </div>\n          <div style=\"display: flex; flex-direction: row\">\n            <div style=\"display:flex; align-items:center; flex:auto\">\n              <mwc-button\n                style=\"float: right\"\n                label=\"${`${\n                  this.waitForSchemaRun ? '' : 'Re-'\n                }Run manual validation`}\"\n                @click=\"${this.validateSchema}\"\n              ></mwc-button>\n            </div>\n            <div style=\"display: flex\">\n              <mwc-formfield label=\"Auto validate on change\" alignEnd>\n                <mwc-switch\n                  selected\n                  @click=\"${() => {\n                    this.autoValidateSchema = !this.autoValidateSchema;\n                  }}\"\n                ></mwc-switch>\n              </mwc-formfield>\n            </div>\n          </div>\n        </div>\n      </div>\n      ${this.expandSchema && this.expandSchema.on\n        ? html`<mwc-list>\n            <li divider padded role=\"separator\"></li>\n          </mwc-list>`\n        : html`<mwc-list id=\"content\" wrapFocus\n            >${this.renderValidatorsIssues(this.schemaIssues)}</mwc-list\n          >`}`;\n  }\n\n  render(): TemplateResult {\n    if (!this.doc)\n      return html`<mwc-dialog\n        ><div>No SCL file loaded, yet!</div>\n        <mwc-button\n          label=\"Cancel\"\n          slot=\"secondaryAction\"\n          dialogAction=\"close\"\n        ></mwc-button>\n      </mwc-dialog>`;\n\n    return html`<mwc-dialog>\n        ${this.renderSchemaValidator()}${this.renderTemplateValidator()}\n        <mwc-button\n          label=\"Cancel\"\n          slot=\"secondaryAction\"\n          dialogAction=\"close\"\n        ></mwc-button>\n      </mwc-dialog>\n      <mwc-snackbar id=\"alertSchemaIssue\" .timeoutMs=${5000}>\n        <mwc-button slot=\"action\" @click=${() => this.dialog.show()}\n          >DETAIL</mwc-button\n        > </mwc-snackbar\n      ><mwc-snackbar id=\"alertTemplateIssue\" .timeoutMs=${4000}>\n        <mwc-button slot=\"action\" @click=${() => this.dialog.show()}\n          >DETAIL</mwc-button\n        >\n      </mwc-snackbar>`;\n  }\n\n  static styles = css`\n    mwc-dialog {\n      --mdc-dialog-max-width: 90vw;\n      --mdc-dialog-min-width: 50vw;\n    }\n  `;\n}\n"]}