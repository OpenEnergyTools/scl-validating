{"version":3,"file":"scl-validating.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/@lit/reactive-element/css-tag.js","../node_modules/@lit/reactive-element/reactive-element.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-element/lit-element.js","../node_modules/@lit/reactive-element/decorators/custom-element.js","../node_modules/@lit/reactive-element/decorators/property.js","../node_modules/@lit/reactive-element/decorators/state.js","../node_modules/@lit/reactive-element/decorators/base.js","../node_modules/@lit/reactive-element/decorators/event-options.js","../node_modules/@lit/reactive-element/decorators/query.js","../node_modules/@lit/reactive-element/decorators/query-async.js","../node_modules/@lit/reactive-element/decorators/query-assigned-elements.js","../node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js","../node_modules/@material/mwc-icon/mwc-icon-host.css.js","../node_modules/@material/mwc-icon/mwc-icon.js","../node_modules/@material/dom/ponyfill.js","../node_modules/@material/mwc-base/utils.js","../node_modules/@material/mwc-base/base-element.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/util.js","../node_modules/@material/ripple/foundation.js","../node_modules/lit-html/directive.js","../node_modules/lit-html/directives/class-map.js","../node_modules/lit-html/directives/style-map.js","../node_modules/@material/mwc-ripple/mwc-ripple-base.js","../node_modules/@material/mwc-ripple/mwc-ripple.css.js","../node_modules/@material/mwc-ripple/mwc-ripple.js","../node_modules/@material/mwc-base/aria-property.js","../node_modules/@material/mwc-ripple/ripple-handlers.js","../node_modules/lit-html/directives/if-defined.js","../node_modules/@material/mwc-button/mwc-button-base.js","../node_modules/@material/mwc-button/styles.css.js","../node_modules/@material/mwc-button/mwc-button.js","../node_modules/@material/mwc-base/observer.js","../node_modules/@material/mwc-list/mwc-list-item-base.js","../node_modules/@material/mwc-list/mwc-list-item.css.js","../node_modules/@material/mwc-list/mwc-list-item.js","../node_modules/@material/dom/keyboard.js","../node_modules/@material/list/constants.js","../node_modules/@material/mwc-list/mwc-list-foundation.js","../node_modules/@material/mwc-list/mwc-list-base.js","../node_modules/@material/mwc-list/mwc-list.css.js","../node_modules/@material/mwc-list/mwc-list.js","../../foundation/utils.ts","../../foundation/schemas.ts","../../schema/validateSchema.ts","../../schema/templates/dabda.ts","../../schema/templates/datype.ts","../../schema/templates/dosdo.ts","../../schema/templates/dotype.ts","../../schema/templates/lnodetype.ts","../../schema/templates/foundation.ts","../../schema/validateTemplates.ts","../../scl-validating.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=window,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),n=new WeakMap;class o{constructor(t,e,n){if(this._$cssResult$=!0,n!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=n.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&n.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new o(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const n=1===t.length?t[0]:e.reduce(((e,s,n)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[n+1]),t[0]);return new o(n,t,s)},S=(s,n)=>{e?s.adoptedStyleSheets=n.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):n.forEach((e=>{const n=document.createElement(\"style\"),o=t.litNonce;void 0!==o&&n.setAttribute(\"nonce\",o),n.textContent=e.cssText,s.appendChild(n)}))},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{o as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as i}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var s;const e=window,r=e.trustedTypes,h=r?r.emptyScript:\"\",o=e.reactiveElementPolyfillSupport,n={toAttribute(t,i){switch(i){case Boolean:t=t?h:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},a=(t,i)=>i!==t&&(i==i||t==t),l={attribute:!0,type:String,converter:n,reflect:!1,hasChanged:a};class d extends HTMLElement{constructor(){super(),this._$Ei=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$El=null,this.u()}static addInitializer(t){var i;this.finalize(),(null!==(i=this.h)&&void 0!==i?i:this.h=[]).push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this._$Ep(s,i);void 0!==e&&(this._$Ev.set(e,s),t.push(e))})),t}static createProperty(t,i=l){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s=\"symbol\"==typeof t?Symbol():\"__\"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const r=this[t];this[i]=e,this.requestUpdate(t,r,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||l}static finalize(){if(this.hasOwnProperty(\"finalized\"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),void 0!==t.h&&(this.h=[...t.h]),this.elementProperties=new Map(t.elementProperties),this._$Ev=new Map,this.hasOwnProperty(\"properties\")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(i){const s=[];if(Array.isArray(i)){const e=new Set(i.flat(1/0).reverse());for(const i of e)s.unshift(t(i))}else void 0!==i&&s.push(t(i));return s}static _$Ep(t,i){const s=i.attribute;return!1===s?void 0:\"string\"==typeof s?s:\"string\"==typeof t?t.toLowerCase():void 0}u(){var t;this._$E_=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$Eg(),this.requestUpdate(),null===(t=this.constructor.h)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this._$ES)&&void 0!==i?i:this._$ES=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this._$ES)||void 0===i||i.splice(this._$ES.indexOf(t)>>>0,1)}_$Eg(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this._$Ei.set(i,this[i]),delete this[i])}))}createRenderRoot(){var t;const s=null!==(t=this.shadowRoot)&&void 0!==t?t:this.attachShadow(this.constructor.shadowRootOptions);return i(s,this.constructor.elementStyles),s}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)}))}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)}))}attributeChangedCallback(t,i,s){this._$AK(t,s)}_$EO(t,i,s=l){var e;const r=this.constructor._$Ep(t,s);if(void 0!==r&&!0===s.reflect){const h=(void 0!==(null===(e=s.converter)||void 0===e?void 0:e.toAttribute)?s.converter:n).toAttribute(i,s.type);this._$El=t,null==h?this.removeAttribute(r):this.setAttribute(r,h),this._$El=null}}_$AK(t,i){var s;const e=this.constructor,r=e._$Ev.get(t);if(void 0!==r&&this._$El!==r){const t=e.getPropertyOptions(r),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==(null===(s=t.converter)||void 0===s?void 0:s.fromAttribute)?t.converter:n;this._$El=r,this[r]=h.fromAttribute(i,t.type),this._$El=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||a)(this[t],i)?(this._$AL.has(t)||this._$AL.set(t,i),!0===s.reflect&&this._$El!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this._$E_=this._$Ej())}async _$Ej(){this.isUpdatePending=!0;try{await this._$E_}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this._$Ei&&(this._$Ei.forEach(((t,i)=>this[i]=t)),this._$Ei=void 0);let i=!1;const s=this._$AL;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this._$Ek()}catch(t){throw i=!1,this._$Ek(),t}i&&this._$AE(s)}willUpdate(t){}_$AE(t){var i;null===(i=this._$ES)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$Ek(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$E_}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach(((t,i)=>this._$EO(i,this[i],t))),this._$EC=void 0),this._$Ek()}updated(t){}firstUpdated(t){}}d.finalized=!0,d.elementProperties=new Map,d.elementStyles=[],d.shadowRootOptions={mode:\"open\"},null==o||o({ReactiveElement:d}),(null!==(s=e.reactiveElementVersions)&&void 0!==s?s:e.reactiveElementVersions=[]).push(\"1.6.1\");export{d as ReactiveElement,n as defaultConverter,a as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nvar t;const i=window,s=i.trustedTypes,e=s?s.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,o=\"$lit$\",n=`lit$${(Math.random()+\"\").slice(9)}$`,l=\"?\"+n,h=`<${l}>`,r=document,d=()=>r.createComment(\"\"),u=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,c=Array.isArray,v=t=>c(t)||\"function\"==typeof(null==t?void 0:t[Symbol.iterator]),a=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,_=/-->/g,m=/>/g,p=RegExp(`>|${a}(?:([^\\\\s\"'>=/]+)(${a}*=${a}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),g=/'/g,$=/\"/g,y=/^(?:script|style|textarea|title)$/i,w=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=w(1),b=w(2),T=Symbol.for(\"lit-noChange\"),A=Symbol.for(\"lit-nothing\"),E=new WeakMap,C=r.createTreeWalker(r,129,null,!1),P=(t,i)=>{const s=t.length-1,l=[];let r,d=2===i?\"<svg>\":\"\",u=f;for(let i=0;i<s;i++){const s=t[i];let e,c,v=-1,a=0;for(;a<s.length&&(u.lastIndex=a,c=u.exec(s),null!==c);)a=u.lastIndex,u===f?\"!--\"===c[1]?u=_:void 0!==c[1]?u=m:void 0!==c[2]?(y.test(c[2])&&(r=RegExp(\"</\"+c[2],\"g\")),u=p):void 0!==c[3]&&(u=p):u===p?\">\"===c[0]?(u=null!=r?r:f,v=-1):void 0===c[1]?v=-2:(v=u.lastIndex-c[2].length,e=c[1],u=void 0===c[3]?p:'\"'===c[3]?$:g):u===$||u===g?u=p:u===_||u===m?u=f:(u=p,r=void 0);const w=u===p&&t[i+1].startsWith(\"/>\")?\" \":\"\";d+=u===f?s+h:v>=0?(l.push(e),s.slice(0,v)+o+s.slice(v)+n+w):s+n+(-2===v?(l.push(void 0),i):w)}const c=d+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\");if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return[void 0!==e?e.createHTML(c):c,l]};class V{constructor({strings:t,_$litType$:i},e){let h;this.parts=[];let r=0,u=0;const c=t.length-1,v=this.parts,[a,f]=P(t,i);if(this.el=V.createElement(a,e),C.currentNode=this.el.content,2===i){const t=this.el.content,i=t.firstChild;i.remove(),t.append(...i.childNodes)}for(;null!==(h=C.nextNode())&&v.length<c;){if(1===h.nodeType){if(h.hasAttributes()){const t=[];for(const i of h.getAttributeNames())if(i.endsWith(o)||i.startsWith(n)){const s=f[u++];if(t.push(i),void 0!==s){const t=h.getAttribute(s.toLowerCase()+o).split(n),i=/([.?@])?(.*)/.exec(s);v.push({type:1,index:r,name:i[2],strings:t,ctor:\".\"===i[1]?k:\"?\"===i[1]?I:\"@\"===i[1]?L:R})}else v.push({type:6,index:r})}for(const i of t)h.removeAttribute(i)}if(y.test(h.tagName)){const t=h.textContent.split(n),i=t.length-1;if(i>0){h.textContent=s?s.emptyScript:\"\";for(let s=0;s<i;s++)h.append(t[s],d()),C.nextNode(),v.push({type:2,index:++r});h.append(t[i],d())}}}else if(8===h.nodeType)if(h.data===l)v.push({type:2,index:r});else{let t=-1;for(;-1!==(t=h.data.indexOf(n,t+1));)v.push({type:7,index:r}),t+=n.length-1}r++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function N(t,i,s=t,e){var o,n,l,h;if(i===T)return i;let r=void 0!==e?null===(o=s._$Co)||void 0===o?void 0:o[e]:s._$Cl;const d=u(i)?void 0:i._$litDirective$;return(null==r?void 0:r.constructor)!==d&&(null===(n=null==r?void 0:r._$AO)||void 0===n||n.call(r,!1),void 0===d?r=void 0:(r=new d(t),r._$AT(t,s,e)),void 0!==e?(null!==(l=(h=s)._$Co)&&void 0!==l?l:h._$Co=[])[e]=r:s._$Cl=r),void 0!==r&&(i=N(t,r._$AS(t,i.values),r,e)),i}class S{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){var i;const{el:{content:s},parts:e}=this._$AD,o=(null!==(i=null==t?void 0:t.creationScope)&&void 0!==i?i:r).importNode(s,!0);C.currentNode=o;let n=C.nextNode(),l=0,h=0,d=e[0];for(;void 0!==d;){if(l===d.index){let i;2===d.type?i=new M(n,n.nextSibling,this,t):1===d.type?i=new d.ctor(n,d.name,d.strings,this,t):6===d.type&&(i=new z(n,this,t)),this._$AV.push(i),d=e[++h]}l!==(null==d?void 0:d.index)&&(n=C.nextNode(),l++)}return C.currentNode=r,o}v(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class M{constructor(t,i,s,e){var o;this.type=2,this._$AH=A,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cp=null===(o=null==e?void 0:e.isConnected)||void 0===o||o}get _$AU(){var t,i;return null!==(i=null===(t=this._$AM)||void 0===t?void 0:t._$AU)&&void 0!==i?i:this._$Cp}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===(null==t?void 0:t.nodeType)&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=N(this,t,i),u(t)?t===A||null==t||\"\"===t?(this._$AH!==A&&this._$AR(),this._$AH=A):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):v(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==A&&u(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){var i;const{values:s,_$litType$:e}=t,o=\"number\"==typeof e?this._$AC(t):(void 0===e.el&&(e.el=V.createElement(e.h,this.options)),e);if((null===(i=this._$AH)||void 0===i?void 0:i._$AD)===o)this._$AH.v(s);else{const t=new S(o,this),i=t.u(this.options);t.v(s),this.$(i),this._$AH=t}}_$AC(t){let i=E.get(t.strings);return void 0===i&&E.set(t.strings,i=new V(t)),i}T(t){c(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const o of t)e===i.length?i.push(s=new M(this.k(d()),this.k(d()),this,this.options)):s=i[e],s._$AI(o),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){var i;void 0===this._$AM&&(this._$Cp=t,null===(i=this._$AP)||void 0===i||i.call(this,t))}}class R{constructor(t,i,s,e,o){this.type=1,this._$AH=A,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=o,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=A}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(t,i=this,s,e){const o=this.strings;let n=!1;if(void 0===o)t=N(this,t,i,0),n=!u(t)||t!==this._$AH&&t!==T,n&&(this._$AH=t);else{const e=t;let l,h;for(t=o[0],l=0;l<o.length-1;l++)h=N(this,e[s+l],i,l),h===T&&(h=this._$AH[l]),n||(n=!u(h)||h!==this._$AH[l]),h===A?t=A:t!==A&&(t+=(null!=h?h:\"\")+o[l+1]),this._$AH[l]=h}n&&!e&&this.j(t)}j(t){t===A?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=t?t:\"\")}}class k extends R{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===A?void 0:t}}const H=s?s.emptyScript:\"\";class I extends R{constructor(){super(...arguments),this.type=4}j(t){t&&t!==A?this.element.setAttribute(this.name,H):this.element.removeAttribute(this.name)}}class L extends R{constructor(t,i,s,e,o){super(t,i,s,e,o),this.type=5}_$AI(t,i=this){var s;if((t=null!==(s=N(this,t,i,0))&&void 0!==s?s:A)===T)return;const e=this._$AH,o=t===A&&e!==A||t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive,n=t!==A&&(e===A||o);o&&this.element.removeEventListener(this.name,this,e),n&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i,s;\"function\"==typeof this._$AH?this._$AH.call(null!==(s=null===(i=this.options)||void 0===i?void 0:i.host)&&void 0!==s?s:this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){N(this,t)}}const Z={O:o,P:n,A:l,C:1,M:P,L:S,D:v,R:N,I:M,V:R,H:I,N:L,U:k,F:z},j=i.litHtmlPolyfillSupport;null==j||j(V,M),(null!==(t=i.litHtmlVersions)&&void 0!==t?t:i.litHtmlVersions=[]).push(\"2.7.4\");const B=(t,i,s)=>{var e,o;const n=null!==(e=null==s?void 0:s.renderBefore)&&void 0!==e?e:i;let l=n._$litPart$;if(void 0===l){const t=null!==(o=null==s?void 0:s.renderBefore)&&void 0!==o?o:null;n._$litPart$=l=new M(i.insertBefore(d(),t),t,void 0,null!=s?s:{})}return l._$AI(t),l};export{Z as _$LH,x as html,T as noChange,A as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as i}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var l,o;const r=t;class s extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var t,e;const i=super.createRenderRoot();return null!==(t=(e=this.renderOptions).renderBefore)&&void 0!==t||(e.renderBefore=i.firstChild),i}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(i,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),null===(t=this._$Do)||void 0===t||t.setConnected(!1)}render(){return i}}s.finalized=!0,s._$litElement$=!0,null===(l=globalThis.litElementHydrateSupport)||void 0===l||l.call(globalThis,{LitElement:s});const n=globalThis.litElementPolyfillSupport;null==n||n({LitElement:s});const h={_$AK:(t,e,i)=>{t._$AK(e,i)},_$AL:t=>t._$AL};(null!==(o=globalThis.litElementVersions)&&void 0!==o?o:globalThis.litElementVersions=[]).push(\"3.3.2\");export{s as LitElement,r as UpdatingElement,h as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=e=>n=>\"function\"==typeof n?((e,n)=>(customElements.define(e,n),n))(e,n):((e,n)=>{const{kind:t,elements:s}=n;return{kind:t,elements:s,finisher(n){customElements.define(e,n)}}})(e,n);export{e as customElement};\n//# sourceMappingURL=custom-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst i=(i,e)=>\"method\"===e.kind&&e.descriptor&&!(\"value\"in e.descriptor)?{...e,finisher(n){n.createProperty(e.key,i)}}:{kind:\"field\",key:Symbol(),placement:\"own\",descriptor:{},originalKey:e.key,initializer(){\"function\"==typeof e.initializer&&(this[e.key]=e.initializer.call(this))},finisher(n){n.createProperty(e.key,i)}};function e(e){return(n,t)=>void 0!==t?((i,e,n)=>{e.constructor.createProperty(n,i)})(e,n,t):i(e,n)}export{e as property};\n//# sourceMappingURL=property.js.map\n","import{property as r}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function t(t){return r({...t,state:!0})}export{t as state};\n//# sourceMappingURL=state.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=(e,t,o)=>{Object.defineProperty(t,o,e)},t=(e,t)=>({kind:\"method\",placement:\"prototype\",key:t.key,descriptor:e}),o=({finisher:e,descriptor:t})=>(o,n)=>{var r;if(void 0===n){const n=null!==(r=o.originalKey)&&void 0!==r?r:o.key,i=null!=t?{kind:\"method\",placement:\"prototype\",key:n,descriptor:t(o.key)}:{...o,key:n};return null!=e&&(i.finisher=function(t){e(t,n)}),i}{const r=o.constructor;void 0!==t&&Object.defineProperty(o,n,t(n)),null==e||e(r,n)}};export{o as decorateProperty,e as legacyPrototypeMethod,t as standardPrototypeMethod};\n//# sourceMappingURL=base.js.map\n","import{decorateProperty as r}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function e(e){return r({finisher:(r,t)=>{Object.assign(r.prototype[t],e)}})}export{e as eventOptions};\n//# sourceMappingURL=event-options.js.map\n","import{decorateProperty as o}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function i(i,n){return o({descriptor:o=>{const t={get(){var o,n;return null!==(n=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(i))&&void 0!==n?n:null},enumerable:!0,configurable:!0};if(n){const n=\"symbol\"==typeof o?Symbol():\"__\"+o;t.get=function(){var o,t;return void 0===this[n]&&(this[n]=null!==(t=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(i))&&void 0!==t?t:null),this[n]}}return t}})}export{i as query};\n//# sourceMappingURL=query.js.map\n","import{decorateProperty as r}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction e(e){return r({descriptor:r=>({async get(){var r;return await this.updateComplete,null===(r=this.renderRoot)||void 0===r?void 0:r.querySelector(e)},enumerable:!0,configurable:!0})})}export{e as queryAsync};\n//# sourceMappingURL=query-async.js.map\n","import{decorateProperty as o}from\"./base.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var n;const e=null!=(null===(n=window.HTMLSlotElement)||void 0===n?void 0:n.prototype.assignedElements)?(o,n)=>o.assignedElements(n):(o,n)=>o.assignedNodes(n).filter((o=>o.nodeType===Node.ELEMENT_NODE));function l(n){const{slot:l,selector:t}=null!=n?n:{};return o({descriptor:o=>({get(){var o;const r=\"slot\"+(l?`[name=${l}]`:\":not([name])\"),i=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(r),s=null!=i?e(i,n):[];return t?s.filter((o=>o.matches(t))):s},enumerable:!0,configurable:!0})})}export{l as queryAssignedElements};\n//# sourceMappingURL=query-assigned-elements.js.map\n","import{decorateProperty as e}from\"./base.js\";import{queryAssignedElements as t}from\"./query-assigned-elements.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function o(o,n,r){let l,s=o;return\"object\"==typeof o?(s=o.slot,l=o):l={flatten:n},r?t({slot:s,flatten:n,selector:r}):e({descriptor:e=>({get(){var e,t;const o=\"slot\"+(s?`[name=${s}]`:\":not([name])\"),n=null===(e=this.renderRoot)||void 0===e?void 0:e.querySelector(o);return null!==(t=null==n?void 0:n.assignedNodes(l))&&void 0!==t?t:[]},enumerable:!0,configurable:!0})})}export{o as queryAssignedNodes};\n//# sourceMappingURL=query-assigned-nodes.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `:host{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}`;\n//# sourceMappingURL=mwc-icon-host.css.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from './mwc-icon-host.css.js';\n/** @soyCompatible */\nlet Icon = class Icon extends LitElement {\n    /** @soyTemplate */\n    render() {\n        return html `<span><slot></slot></span>`;\n    }\n};\nIcon.styles = [styles];\nIcon = __decorate([\n    customElement('mwc-icon')\n], Icon);\nexport { Icon };\n//# sourceMappingURL=mwc-icon.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\nexport function closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    var el = element;\n    while (el) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\nexport function matches(element, selector) {\n    var nativeMatches = element.matches\n        || element.webkitMatchesSelector\n        || element.msMatchesSelector;\n    return nativeMatches.call(element, selector);\n}\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    var htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    var clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    var scrollWidth = clone.scrollWidth;\n    document.documentElement.removeChild(clone);\n    return scrollWidth;\n}\n//# sourceMappingURL=ponyfill.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nexport function addHasRemoveClass(element) {\n    return {\n        addClass: (className) => {\n            element.classList.add(className);\n        },\n        removeClass: (className) => {\n            element.classList.remove(className);\n        },\n        hasClass: (className) => element.classList.contains(className),\n    };\n}\nlet supportsPassive = false;\nconst fn = () => { };\nconst optionsBlock = {\n    get passive() {\n        supportsPassive = true;\n        return false;\n    }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\nexport const deepActiveElementPath = (doc = window.document) => {\n    let activeElement = doc.activeElement;\n    const path = [];\n    if (!activeElement) {\n        return path;\n    }\n    while (activeElement) {\n        path.push(activeElement);\n        if (activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        else {\n            break;\n        }\n    }\n    return path;\n};\nexport const doesElementContainFocus = (element) => {\n    const activePath = deepActiveElementPath();\n    if (!activePath.length) {\n        return false;\n    }\n    const deepActiveElement = activePath[activePath.length - 1];\n    const focusEv = new Event('check-if-focused', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    document.body.addEventListener('check-if-focused', listener);\n    deepActiveElement.dispatchEvent(focusEv);\n    document.body.removeEventListener('check-if-focused', listener);\n    return composedPath.indexOf(element) !== -1;\n};\n//# sourceMappingURL=utils.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { LitElement } from 'lit';\nexport { addHasRemoveClass } from './utils.js';\n/** @soyCompatible */\nexport class BaseElement extends LitElement {\n    click() {\n        if (this.mdcRoot) {\n            this.mdcRoot.focus();\n            this.mdcRoot.click();\n            return;\n        }\n        super.click();\n    }\n    /**\n     * Create and attach the MDC Foundation to the instance\n     */\n    createFoundation() {\n        if (this.mdcFoundation !== undefined) {\n            this.mdcFoundation.destroy();\n        }\n        if (this.mdcFoundationClass) {\n            this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n            this.mdcFoundation.init();\n        }\n    }\n    firstUpdated() {\n        this.createFoundation();\n    }\n}\n//# sourceMappingURL=base-element.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n    // given that it's an 'upgrade' to an existing component. That being said it is the root\n    // CSS class that all other CSS classes derive from.\n    BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n    FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n    FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n    ROOT: 'mdc-ripple-upgraded',\n    UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n};\nexport var strings = {\n    VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n    VAR_FG_SIZE: '--mdc-ripple-fg-size',\n    VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n    VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n    VAR_LEFT: '--mdc-ripple-left',\n    VAR_TOP: '--mdc-ripple-top',\n};\nexport var numbers = {\n    DEACTIVATION_TIMEOUT_MS: 225,\n    FG_DEACTIVATION_MS: 150,\n    INITIAL_ORIGIN_SCALE: 0.6,\n    PADDING: 10,\n    TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n//# sourceMappingURL=constants.js.map","/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nvar supportsCssVariables_;\nexport function supportsCssVariables(windowObj, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    var CSS = windowObj.CSS;\n    var supportsCssVars = supportsCssVariables_;\n    if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n        return supportsCssVariables_;\n    }\n    var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n    if (!supportsFunctionPresent) {\n        return false;\n    }\n    var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n    // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n    // See: README section on Safari\n    var weAreFeatureDetectingSafari10plus = (CSS.supports('(--css-vars: yes)') &&\n        CSS.supports('color', '#00000000'));\n    supportsCssVars =\n        explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n    if (!forceRefresh) {\n        supportsCssVariables_ = supportsCssVars;\n    }\n    return supportsCssVars;\n}\nexport function getNormalizedEventCoords(evt, pageOffset, clientRect) {\n    if (!evt) {\n        return { x: 0, y: 0 };\n    }\n    var x = pageOffset.x, y = pageOffset.y;\n    var documentX = x + clientRect.left;\n    var documentY = y + clientRect.top;\n    var normalizedX;\n    var normalizedY;\n    // Determine touch point relative to the ripple container.\n    if (evt.type === 'touchstart') {\n        var touchEvent = evt;\n        normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n        normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n    }\n    else {\n        var mouseEvent = evt;\n        normalizedX = mouseEvent.pageX - documentX;\n        normalizedY = mouseEvent.pageY - documentY;\n    }\n    return { x: normalizedX, y: normalizedY };\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util';\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = [\n    'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = [\n    'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n// simultaneous nested activations\nvar activatedTargets = [];\nvar MDCRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCRippleFoundation, _super);\n    function MDCRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.activationAnimationHasEnded = false;\n        _this.activationTimer = 0;\n        _this.fgDeactivationRemovalTimer = 0;\n        _this.fgScale = '0';\n        _this.frame = { width: 0, height: 0 };\n        _this.initialSize = 0;\n        _this.layoutFrame = 0;\n        _this.maxRadius = 0;\n        _this.unboundedCoords = { left: 0, top: 0 };\n        _this.activationState = _this.defaultActivationState();\n        _this.activationTimerCallback = function () {\n            _this.activationAnimationHasEnded = true;\n            _this.runDeactivationUXLogicIfReady();\n        };\n        _this.activateHandler = function (e) {\n            _this.activateImpl(e);\n        };\n        _this.deactivateHandler = function () {\n            _this.deactivateImpl();\n        };\n        _this.focusHandler = function () {\n            _this.handleFocus();\n        };\n        _this.blurHandler = function () {\n            _this.handleBlur();\n        };\n        _this.resizeHandler = function () {\n            _this.layout();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                browserSupportsCssVars: function () { return true; },\n                computeBoundingRect: function () {\n                    return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 });\n                },\n                containsEventTarget: function () { return true; },\n                deregisterDocumentInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                deregisterResizeHandler: function () { return undefined; },\n                getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },\n                isSurfaceActive: function () { return true; },\n                isSurfaceDisabled: function () { return true; },\n                isUnbounded: function () { return true; },\n                registerDocumentInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                registerResizeHandler: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                updateCssVariable: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCRippleFoundation.prototype.init = function () {\n        var _this = this;\n        var supportsPressRipple = this.supportsPressRipple();\n        this.registerRootHandlers(supportsPressRipple);\n        if (supportsPressRipple) {\n            var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.addClass(ROOT_1);\n                if (_this.adapter.isUnbounded()) {\n                    _this.adapter.addClass(UNBOUNDED_1);\n                    // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n                    _this.layoutInternal();\n                }\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.destroy = function () {\n        var _this = this;\n        if (this.supportsPressRipple()) {\n            if (this.activationTimer) {\n                clearTimeout(this.activationTimer);\n                this.activationTimer = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n            }\n            if (this.fgDeactivationRemovalTimer) {\n                clearTimeout(this.fgDeactivationRemovalTimer);\n                this.fgDeactivationRemovalTimer = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n            }\n            var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.removeClass(ROOT_2);\n                _this.adapter.removeClass(UNBOUNDED_2);\n                _this.removeCssVars();\n            });\n        }\n        this.deregisterRootHandlers();\n        this.deregisterDeactivationHandlers();\n    };\n    /**\n     * @param evt Optional event containing position information.\n     */\n    MDCRippleFoundation.prototype.activate = function (evt) {\n        this.activateImpl(evt);\n    };\n    MDCRippleFoundation.prototype.deactivate = function () {\n        this.deactivateImpl();\n    };\n    MDCRippleFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame) {\n            cancelAnimationFrame(this.layoutFrame);\n        }\n        this.layoutFrame = requestAnimationFrame(function () {\n            _this.layoutInternal();\n            _this.layoutFrame = 0;\n        });\n    };\n    MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n        if (unbounded) {\n            this.adapter.addClass(UNBOUNDED);\n        }\n        else {\n            this.adapter.removeClass(UNBOUNDED);\n        }\n    };\n    MDCRippleFoundation.prototype.handleFocus = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    MDCRippleFoundation.prototype.handleBlur = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    /**\n     * We compute this property so that we are not querying information about the client\n     * until the point in time where the foundation requests it. This prevents scenarios where\n     * client-side feature-detection may happen too early, such as when components are rendered on the server\n     * and then initialized at mount time on the client.\n     */\n    MDCRippleFoundation.prototype.supportsPressRipple = function () {\n        return this.adapter.browserSupportsCssVars();\n    };\n    MDCRippleFoundation.prototype.defaultActivationState = function () {\n        return {\n            activationEvent: undefined,\n            hasDeactivationUXRun: false,\n            isActivated: false,\n            isProgrammatic: false,\n            wasActivatedByPointer: false,\n            wasElementMadeActive: false,\n        };\n    };\n    /**\n     * supportsPressRipple Passed from init to save a redundant function call\n     */\n    MDCRippleFoundation.prototype.registerRootHandlers = function (supportsPressRipple) {\n        var e_1, _a;\n        if (supportsPressRipple) {\n            try {\n                for (var ACTIVATION_EVENT_TYPES_1 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next(); !ACTIVATION_EVENT_TYPES_1_1.done; ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next()) {\n                    var evtType = ACTIVATION_EVENT_TYPES_1_1.value;\n                    this.adapter.registerInteractionHandler(evtType, this.activateHandler);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (ACTIVATION_EVENT_TYPES_1_1 && !ACTIVATION_EVENT_TYPES_1_1.done && (_a = ACTIVATION_EVENT_TYPES_1.return)) _a.call(ACTIVATION_EVENT_TYPES_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.adapter.isUnbounded()) {\n                this.adapter.registerResizeHandler(this.resizeHandler);\n            }\n        }\n        this.adapter.registerInteractionHandler('focus', this.focusHandler);\n        this.adapter.registerInteractionHandler('blur', this.blurHandler);\n    };\n    MDCRippleFoundation.prototype.registerDeactivationHandlers = function (evt) {\n        var e_2, _a;\n        if (evt.type === 'keydown') {\n            this.adapter.registerInteractionHandler('keyup', this.deactivateHandler);\n        }\n        else {\n            try {\n                for (var POINTER_DEACTIVATION_EVENT_TYPES_1 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next(); !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done; POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next()) {\n                    var evtType = POINTER_DEACTIVATION_EVENT_TYPES_1_1.value;\n                    this.adapter.registerDocumentInteractionHandler(evtType, this.deactivateHandler);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (POINTER_DEACTIVATION_EVENT_TYPES_1_1 && !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_1.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterRootHandlers = function () {\n        var e_3, _a;\n        try {\n            for (var ACTIVATION_EVENT_TYPES_2 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next(); !ACTIVATION_EVENT_TYPES_2_1.done; ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next()) {\n                var evtType = ACTIVATION_EVENT_TYPES_2_1.value;\n                this.adapter.deregisterInteractionHandler(evtType, this.activateHandler);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (ACTIVATION_EVENT_TYPES_2_1 && !ACTIVATION_EVENT_TYPES_2_1.done && (_a = ACTIVATION_EVENT_TYPES_2.return)) _a.call(ACTIVATION_EVENT_TYPES_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this.adapter.deregisterInteractionHandler('focus', this.focusHandler);\n        this.adapter.deregisterInteractionHandler('blur', this.blurHandler);\n        if (this.adapter.isUnbounded()) {\n            this.adapter.deregisterResizeHandler(this.resizeHandler);\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterDeactivationHandlers = function () {\n        var e_4, _a;\n        this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler);\n        try {\n            for (var POINTER_DEACTIVATION_EVENT_TYPES_2 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next(); !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done; POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next()) {\n                var evtType = POINTER_DEACTIVATION_EVENT_TYPES_2_1.value;\n                this.adapter.deregisterDocumentInteractionHandler(evtType, this.deactivateHandler);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (POINTER_DEACTIVATION_EVENT_TYPES_2_1 && !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_2.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_2);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    MDCRippleFoundation.prototype.removeCssVars = function () {\n        var _this = this;\n        var rippleStrings = MDCRippleFoundation.strings;\n        var keys = Object.keys(rippleStrings);\n        keys.forEach(function (key) {\n            if (key.indexOf('VAR_') === 0) {\n                _this.adapter.updateCssVariable(rippleStrings[key], null);\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.activateImpl = function (evt) {\n        var _this = this;\n        if (this.adapter.isSurfaceDisabled()) {\n            return;\n        }\n        var activationState = this.activationState;\n        if (activationState.isActivated) {\n            return;\n        }\n        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n        var previousActivationEvent = this.previousActivationEvent;\n        var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n        if (isSameInteraction) {\n            return;\n        }\n        activationState.isActivated = true;\n        activationState.isProgrammatic = evt === undefined;\n        activationState.activationEvent = evt;\n        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n        var hasActivatedChild = evt !== undefined &&\n            activatedTargets.length > 0 &&\n            activatedTargets.some(function (target) { return _this.adapter.containsEventTarget(target); });\n        if (hasActivatedChild) {\n            // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n            this.resetActivationState();\n            return;\n        }\n        if (evt !== undefined) {\n            activatedTargets.push(evt.target);\n            this.registerDeactivationHandlers(evt);\n        }\n        activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n        if (activationState.wasElementMadeActive) {\n            this.animateActivation();\n        }\n        requestAnimationFrame(function () {\n            // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n            activatedTargets = [];\n            if (!activationState.wasElementMadeActive\n                && evt !== undefined\n                && (evt.key === ' ' || evt.keyCode === 32)) {\n                // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n                // active states inconsistently when they're called within event handling code:\n                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n                // variable is set within a rAF callback for a submit button interaction (#2241).\n                activationState.wasElementMadeActive = _this.checkElementMadeActive(evt);\n                if (activationState.wasElementMadeActive) {\n                    _this.animateActivation();\n                }\n            }\n            if (!activationState.wasElementMadeActive) {\n                // Reset activation state immediately if element was not made active.\n                _this.activationState = _this.defaultActivationState();\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.checkElementMadeActive = function (evt) {\n        return (evt !== undefined && evt.type === 'keydown') ?\n            this.adapter.isSurfaceActive() :\n            true;\n    };\n    MDCRippleFoundation.prototype.animateActivation = function () {\n        var _this = this;\n        var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n        var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;\n        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n        this.layoutInternal();\n        var translateStart = '';\n        var translateEnd = '';\n        if (!this.adapter.isUnbounded()) {\n            var _c = this.getFgTranslationCoordinates(), startPoint = _c.startPoint, endPoint = _c.endPoint;\n            translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n            translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n        }\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n        // Cancel any ongoing activation/deactivation animations\n        clearTimeout(this.activationTimer);\n        clearTimeout(this.fgDeactivationRemovalTimer);\n        this.rmBoundedActivationClasses();\n        this.adapter.removeClass(FG_DEACTIVATION);\n        // Force layout in order to re-trigger the animation.\n        this.adapter.computeBoundingRect();\n        this.adapter.addClass(FG_ACTIVATION);\n        this.activationTimer = setTimeout(function () {\n            _this.activationTimerCallback();\n        }, DEACTIVATION_TIMEOUT_MS);\n    };\n    MDCRippleFoundation.prototype.getFgTranslationCoordinates = function () {\n        var _a = this.activationState, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;\n        var startPoint;\n        if (wasActivatedByPointer) {\n            startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n        }\n        else {\n            startPoint = {\n                x: this.frame.width / 2,\n                y: this.frame.height / 2,\n            };\n        }\n        // Center the element around the start point.\n        startPoint = {\n            x: startPoint.x - (this.initialSize / 2),\n            y: startPoint.y - (this.initialSize / 2),\n        };\n        var endPoint = {\n            x: (this.frame.width / 2) - (this.initialSize / 2),\n            y: (this.frame.height / 2) - (this.initialSize / 2),\n        };\n        return { startPoint: startPoint, endPoint: endPoint };\n    };\n    MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady = function () {\n        var _this = this;\n        // This method is called both when a pointing device is released, and when the activation animation ends.\n        // The deactivation animation should only run after both of those occur.\n        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n        var _a = this.activationState, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;\n        var activationHasEnded = hasDeactivationUXRun || !isActivated;\n        if (activationHasEnded && this.activationAnimationHasEnded) {\n            this.rmBoundedActivationClasses();\n            this.adapter.addClass(FG_DEACTIVATION);\n            this.fgDeactivationRemovalTimer = setTimeout(function () {\n                _this.adapter.removeClass(FG_DEACTIVATION);\n            }, numbers.FG_DEACTIVATION_MS);\n        }\n    };\n    MDCRippleFoundation.prototype.rmBoundedActivationClasses = function () {\n        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n        this.adapter.removeClass(FG_ACTIVATION);\n        this.activationAnimationHasEnded = false;\n        this.adapter.computeBoundingRect();\n    };\n    MDCRippleFoundation.prototype.resetActivationState = function () {\n        var _this = this;\n        this.previousActivationEvent = this.activationState.activationEvent;\n        this.activationState = this.defaultActivationState();\n        // Touch devices may fire additional events for the same interaction within a short time.\n        // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n        setTimeout(function () { return _this.previousActivationEvent = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    };\n    MDCRippleFoundation.prototype.deactivateImpl = function () {\n        var _this = this;\n        var activationState = this.activationState;\n        // This can happen in scenarios such as when you have a keyup event that blurs the element.\n        if (!activationState.isActivated) {\n            return;\n        }\n        var state = __assign({}, activationState);\n        if (activationState.isProgrammatic) {\n            requestAnimationFrame(function () {\n                _this.animateDeactivation(state);\n            });\n            this.resetActivationState();\n        }\n        else {\n            this.deregisterDeactivationHandlers();\n            requestAnimationFrame(function () {\n                _this.activationState.hasDeactivationUXRun = true;\n                _this.animateDeactivation(state);\n                _this.resetActivationState();\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.animateDeactivation = function (_a) {\n        var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;\n        if (wasActivatedByPointer || wasElementMadeActive) {\n            this.runDeactivationUXLogicIfReady();\n        }\n    };\n    MDCRippleFoundation.prototype.layoutInternal = function () {\n        var _this = this;\n        this.frame = this.adapter.computeBoundingRect();\n        var maxDim = Math.max(this.frame.height, this.frame.width);\n        // Surface diameter is treated differently for unbounded vs. bounded ripples.\n        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n        // `overflow: hidden`.\n        var getBoundedRadius = function () {\n            var hypotenuse = Math.sqrt(Math.pow(_this.frame.width, 2) + Math.pow(_this.frame.height, 2));\n            return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n        };\n        this.maxRadius = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n        var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n        // Unbounded ripple size should always be even number to equally center align.\n        if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n            this.initialSize = initialSize - 1;\n        }\n        else {\n            this.initialSize = initialSize;\n        }\n        this.fgScale = \"\" + this.maxRadius / this.initialSize;\n        this.updateLayoutCssVars();\n    };\n    MDCRippleFoundation.prototype.updateLayoutCssVars = function () {\n        var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;\n        this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize + \"px\");\n        this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale);\n        if (this.adapter.isUnbounded()) {\n            this.unboundedCoords = {\n                left: Math.round((this.frame.width / 2) - (this.initialSize / 2)),\n                top: Math.round((this.frame.height / 2) - (this.initialSize / 2)),\n            };\n            this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords.left + \"px\");\n            this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords.top + \"px\");\n        }\n    };\n    return MDCRippleFoundation;\n}(MDCFoundation));\nexport { MDCRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as i,Directive as s,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o=i(class extends s{constructor(t){var i;if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||(null===(i=t.strings)||void 0===i?void 0:i.length)>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((i=>t[i])).join(\" \")+\" \"}update(i,[s]){var r,o;if(void 0===this.it){this.it=new Set,void 0!==i.strings&&(this.nt=new Set(i.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in s)s[t]&&!(null===(r=this.nt)||void 0===r?void 0:r.has(t))&&this.it.add(t);return this.render(s)}const e=i.element.classList;this.it.forEach((t=>{t in s||(e.remove(t),this.it.delete(t))}));for(const t in s){const i=!!s[t];i===this.it.has(t)||(null===(o=this.nt)||void 0===o?void 0:o.has(t))||(i?(e.add(t),this.it.add(t)):(e.remove(t),this.it.delete(t)))}return t}});export{o as classMap};\n//# sourceMappingURL=class-map.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as e,Directive as r,PartType as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const i=\"important\",n=\" !\"+i,o=e(class extends r{constructor(t){var e;if(super(t),t.type!==s.ATTRIBUTE||\"style\"!==t.name||(null===(e=t.strings)||void 0===e?void 0:e.length)>2)throw Error(\"The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.\")}render(t){return Object.keys(t).reduce(((e,r)=>{const s=t[r];return null==s?e:e+`${r=r.includes(\"-\")?r:r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g,\"-$&\").toLowerCase()}:${s};`}),\"\")}update(e,[r]){const{style:s}=e.element;if(void 0===this.ut){this.ut=new Set;for(const t in r)this.ut.add(t);return this.render(r)}this.ut.forEach((t=>{null==r[t]&&(this.ut.delete(t),t.includes(\"-\")?s.removeProperty(t):s[t]=\"\")}));for(const t in r){const e=r[t];if(null!=e){this.ut.add(t);const r=\"string\"==typeof e&&e.endsWith(n);t.includes(\"-\")||r?s.setProperty(t,r?e.slice(0,-11):e,r?i:\"\"):s[t]=e}}return t}});export{o as styleMap};\n//# sourceMappingURL=style-map.js.map\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { matches } from '@material/dom/ponyfill.js';\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport MDCRippleFoundation from '@material/ripple/foundation.js';\nimport { html } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n/** @soyCompatible */\nexport class RippleBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.primary = false;\n        this.accent = false;\n        this.unbounded = false;\n        this.disabled = false;\n        this.activated = false;\n        this.selected = false;\n        this.internalUseStateLayerCustomProperties = false;\n        this.hovering = false;\n        this.bgFocused = false;\n        this.fgActivation = false;\n        this.fgDeactivation = false;\n        this.fgScale = '';\n        this.fgSize = '';\n        this.translateStart = '';\n        this.translateEnd = '';\n        this.leftPos = '';\n        this.topPos = '';\n        this.mdcFoundationClass = MDCRippleFoundation;\n    }\n    get isActive() {\n        return matches(this.parentElement || this, ':active');\n    }\n    createAdapter() {\n        return {\n            browserSupportsCssVars: () => true,\n            isUnbounded: () => this.unbounded,\n            isSurfaceActive: () => this.isActive,\n            isSurfaceDisabled: () => this.disabled,\n            addClass: (className) => {\n                switch (className) {\n                    case 'mdc-ripple-upgraded--background-focused':\n                        this.bgFocused = true;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-activation':\n                        this.fgActivation = true;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-deactivation':\n                        this.fgDeactivation = true;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            removeClass: (className) => {\n                switch (className) {\n                    case 'mdc-ripple-upgraded--background-focused':\n                        this.bgFocused = false;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-activation':\n                        this.fgActivation = false;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-deactivation':\n                        this.fgDeactivation = false;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            containsEventTarget: () => true,\n            registerInteractionHandler: () => undefined,\n            deregisterInteractionHandler: () => undefined,\n            registerDocumentInteractionHandler: () => undefined,\n            deregisterDocumentInteractionHandler: () => undefined,\n            registerResizeHandler: () => undefined,\n            deregisterResizeHandler: () => undefined,\n            updateCssVariable: (varName, value) => {\n                switch (varName) {\n                    case '--mdc-ripple-fg-scale':\n                        this.fgScale = value;\n                        break;\n                    case '--mdc-ripple-fg-size':\n                        this.fgSize = value;\n                        break;\n                    case '--mdc-ripple-fg-translate-end':\n                        this.translateEnd = value;\n                        break;\n                    case '--mdc-ripple-fg-translate-start':\n                        this.translateStart = value;\n                        break;\n                    case '--mdc-ripple-left':\n                        this.leftPos = value;\n                        break;\n                    case '--mdc-ripple-top':\n                        this.topPos = value;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            computeBoundingRect: () => (this.parentElement || this).getBoundingClientRect(),\n            getWindowPageOffset: () => ({ x: window.pageXOffset, y: window.pageYOffset }),\n        };\n    }\n    startPress(ev) {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.activate(ev);\n        });\n    }\n    endPress() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.deactivate();\n        });\n    }\n    startFocus() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.handleFocus();\n        });\n    }\n    endFocus() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.handleBlur();\n        });\n    }\n    startHover() {\n        this.hovering = true;\n    }\n    endHover() {\n        this.hovering = false;\n    }\n    /**\n     * Wait for the MDCFoundation to be created by `firstUpdated`\n     */\n    waitForFoundation(fn) {\n        if (this.mdcFoundation) {\n            fn();\n        }\n        else {\n            this.updateComplete.then(fn);\n        }\n    }\n    update(changedProperties) {\n        if (changedProperties.has('disabled')) {\n            // stop hovering when ripple is disabled to prevent a stuck \"hover\" state\n            // When re-enabled, the outer component will get a `mouseenter` event on\n            // the first movement, which will call `startHover()`\n            if (this.disabled) {\n                this.endHover();\n            }\n        }\n        super.update(changedProperties);\n    }\n    /** @soyTemplate */\n    render() {\n        const shouldActivateInPrimary = this.activated && (this.primary || !this.accent);\n        const shouldSelectInPrimary = this.selected && (this.primary || !this.accent);\n        /** @classMap */\n        const classes = {\n            'mdc-ripple-surface--accent': this.accent,\n            'mdc-ripple-surface--primary--activated': shouldActivateInPrimary,\n            'mdc-ripple-surface--accent--activated': this.accent && this.activated,\n            'mdc-ripple-surface--primary--selected': shouldSelectInPrimary,\n            'mdc-ripple-surface--accent--selected': this.accent && this.selected,\n            'mdc-ripple-surface--disabled': this.disabled,\n            'mdc-ripple-surface--hover': this.hovering,\n            'mdc-ripple-surface--primary': this.primary,\n            'mdc-ripple-surface--selected': this.selected,\n            'mdc-ripple-upgraded--background-focused': this.bgFocused,\n            'mdc-ripple-upgraded--foreground-activation': this.fgActivation,\n            'mdc-ripple-upgraded--foreground-deactivation': this.fgDeactivation,\n            'mdc-ripple-upgraded--unbounded': this.unbounded,\n            'mdc-ripple-surface--internal-use-state-layer-custom-properties': this.internalUseStateLayerCustomProperties,\n        };\n        return html `\n        <div class=\"mdc-ripple-surface mdc-ripple-upgraded ${classMap(classes)}\"\n          style=\"${styleMap({\n            '--mdc-ripple-fg-scale': this.fgScale,\n            '--mdc-ripple-fg-size': this.fgSize,\n            '--mdc-ripple-fg-translate-end': this.translateEnd,\n            '--mdc-ripple-fg-translate-start': this.translateStart,\n            '--mdc-ripple-left': this.leftPos,\n            '--mdc-ripple-top': this.topPos,\n        })}\"></div>`;\n    }\n}\n__decorate([\n    query('.mdc-ripple-surface')\n], RippleBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"primary\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"accent\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"unbounded\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"activated\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"selected\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"internalUseStateLayerCustomProperties\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"hovering\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"bgFocused\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"fgActivation\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"fgDeactivation\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"fgScale\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"fgSize\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"translateStart\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"translateEnd\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"leftPos\", void 0);\n__decorate([\n    state()\n], RippleBase.prototype, \"topPos\", void 0);\n//# sourceMappingURL=mwc-ripple-base.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `.mdc-ripple-surface{--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);will-change:transform,opacity;position:relative;outline:none;overflow:hidden}.mdc-ripple-surface::before,.mdc-ripple-surface::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}.mdc-ripple-surface::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1;z-index:var(--mdc-ripple-z-index, 1)}.mdc-ripple-surface::after{z-index:0;z-index:var(--mdc-ripple-z-index, 0)}.mdc-ripple-surface.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}.mdc-ripple-surface::before,.mdc-ripple-surface::after{top:calc(50% - 100%);left:calc(50% - 100%);width:200%;height:200%}.mdc-ripple-surface.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded],.mdc-ripple-upgraded--unbounded{overflow:visible}.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded]::after,.mdc-ripple-upgraded--unbounded::before,.mdc-ripple-upgraded--unbounded::after{top:calc(50% - 50%);left:calc(50% - 50%);width:100%;height:100%}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::before,.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::before,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{top:var(--mdc-ripple-top, calc(50% - 50%));left:var(--mdc-ripple-left, calc(50% - 50%));width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface[data-mdc-ripple-is-unbounded].mdc-ripple-upgraded::after,.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-ripple-surface::before,.mdc-ripple-surface::after{background-color:#000;background-color:var(--mdc-ripple-color, #000)}.mdc-ripple-surface:hover::before,.mdc-ripple-surface.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;display:block}:host .mdc-ripple-surface{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;will-change:unset}.mdc-ripple-surface--primary::before,.mdc-ripple-surface--primary::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary:hover::before,.mdc-ripple-surface--primary.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--primary.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--primary--activated::before{opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12)}.mdc-ripple-surface--primary--activated::before,.mdc-ripple-surface--primary--activated::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary--activated:hover::before,.mdc-ripple-surface--primary--activated.mdc-ripple-surface--hover::before{opacity:0.16;opacity:var(--mdc-ripple-hover-opacity, 0.16)}.mdc-ripple-surface--primary--activated.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary--activated:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--primary--activated.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--primary--selected::before{opacity:0.08;opacity:var(--mdc-ripple-selected-opacity, 0.08)}.mdc-ripple-surface--primary--selected::before,.mdc-ripple-surface--primary--selected::after{background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-ripple-surface--primary--selected:hover::before,.mdc-ripple-surface--primary--selected.mdc-ripple-surface--hover::before{opacity:0.12;opacity:var(--mdc-ripple-hover-opacity, 0.12)}.mdc-ripple-surface--primary--selected.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-focus-opacity, 0.2)}.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--primary--selected:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--primary--selected.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--accent::before,.mdc-ripple-surface--accent::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent:hover::before,.mdc-ripple-surface--accent.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--accent.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-ripple-surface--accent--activated::before{opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12)}.mdc-ripple-surface--accent--activated::before,.mdc-ripple-surface--accent--activated::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent--activated:hover::before,.mdc-ripple-surface--accent--activated.mdc-ripple-surface--hover::before{opacity:0.16;opacity:var(--mdc-ripple-hover-opacity, 0.16)}.mdc-ripple-surface--accent--activated.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent--activated:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--accent--activated.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-ripple-surface--accent--selected::before{opacity:0.08;opacity:var(--mdc-ripple-selected-opacity, 0.08)}.mdc-ripple-surface--accent--selected::before,.mdc-ripple-surface--accent--selected::after{background-color:#018786;background-color:var(--mdc-ripple-color, var(--mdc-theme-secondary, #018786))}.mdc-ripple-surface--accent--selected:hover::before,.mdc-ripple-surface--accent--selected.mdc-ripple-surface--hover::before{opacity:0.12;opacity:var(--mdc-ripple-hover-opacity, 0.12)}.mdc-ripple-surface--accent--selected.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-focus-opacity, 0.2)}.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--accent--selected:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.2;opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--accent--selected.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.2)}.mdc-ripple-surface--disabled{opacity:0}.mdc-ripple-surface--internal-use-state-layer-custom-properties::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties::after{background-color:#000;background-color:var(--mdc-ripple-hover-state-layer-color, #000)}.mdc-ripple-surface--internal-use-state-layer-custom-properties:hover::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-surface--hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-state-layer-opacity, 0.04)}.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-upgraded--background-focused::before,.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-state-layer-opacity, 0.12)}.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-ripple-surface--internal-use-state-layer-custom-properties:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-pressed-state-layer-opacity, 0.12)}.mdc-ripple-surface--internal-use-state-layer-custom-properties.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-pressed-state-layer-opacity, 0.12)}`;\n//# sourceMappingURL=mwc-ripple.css.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { customElement } from 'lit/decorators.js';\nimport { RippleBase } from './mwc-ripple-base.js';\nimport { styles } from './mwc-ripple.css.js';\n/** @soyCompatible */\nlet Ripple = class Ripple extends RippleBase {\n};\nRipple.styles = [styles];\nRipple = __decorate([\n    customElement('mwc-ripple')\n], Ripple);\nexport { Ripple };\n//# sourceMappingURL=mwc-ripple.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * TypeScript version of the decorator\n * @see https://www.typescriptlang.org/docs/handbook/decorators.html#property-decorators\n */\nfunction tsDecorator(prototype, name, descriptor) {\n    const constructor = prototype.constructor;\n    if (!descriptor) {\n        /**\n         * lit uses internal properties with two leading underscores to\n         * provide storage for accessors\n         */\n        const litInternalPropertyKey = `__${name}`;\n        descriptor =\n            constructor.getPropertyDescriptor(name, litInternalPropertyKey);\n        if (!descriptor) {\n            throw new Error('@ariaProperty must be used after a @property decorator');\n        }\n    }\n    // descriptor must exist at this point, reassign so typescript understands\n    const propDescriptor = descriptor;\n    let attribute = '';\n    if (!propDescriptor.set) {\n        throw new Error(`@ariaProperty requires a setter for ${name}`);\n    }\n    // TODO(b/202853219): Remove this check when internal tooling is\n    // compatible\n    // tslint:disable-next-line:no-any bail if applied to internal generated class\n    if (prototype.dispatchWizEvent) {\n        return descriptor;\n    }\n    const wrappedDescriptor = {\n        configurable: true,\n        enumerable: true,\n        set(value) {\n            if (attribute === '') {\n                const options = constructor.getPropertyOptions(name);\n                // if attribute is not a string, use `name` instead\n                attribute =\n                    typeof options.attribute === 'string' ? options.attribute : name;\n            }\n            if (this.hasAttribute(attribute)) {\n                this.removeAttribute(attribute);\n            }\n            propDescriptor.set.call(this, value);\n        }\n    };\n    if (propDescriptor.get) {\n        wrappedDescriptor.get = function () {\n            return propDescriptor.get.call(this);\n        };\n    }\n    return wrappedDescriptor;\n}\n/**\n * A property decorator proxies an aria attribute to an internal node\n *\n * This decorator is only intended for use with ARIA attributes, such as `role`\n * and `aria-label` due to screenreader needs.\n *\n * Upon first render, `@ariaProperty` will remove the attribute from the host\n * element to prevent screenreaders from reading the host instead of the\n * internal node.\n *\n * This decorator should only be used for non-Symbol public fields decorated\n * with `@property`, or on a setter with an optional getter.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @ariaProperty\n *   @property({ type: String, attribute: 'aria-label' })\n *   ariaLabel!: string;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function ariaProperty(protoOrDescriptor, name, \n// tslint:disable-next-line:no-any any is required as a return type from decorators\ndescriptor) {\n    if (name !== undefined) {\n        return tsDecorator(protoOrDescriptor, name, descriptor);\n    }\n    else {\n        throw new Error('@ariaProperty only supports TypeScript Decorators');\n    }\n}\n//# sourceMappingURL=aria-property.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Class that encapsulates the events handlers for `mwc-ripple`\n *\n *\n * Example:\n * ```\n * class XFoo extends LitElement {\n *   async getRipple() {\n *     this.renderRipple = true;\n *     await this.updateComplete;\n *     return this.renderRoot.querySelector('mwc-ripple');\n *   }\n *   rippleHandlers = new RippleHandlers(() => this.getRipple());\n *\n *   render() {\n *     return html`\n *       <div @mousedown=${this.rippleHandlers.startPress}></div>\n *       ${this.renderRipple ? html`<mwc-ripple></mwc-ripple>` : ''}\n *     `;\n *   }\n * }\n * ```\n */\nexport class RippleHandlers {\n    constructor(\n    /** Function that returns a `mwc-ripple` */\n    rippleFn) {\n        this.startPress = (ev) => {\n            rippleFn().then((r) => {\n                r && r.startPress(ev);\n            });\n        };\n        this.endPress = () => {\n            rippleFn().then((r) => {\n                r && r.endPress();\n            });\n        };\n        this.startFocus = () => {\n            rippleFn().then((r) => {\n                r && r.startFocus();\n            });\n        };\n        this.endFocus = () => {\n            rippleFn().then((r) => {\n                r && r.endFocus();\n            });\n        };\n        this.startHover = () => {\n            rippleFn().then((r) => {\n                r && r.startHover();\n            });\n        };\n        this.endHover = () => {\n            rippleFn().then((r) => {\n                r && r.endHover();\n            });\n        };\n    }\n}\n//# sourceMappingURL=ripple-handlers.js.map","import{nothing as t}from\"../lit-html.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=l=>null!=l?l:t;export{l as ifDefined};\n//# sourceMappingURL=if-defined.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-icon/mwc-icon.js';\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { ariaProperty } from '@material/mwc-base/aria-property.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport { html, LitElement } from 'lit';\nimport { eventOptions, property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n/** @soyCompatible */\nexport class ButtonBase extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.raised = false;\n        this.unelevated = false;\n        this.outlined = false;\n        this.dense = false;\n        this.disabled = false;\n        this.trailingIcon = false;\n        this.fullwidth = false;\n        this.icon = '';\n        this.label = '';\n        this.expandContent = false;\n        this.shouldRenderRipple = false;\n        this.rippleHandlers = new RippleHandlers(() => {\n            this.shouldRenderRipple = true;\n            return this.ripple;\n        });\n    }\n    /** @soyTemplate */\n    renderOverlay() {\n        return html ``;\n    }\n    /** @soyTemplate */\n    renderRipple() {\n        const filled = this.raised || this.unelevated;\n        return this.shouldRenderRipple ?\n            html `<mwc-ripple class=\"ripple\" .primary=\"${!filled}\" .disabled=\"${this.disabled}\"></mwc-ripple>` :\n            '';\n    }\n    focus() {\n        const buttonElement = this.buttonElement;\n        if (buttonElement) {\n            this.rippleHandlers.startFocus();\n            buttonElement.focus();\n        }\n    }\n    blur() {\n        const buttonElement = this.buttonElement;\n        if (buttonElement) {\n            this.rippleHandlers.endFocus();\n            buttonElement.blur();\n        }\n    }\n    /** @soyTemplate */\n    getRenderClasses() {\n        return {\n            'mdc-button--raised': this.raised,\n            'mdc-button--unelevated': this.unelevated,\n            'mdc-button--outlined': this.outlined,\n            'mdc-button--dense': this.dense,\n        };\n    }\n    /**\n     * @soyTemplate\n     * @soyAttributes buttonAttributes: #button\n     * @soyClasses buttonClasses: #button\n     */\n    render() {\n        return html `\n      <button\n          id=\"button\"\n          class=\"mdc-button ${classMap(this.getRenderClasses())}\"\n          ?disabled=\"${this.disabled}\"\n          aria-label=\"${this.label || this.icon}\"\n          aria-haspopup=\"${ifDefined(this.ariaHasPopup)}\"\n          @focus=\"${this.handleRippleFocus}\"\n          @blur=\"${this.handleRippleBlur}\"\n          @mousedown=\"${this.handleRippleActivate}\"\n          @mouseenter=\"${this.handleRippleMouseEnter}\"\n          @mouseleave=\"${this.handleRippleMouseLeave}\"\n          @touchstart=\"${this.handleRippleActivate}\"\n          @touchend=\"${this.handleRippleDeactivate}\"\n          @touchcancel=\"${this.handleRippleDeactivate}\">\n        ${this.renderOverlay()}\n        ${this.renderRipple()}\n        <span class=\"leading-icon\">\n          <slot name=\"icon\">\n            ${this.icon && !this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n        <span class=\"mdc-button__label\">${this.label}</span>\n        <span class=\"slot-container ${classMap({\n            flex: this.expandContent\n        })}\">\n          <slot></slot>\n        </span>\n        <span class=\"trailing-icon\">\n          <slot name=\"trailingIcon\">\n            ${this.icon && this.trailingIcon ? this.renderIcon() : ''}\n          </slot>\n        </span>\n      </button>`;\n    }\n    /** @soyTemplate */\n    renderIcon() {\n        return html `\n    <mwc-icon class=\"mdc-button__icon\">\n      ${this.icon}\n    </mwc-icon>`;\n    }\n    handleRippleActivate(evt) {\n        const onUp = () => {\n            window.removeEventListener('mouseup', onUp);\n            this.handleRippleDeactivate();\n        };\n        window.addEventListener('mouseup', onUp);\n        this.rippleHandlers.startPress(evt);\n    }\n    handleRippleDeactivate() {\n        this.rippleHandlers.endPress();\n    }\n    handleRippleMouseEnter() {\n        this.rippleHandlers.startHover();\n    }\n    handleRippleMouseLeave() {\n        this.rippleHandlers.endHover();\n    }\n    handleRippleFocus() {\n        this.rippleHandlers.startFocus();\n    }\n    handleRippleBlur() {\n        this.rippleHandlers.endFocus();\n    }\n}\nButtonBase.shadowRootOptions = { mode: 'open', delegatesFocus: true };\n__decorate([\n    ariaProperty,\n    property({ type: String, attribute: 'aria-haspopup' })\n], ButtonBase.prototype, \"ariaHasPopup\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"raised\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"unelevated\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"outlined\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ButtonBase.prototype, \"dense\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'trailingicon' })\n], ButtonBase.prototype, \"trailingIcon\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ButtonBase.prototype, \"fullwidth\", void 0);\n__decorate([\n    property({ type: String })\n], ButtonBase.prototype, \"icon\", void 0);\n__decorate([\n    property({ type: String })\n], ButtonBase.prototype, \"label\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ButtonBase.prototype, \"expandContent\", void 0);\n__decorate([\n    query('#button')\n], ButtonBase.prototype, \"buttonElement\", void 0);\n__decorate([\n    queryAsync('mwc-ripple')\n], ButtonBase.prototype, \"ripple\", void 0);\n__decorate([\n    state()\n], ButtonBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], ButtonBase.prototype, \"handleRippleActivate\", null);\n//# sourceMappingURL=mwc-button-base.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `.mdc-button{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-button-font-size, 0.875rem);line-height:2.25rem;line-height:var(--mdc-typography-button-line-height, 2.25rem);font-weight:500;font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:0.0892857143em;letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:none;text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:uppercase;text-transform:var(--mdc-typography-button-text-transform, uppercase)}.mdc-touch-target-wrapper{display:inline}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:#fff;background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-button{position:relative;display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-width:64px;border:none;outline:none;line-height:inherit;user-select:none;-webkit-appearance:none;overflow:visible;vertical-align:middle;background:transparent}.mdc-button .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-button::-moz-focus-inner{padding:0;border:0}.mdc-button:active{outline:none}.mdc-button:hover{cursor:pointer}.mdc-button:disabled{cursor:default;pointer-events:none}.mdc-button .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top}[dir=rtl] .mdc-button .mdc-button__icon,.mdc-button .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.mdc-button .mdc-button__label{position:relative}.mdc-button .mdc-button__focus-ring{display:none}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{pointer-events:none;border:2px solid transparent;border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc( 100% + 4px );width:calc( 100% + 4px );display:block}}@media screen and (forced-colors: active)and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring{border-color:CanvasText}}@media screen and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring::after,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring::after{content:\"\";border:2px solid transparent;border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}}@media screen and (forced-colors: active)and (forced-colors: active){.mdc-button.mdc-ripple-upgraded--background-focused .mdc-button__focus-ring::after,.mdc-button:not(.mdc-ripple-upgraded):focus .mdc-button__focus-ring::after{border-color:CanvasText}}.mdc-button .mdc-button__touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-button__label+.mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .mdc-button__label+.mdc-button__icon,.mdc-button__label+.mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}svg.mdc-button__icon{fill:currentColor}.mdc-button--touch{margin-top:6px;margin-bottom:6px}.mdc-button{padding:0 8px 0 8px}.mdc-button--unelevated{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--unelevated.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--unelevated.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--raised{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);padding:0 16px 0 16px}.mdc-button--raised.mdc-button--icon-trailing{padding:0 12px 0 16px}.mdc-button--raised.mdc-button--icon-leading{padding:0 16px 0 12px}.mdc-button--outlined{border-style:solid;transition:border 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--outlined .mdc-button__ripple{border-style:solid;border-color:transparent}.mdc-button{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button:not(:disabled){color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}.mdc-button:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--raised,.mdc-button--unelevated{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--raised:not(:disabled),.mdc-button--unelevated:not(:disabled){background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee)}.mdc-button--raised:disabled,.mdc-button--unelevated:disabled{background-color:rgba(0, 0, 0, 0.12)}.mdc-button--raised:not(:disabled),.mdc-button--unelevated:not(:disabled){color:#fff;color:var(--mdc-theme-on-primary, #fff)}.mdc-button--raised:disabled,.mdc-button--unelevated:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button--raised .mdc-button__icon,.mdc-button--unelevated .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button--raised .mdc-button__ripple,.mdc-button--unelevated .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--outlined{height:36px;border-radius:4px;border-radius:var(--mdc-shape-small, 4px);padding:0 15px 0 15px;border-width:1px}.mdc-button--outlined:not(:disabled){color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}.mdc-button--outlined:disabled{color:rgba(0, 0, 0, 0.38)}.mdc-button--outlined .mdc-button__icon{font-size:1.125rem;width:1.125rem;height:1.125rem}.mdc-button--outlined .mdc-button__ripple{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-button--outlined:not(:disabled){border-color:rgba(0, 0, 0, 0.12)}.mdc-button--outlined:disabled{border-color:rgba(0, 0, 0, 0.12)}.mdc-button--outlined.mdc-button--icon-trailing{padding:0 11px 0 15px}.mdc-button--outlined.mdc-button--icon-leading{padding:0 15px 0 11px}.mdc-button--outlined .mdc-button__ripple{top:-1px;left:-1px;bottom:-1px;right:-1px;border-width:1px}.mdc-button--outlined .mdc-button__touch{left:calc(-1 * 1px);width:calc(100% + 2 * 1px)}.mdc-button--raised{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0,0,0,.12);transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-button--raised:hover,.mdc-button--raised:focus{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12)}.mdc-button--raised:active{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0,0,0,.12)}.mdc-button--raised:disabled{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0,0,0,.12)}:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:transparent;vertical-align:top}:host([fullwidth]){width:100%}:host([raised]),:host([unelevated]){--mdc-ripple-color:#fff;--mdc-ripple-focus-opacity:0.24;--mdc-ripple-hover-opacity:0.08;--mdc-ripple-press-opacity:0.24}.trailing-icon ::slotted(*),.trailing-icon .mdc-button__icon,.leading-icon ::slotted(*),.leading-icon .mdc-button__icon{margin-left:0;margin-right:8px;display:inline-block;position:relative;vertical-align:top;font-size:1.125rem;height:1.125rem;width:1.125rem}[dir=rtl] .trailing-icon ::slotted(*),[dir=rtl] .trailing-icon .mdc-button__icon,[dir=rtl] .leading-icon ::slotted(*),[dir=rtl] .leading-icon .mdc-button__icon,.trailing-icon ::slotted(*[dir=rtl]),.trailing-icon .mdc-button__icon[dir=rtl],.leading-icon ::slotted(*[dir=rtl]),.leading-icon .mdc-button__icon[dir=rtl]{margin-left:8px;margin-right:0}.trailing-icon ::slotted(*),.trailing-icon .mdc-button__icon{margin-left:8px;margin-right:0}[dir=rtl] .trailing-icon ::slotted(*),[dir=rtl] .trailing-icon .mdc-button__icon,.trailing-icon ::slotted(*[dir=rtl]),.trailing-icon .mdc-button__icon[dir=rtl]{margin-left:0;margin-right:8px}.slot-container{display:inline-flex;align-items:center;justify-content:center}.slot-container.flex{flex:auto}.mdc-button{flex:auto;overflow:hidden;padding-left:8px;padding-left:var(--mdc-button-horizontal-padding, 8px);padding-right:8px;padding-right:var(--mdc-button-horizontal-padding, 8px)}.mdc-button--raised{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised:focus{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-focus, var(--mdc-button-raised-box-shadow-hover, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)))}.mdc-button--raised:hover{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-hover, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised:active{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-active, 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12))}.mdc-button--raised:disabled{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);box-shadow:var(--mdc-button-raised-box-shadow-disabled, 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12))}.mdc-button--raised,.mdc-button--unelevated{padding-left:16px;padding-left:var(--mdc-button-horizontal-padding, 16px);padding-right:16px;padding-right:var(--mdc-button-horizontal-padding, 16px)}.mdc-button--outlined{border-width:1px;border-width:var(--mdc-button-outline-width, 1px);padding-left:calc(16px - 1px);padding-left:calc(var(--mdc-button-horizontal-padding, 16px) - var(--mdc-button-outline-width, 1px));padding-right:calc(16px - 1px);padding-right:calc(var(--mdc-button-horizontal-padding, 16px) - var(--mdc-button-outline-width, 1px))}.mdc-button--outlined:not(:disabled){border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-button-outline-color, rgba(0, 0, 0, 0.12))}.mdc-button--outlined .ripple{top:calc(-1 * 1px);top:calc(-1 * var(--mdc-button-outline-width, 1px));left:calc(-1 * 1px);left:calc(-1 * var(--mdc-button-outline-width, 1px));right:initial;right:initial;border-width:1px;border-width:var(--mdc-button-outline-width, 1px);border-style:solid;border-color:transparent}[dir=rtl] .mdc-button--outlined .ripple,.mdc-button--outlined .ripple[dir=rtl]{left:initial;left:initial;right:calc(-1 * 1px);right:calc(-1 * var(--mdc-button-outline-width, 1px))}.mdc-button--dense{height:28px;margin-top:0;margin-bottom:0}.mdc-button--dense .mdc-button__touch{height:100%}:host([disabled]){pointer-events:none}:host([disabled]) .mdc-button{color:rgba(0, 0, 0, 0.38);color:var(--mdc-button-disabled-ink-color, rgba(0, 0, 0, 0.38))}:host([disabled]) .mdc-button--raised,:host([disabled]) .mdc-button--unelevated{background-color:rgba(0, 0, 0, 0.12);background-color:var(--mdc-button-disabled-fill-color, rgba(0, 0, 0, 0.12))}:host([disabled]) .mdc-button--outlined{border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-button-disabled-outline-color, rgba(0, 0, 0, 0.12))}`;\n//# sourceMappingURL=styles.css.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { customElement } from 'lit/decorators.js';\nimport { ButtonBase } from './mwc-button-base.js';\nimport { styles } from './styles.css.js';\n/** @soyCompatible */\nlet Button = class Button extends ButtonBase {\n};\nButton.styles = [styles];\nButton = __decorate([\n    customElement('mwc-button')\n], Button);\nexport { Button };\n//# sourceMappingURL=mwc-button.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Specifies an observer callback that is run when the decorated property\n * changes. The observer receives the current and old value as arguments.\n */\nexport const observer = (observer) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(proto, propName) => {\n    // if we haven't wrapped `updated` in this class, do so\n    if (!proto.constructor\n        ._observers) {\n        proto.constructor._observers = new Map();\n        const userUpdated = proto.updated;\n        proto.updated = function (changedProperties) {\n            userUpdated.call(this, changedProperties);\n            changedProperties.forEach((v, k) => {\n                const observers = this.constructor\n                    ._observers;\n                const observer = observers.get(k);\n                if (observer !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    observer.call(this, this[k], v);\n                }\n            });\n        };\n        // clone any existing observers (superclasses)\n        // eslint-disable-next-line no-prototype-builtins\n    }\n    else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (v, k) => proto.constructor._observers.set(k, v));\n    }\n    // set this method\n    proto.constructor._observers.set(propName, observer);\n};\n//# sourceMappingURL=observer.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport { html, LitElement } from 'lit';\nimport { property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n/**\n * @fires request-selected {RequestSelectedDetail}\n * @fires list-item-rendered\n */\nexport class ListItemBase extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.value = '';\n        this.group = null;\n        this.tabindex = -1;\n        this.disabled = false;\n        this.twoline = false;\n        this.activated = false;\n        this.graphic = null;\n        this.multipleGraphics = false;\n        this.hasMeta = false;\n        this.noninteractive = false;\n        this.selected = false;\n        this.shouldRenderRipple = false;\n        this._managingList = null;\n        this.boundOnClick = this.onClick.bind(this);\n        this._firstChanged = true;\n        this._skipPropRequest = false;\n        this.rippleHandlers = new RippleHandlers(() => {\n            this.shouldRenderRipple = true;\n            return this.ripple;\n        });\n        this.listeners = [\n            {\n                target: this,\n                eventNames: ['click'],\n                cb: () => {\n                    this.onClick();\n                },\n            },\n            {\n                target: this,\n                eventNames: ['mouseenter'],\n                cb: this.rippleHandlers.startHover,\n            },\n            {\n                target: this,\n                eventNames: ['mouseleave'],\n                cb: this.rippleHandlers.endHover,\n            },\n            {\n                target: this,\n                eventNames: ['focus'],\n                cb: this.rippleHandlers.startFocus,\n            },\n            {\n                target: this,\n                eventNames: ['blur'],\n                cb: this.rippleHandlers.endFocus,\n            },\n            {\n                target: this,\n                eventNames: ['mousedown', 'touchstart'],\n                cb: (e) => {\n                    const name = e.type;\n                    this.onDown(name === 'mousedown' ? 'mouseup' : 'touchend', e);\n                },\n            },\n        ];\n    }\n    get text() {\n        const textContent = this.textContent;\n        return textContent ? textContent.trim() : '';\n    }\n    render() {\n        const text = this.renderText();\n        const graphic = this.graphic ? this.renderGraphic() : html ``;\n        const meta = this.hasMeta ? this.renderMeta() : html ``;\n        return html `\n      ${this.renderRipple()}\n      ${graphic}\n      ${text}\n      ${meta}`;\n    }\n    renderRipple() {\n        if (this.shouldRenderRipple) {\n            return html `\n      <mwc-ripple\n        .activated=${this.activated}>\n      </mwc-ripple>`;\n        }\n        else if (this.activated) {\n            return html `<div class=\"fake-activated-ripple\"></div>`;\n        }\n        else {\n            return '';\n        }\n    }\n    renderGraphic() {\n        const graphicClasses = {\n            multi: this.multipleGraphics,\n        };\n        return html `\n      <span class=\"mdc-deprecated-list-item__graphic material-icons ${classMap(graphicClasses)}\">\n        <slot name=\"graphic\"></slot>\n      </span>`;\n    }\n    renderMeta() {\n        return html `\n      <span class=\"mdc-deprecated-list-item__meta material-icons\">\n        <slot name=\"meta\"></slot>\n      </span>`;\n    }\n    renderText() {\n        const inner = this.twoline ? this.renderTwoline() : this.renderSingleLine();\n        return html `\n      <span class=\"mdc-deprecated-list-item__text\">\n        ${inner}\n      </span>`;\n    }\n    renderSingleLine() {\n        return html `<slot></slot>`;\n    }\n    renderTwoline() {\n        return html `\n      <span class=\"mdc-deprecated-list-item__primary-text\">\n        <slot></slot>\n      </span>\n      <span class=\"mdc-deprecated-list-item__secondary-text\">\n        <slot name=\"secondary\"></slot>\n      </span>\n    `;\n    }\n    onClick() {\n        this.fireRequestSelected(!this.selected, 'interaction');\n    }\n    onDown(upName, evt) {\n        const onUp = () => {\n            window.removeEventListener(upName, onUp);\n            this.rippleHandlers.endPress();\n        };\n        window.addEventListener(upName, onUp);\n        this.rippleHandlers.startPress(evt);\n    }\n    fireRequestSelected(selected, source) {\n        if (this.noninteractive) {\n            return;\n        }\n        const customEv = new CustomEvent('request-selected', { bubbles: true, composed: true, detail: { source, selected } });\n        this.dispatchEvent(customEv);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        if (!this.noninteractive) {\n            this.setAttribute('mwc-list-item', '');\n        }\n        for (const listener of this.listeners) {\n            for (const eventName of listener.eventNames) {\n                listener.target.addEventListener(eventName, listener.cb, { passive: true });\n            }\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        for (const listener of this.listeners) {\n            for (const eventName of listener.eventNames) {\n                listener.target.removeEventListener(eventName, listener.cb);\n            }\n        }\n        if (this._managingList) {\n            this._managingList.debouncedLayout ?\n                this._managingList.debouncedLayout(true) :\n                this._managingList.layout(true);\n        }\n    }\n    // composed flag, event fire through shadow root and up through composed tree\n    firstUpdated() {\n        const ev = new Event('list-item-rendered', { bubbles: true, composed: true });\n        this.dispatchEvent(ev);\n    }\n}\n__decorate([\n    query('slot')\n], ListItemBase.prototype, \"slotElement\", void 0);\n__decorate([\n    queryAsync('mwc-ripple')\n], ListItemBase.prototype, \"ripple\", void 0);\n__decorate([\n    property({ type: String })\n], ListItemBase.prototype, \"value\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], ListItemBase.prototype, \"group\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], ListItemBase.prototype, \"tabindex\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        if (value) {\n            this.setAttribute('aria-disabled', 'true');\n        }\n        else {\n            this.setAttribute('aria-disabled', 'false');\n        }\n    })\n], ListItemBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ListItemBase.prototype, \"twoline\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], ListItemBase.prototype, \"activated\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], ListItemBase.prototype, \"graphic\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ListItemBase.prototype, \"multipleGraphics\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ListItemBase.prototype, \"hasMeta\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        if (value) {\n            this.removeAttribute('aria-checked');\n            this.removeAttribute('mwc-list-item');\n            this.selected = false;\n            this.activated = false;\n            this.tabIndex = -1;\n        }\n        else {\n            this.setAttribute('mwc-list-item', '');\n        }\n    })\n], ListItemBase.prototype, \"noninteractive\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        const role = this.getAttribute('role');\n        const isAriaSelectable = role === 'gridcell' || role === 'option' ||\n            role === 'row' || role === 'tab';\n        if (isAriaSelectable && value) {\n            this.setAttribute('aria-selected', 'true');\n        }\n        else if (isAriaSelectable) {\n            this.setAttribute('aria-selected', 'false');\n        }\n        if (this._firstChanged) {\n            this._firstChanged = false;\n            return;\n        }\n        if (this._skipPropRequest) {\n            return;\n        }\n        this.fireRequestSelected(value, 'property');\n    })\n], ListItemBase.prototype, \"selected\", void 0);\n__decorate([\n    state()\n], ListItemBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([\n    state()\n], ListItemBase.prototype, \"_managingList\", void 0);\n//# sourceMappingURL=mwc-list-item-base.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `:host{cursor:pointer;user-select:none;-webkit-tap-highlight-color:transparent;height:48px;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:var(--mdc-list-side-padding, 16px);padding-right:var(--mdc-list-side-padding, 16px);outline:none;height:48px;color:rgba(0,0,0,.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}:host:focus{outline:none}:host([activated]){color:#6200ee;color:var(--mdc-theme-primary, #6200ee);--mdc-ripple-color: var( --mdc-theme-primary, #6200ee )}:host([activated]) .mdc-deprecated-list-item__graphic{color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}:host([activated]) .fake-activated-ripple::before{position:absolute;display:block;top:0;bottom:0;left:0;right:0;width:100%;height:100%;pointer-events:none;z-index:1;content:\"\";opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12);background-color:#6200ee;background-color:var(--mdc-ripple-color, var(--mdc-theme-primary, #6200ee))}.mdc-deprecated-list-item__graphic{flex-shrink:0;align-items:center;justify-content:center;fill:currentColor;display:inline-flex}.mdc-deprecated-list-item__graphic ::slotted(*){flex-shrink:0;align-items:center;justify-content:center;fill:currentColor;width:100%;height:100%;text-align:center}.mdc-deprecated-list-item__meta{width:var(--mdc-list-item-meta-size, 24px);height:var(--mdc-list-item-meta-size, 24px);margin-left:auto;margin-right:0;color:rgba(0, 0, 0, 0.38);color:var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38))}.mdc-deprecated-list-item__meta.multi{width:auto}.mdc-deprecated-list-item__meta ::slotted(*){width:var(--mdc-list-item-meta-size, 24px);line-height:var(--mdc-list-item-meta-size, 24px)}.mdc-deprecated-list-item__meta ::slotted(.material-icons),.mdc-deprecated-list-item__meta ::slotted(mwc-icon){line-height:var(--mdc-list-item-meta-size, 24px) !important}.mdc-deprecated-list-item__meta ::slotted(:not(.material-icons):not(mwc-icon)){-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.75rem;font-size:var(--mdc-typography-caption-font-size, 0.75rem);line-height:1.25rem;line-height:var(--mdc-typography-caption-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-caption-font-weight, 400);letter-spacing:0.0333333333em;letter-spacing:var(--mdc-typography-caption-letter-spacing, 0.0333333333em);text-decoration:inherit;text-decoration:var(--mdc-typography-caption-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-caption-text-transform, inherit)}[dir=rtl] .mdc-deprecated-list-item__meta,.mdc-deprecated-list-item__meta[dir=rtl]{margin-left:0;margin-right:auto}.mdc-deprecated-list-item__meta ::slotted(*){width:100%;height:100%}.mdc-deprecated-list-item__text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mdc-deprecated-list-item__text ::slotted([for]),.mdc-deprecated-list-item__text[for]{pointer-events:none}.mdc-deprecated-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal;margin-bottom:-20px;display:block}.mdc-deprecated-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\"\";vertical-align:0}.mdc-deprecated-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}.mdc-deprecated-list-item__secondary-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;line-height:normal;display:block}.mdc-deprecated-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\"\";vertical-align:0}.mdc-deprecated-list--dense .mdc-deprecated-list-item__secondary-text{font-size:inherit}* ::slotted(a),a{color:inherit;text-decoration:none}:host([twoline]){height:72px}:host([twoline]) .mdc-deprecated-list-item__text{align-self:flex-start}:host([disabled]),:host([noninteractive]){cursor:default;pointer-events:none}:host([disabled]) .mdc-deprecated-list-item__text ::slotted(*){opacity:.38}:host([disabled]) .mdc-deprecated-list-item__text ::slotted(*),:host([disabled]) .mdc-deprecated-list-item__primary-text ::slotted(*),:host([disabled]) .mdc-deprecated-list-item__secondary-text ::slotted(*){color:#000;color:var(--mdc-theme-on-surface, #000)}.mdc-deprecated-list-item__secondary-text ::slotted(*){color:rgba(0, 0, 0, 0.54);color:var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54))}.mdc-deprecated-list-item__graphic ::slotted(*){background-color:transparent;color:rgba(0, 0, 0, 0.38);color:var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38))}.mdc-deprecated-list-group__subheader ::slotted(*){color:rgba(0, 0, 0, 0.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 40px);height:var(--mdc-list-item-graphic-size, 40px)}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 40px);line-height:var(--mdc-list-item-graphic-size, 40px)}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 40px) !important}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic ::slotted(*){border-radius:50%}:host([graphic=avatar]) .mdc-deprecated-list-item__graphic,:host([graphic=medium]) .mdc-deprecated-list-item__graphic,:host([graphic=large]) .mdc-deprecated-list-item__graphic,:host([graphic=control]) .mdc-deprecated-list-item__graphic{margin-left:0;margin-right:var(--mdc-list-item-graphic-margin, 16px)}[dir=rtl] :host([graphic=avatar]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=medium]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=large]) .mdc-deprecated-list-item__graphic,[dir=rtl] :host([graphic=control]) .mdc-deprecated-list-item__graphic,:host([graphic=avatar]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=medium]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=large]) .mdc-deprecated-list-item__graphic[dir=rtl],:host([graphic=control]) .mdc-deprecated-list-item__graphic[dir=rtl]{margin-left:var(--mdc-list-item-graphic-margin, 16px);margin-right:0}:host([graphic=icon]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 24px);height:var(--mdc-list-item-graphic-size, 24px);margin-left:0;margin-right:var(--mdc-list-item-graphic-margin, 32px)}:host([graphic=icon]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 24px);line-height:var(--mdc-list-item-graphic-size, 24px)}:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=icon]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 24px) !important}[dir=rtl] :host([graphic=icon]) .mdc-deprecated-list-item__graphic,:host([graphic=icon]) .mdc-deprecated-list-item__graphic[dir=rtl]{margin-left:var(--mdc-list-item-graphic-margin, 32px);margin-right:0}:host([graphic=avatar]:not([twoLine])),:host([graphic=icon]:not([twoLine])){height:56px}:host([graphic=medium]:not([twoLine])),:host([graphic=large]:not([twoLine])){height:72px}:host([graphic=medium]) .mdc-deprecated-list-item__graphic,:host([graphic=large]) .mdc-deprecated-list-item__graphic{width:var(--mdc-list-item-graphic-size, 56px);height:var(--mdc-list-item-graphic-size, 56px)}:host([graphic=medium]) .mdc-deprecated-list-item__graphic.multi,:host([graphic=large]) .mdc-deprecated-list-item__graphic.multi{width:auto}:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(*),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(*){width:var(--mdc-list-item-graphic-size, 56px);line-height:var(--mdc-list-item-graphic-size, 56px)}:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=medium]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(.material-icons),:host([graphic=large]) .mdc-deprecated-list-item__graphic ::slotted(mwc-icon){line-height:var(--mdc-list-item-graphic-size, 56px) !important}:host([graphic=large]){padding-left:0px}`;\n//# sourceMappingURL=mwc-list-item.css.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { customElement } from 'lit/decorators.js';\nimport { ListItemBase } from './mwc-list-item-base.js';\nimport { styles } from './mwc-list-item.css.js';\nlet ListItem = class ListItem extends ListItemBase {\n};\nListItem.styles = [styles];\nListItem = __decorate([\n    customElement('mwc-list-item')\n], ListItem);\nexport { ListItem };\n//# sourceMappingURL=mwc-list-item.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * KEY provides normalized string values for keys.\n */\nexport var KEY = {\n    UNKNOWN: 'Unknown',\n    BACKSPACE: 'Backspace',\n    ENTER: 'Enter',\n    SPACEBAR: 'Spacebar',\n    PAGE_UP: 'PageUp',\n    PAGE_DOWN: 'PageDown',\n    END: 'End',\n    HOME: 'Home',\n    ARROW_LEFT: 'ArrowLeft',\n    ARROW_UP: 'ArrowUp',\n    ARROW_RIGHT: 'ArrowRight',\n    ARROW_DOWN: 'ArrowDown',\n    DELETE: 'Delete',\n    ESCAPE: 'Escape',\n    TAB: 'Tab',\n};\nvar normalizedKeys = new Set();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nnormalizedKeys.add(KEY.BACKSPACE);\nnormalizedKeys.add(KEY.ENTER);\nnormalizedKeys.add(KEY.SPACEBAR);\nnormalizedKeys.add(KEY.PAGE_UP);\nnormalizedKeys.add(KEY.PAGE_DOWN);\nnormalizedKeys.add(KEY.END);\nnormalizedKeys.add(KEY.HOME);\nnormalizedKeys.add(KEY.ARROW_LEFT);\nnormalizedKeys.add(KEY.ARROW_UP);\nnormalizedKeys.add(KEY.ARROW_RIGHT);\nnormalizedKeys.add(KEY.ARROW_DOWN);\nnormalizedKeys.add(KEY.DELETE);\nnormalizedKeys.add(KEY.ESCAPE);\nnormalizedKeys.add(KEY.TAB);\nvar KEY_CODE = {\n    BACKSPACE: 8,\n    ENTER: 13,\n    SPACEBAR: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    END: 35,\n    HOME: 36,\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    DELETE: 46,\n    ESCAPE: 27,\n    TAB: 9,\n};\nvar mappedKeyCodes = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nmappedKeyCodes.set(KEY_CODE.BACKSPACE, KEY.BACKSPACE);\nmappedKeyCodes.set(KEY_CODE.ENTER, KEY.ENTER);\nmappedKeyCodes.set(KEY_CODE.SPACEBAR, KEY.SPACEBAR);\nmappedKeyCodes.set(KEY_CODE.PAGE_UP, KEY.PAGE_UP);\nmappedKeyCodes.set(KEY_CODE.PAGE_DOWN, KEY.PAGE_DOWN);\nmappedKeyCodes.set(KEY_CODE.END, KEY.END);\nmappedKeyCodes.set(KEY_CODE.HOME, KEY.HOME);\nmappedKeyCodes.set(KEY_CODE.ARROW_LEFT, KEY.ARROW_LEFT);\nmappedKeyCodes.set(KEY_CODE.ARROW_UP, KEY.ARROW_UP);\nmappedKeyCodes.set(KEY_CODE.ARROW_RIGHT, KEY.ARROW_RIGHT);\nmappedKeyCodes.set(KEY_CODE.ARROW_DOWN, KEY.ARROW_DOWN);\nmappedKeyCodes.set(KEY_CODE.DELETE, KEY.DELETE);\nmappedKeyCodes.set(KEY_CODE.ESCAPE, KEY.ESCAPE);\nmappedKeyCodes.set(KEY_CODE.TAB, KEY.TAB);\nvar navigationKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this\n// by hand.\nnavigationKeys.add(KEY.PAGE_UP);\nnavigationKeys.add(KEY.PAGE_DOWN);\nnavigationKeys.add(KEY.END);\nnavigationKeys.add(KEY.HOME);\nnavigationKeys.add(KEY.ARROW_LEFT);\nnavigationKeys.add(KEY.ARROW_UP);\nnavigationKeys.add(KEY.ARROW_RIGHT);\nnavigationKeys.add(KEY.ARROW_DOWN);\n/**\n * normalizeKey returns the normalized string for a navigational action.\n */\nexport function normalizeKey(evt) {\n    var key = evt.key;\n    // If the event already has a normalized key, return it\n    if (normalizedKeys.has(key)) {\n        return key;\n    }\n    // tslint:disable-next-line:deprecation\n    var mappedKey = mappedKeyCodes.get(evt.keyCode);\n    if (mappedKey) {\n        return mappedKey;\n    }\n    return KEY.UNKNOWN;\n}\n/**\n * isNavigationEvent returns whether the event is a navigation event\n */\nexport function isNavigationEvent(evt) {\n    return navigationKeys.has(normalizeKey(evt));\n}\n//# sourceMappingURL=keyboard.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar _a, _b;\nvar cssClasses = {\n    LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n    LIST_ITEM_CLASS: 'mdc-list-item',\n    LIST_ITEM_DISABLED_CLASS: 'mdc-list-item--disabled',\n    LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n    LIST_ITEM_TEXT_CLASS: 'mdc-list-item__text',\n    LIST_ITEM_PRIMARY_TEXT_CLASS: 'mdc-list-item__primary-text',\n    ROOT: 'mdc-list',\n};\nvar evolutionClassNameMap = (_a = {},\n    _a[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-list-item--activated',\n    _a[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-list-item',\n    _a[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-list-item--disabled',\n    _a[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-list-item--selected',\n    _a[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-list-item__primary-text',\n    _a[\"\" + cssClasses.ROOT] = 'mdc-list',\n    _a);\nvar deprecatedClassNameMap = (_b = {},\n    _b[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-deprecated-list-item--activated',\n    _b[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-deprecated-list-item',\n    _b[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-deprecated-list-item--disabled',\n    _b[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-deprecated-list-item--selected',\n    _b[\"\" + cssClasses.LIST_ITEM_TEXT_CLASS] = 'mdc-deprecated-list-item__text',\n    _b[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-deprecated-list-item__primary-text',\n    _b[\"\" + cssClasses.ROOT] = 'mdc-deprecated-list',\n    _b);\nvar strings = {\n    ACTION_EVENT: 'MDCList:action',\n    SELECTION_CHANGE_EVENT: 'MDCList:selectionChange',\n    ARIA_CHECKED: 'aria-checked',\n    ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n    ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n    ARIA_CURRENT: 'aria-current',\n    ARIA_DISABLED: 'aria-disabled',\n    ARIA_ORIENTATION: 'aria-orientation',\n    ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n    ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n    ARIA_SELECTED: 'aria-selected',\n    ARIA_INTERACTIVE_ROLES_SELECTOR: '[role=\"listbox\"], [role=\"menu\"]',\n    ARIA_MULTI_SELECTABLE_SELECTOR: '[aria-multiselectable=\"true\"]',\n    CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n    CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a\\n  \",\n    DEPRECATED_SELECTOR: '.mdc-deprecated-list',\n    FOCUSABLE_CHILD_ELEMENTS: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"checkbox\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"checkbox\\\"]:not(:disabled)\\n  \",\n    RADIO_SELECTOR: 'input[type=\"radio\"]',\n    SELECTED_ITEM_SELECTOR: '[aria-selected=\"true\"], [aria-current=\"true\"]',\n};\nvar numbers = {\n    UNSET_INDEX: -1,\n    TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS: 300\n};\nvar evolutionAttribute = 'evolution';\nexport { strings, cssClasses, numbers, deprecatedClassNameMap, evolutionAttribute, evolutionClassNameMap };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { MDCFoundation } from '@material/base/foundation.js';\nimport { normalizeKey } from '@material/dom/keyboard.js';\nimport { numbers, strings } from '@material/list/constants.js';\nconst integerSort = (a, b) => {\n    return a - b;\n};\nconst findIndexDiff = (oldSet, newSet) => {\n    const oldArr = Array.from(oldSet);\n    const newArr = Array.from(newSet);\n    const diff = { added: [], removed: [] };\n    const oldSorted = oldArr.sort(integerSort);\n    const newSorted = newArr.sort(integerSort);\n    let i = 0;\n    let j = 0;\n    while (i < oldSorted.length || j < newSorted.length) {\n        const oldVal = oldSorted[i];\n        const newVal = newSorted[j];\n        if (oldVal === newVal) {\n            i++;\n            j++;\n            continue;\n        }\n        if (oldVal !== undefined && (newVal === undefined || oldVal < newVal)) {\n            diff.removed.push(oldVal);\n            i++;\n            continue;\n        }\n        if (newVal !== undefined && (oldVal === undefined || newVal < oldVal)) {\n            diff.added.push(newVal);\n            j++;\n            continue;\n        }\n    }\n    return diff;\n};\nconst ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\nexport function isIndexSet(selectedIndex) {\n    return selectedIndex instanceof Set;\n}\nexport function isEventMulti(evt) {\n    return isIndexSet(evt.detail.index);\n}\nexport const createSetFromIndex = (index) => {\n    const entry = index === numbers.UNSET_INDEX ? new Set() : index;\n    return isIndexSet(entry) ? new Set(entry) : new Set([entry]);\n};\nexport class MDCListFoundation extends MDCFoundation {\n    constructor(adapter) {\n        super(Object.assign(Object.assign({}, MDCListFoundation.defaultAdapter), adapter));\n        this.isMulti_ = false;\n        this.wrapFocus_ = false;\n        this.isVertical_ = true;\n        this.selectedIndex_ = numbers.UNSET_INDEX;\n        this.focusedItemIndex_ = numbers.UNSET_INDEX;\n        this.useActivatedClass_ = false;\n        this.ariaCurrentAttrValue_ = null;\n    }\n    static get strings() {\n        return strings;\n    }\n    static get numbers() {\n        return numbers;\n    }\n    static get defaultAdapter() {\n        return {\n            focusItemAtIndex: () => undefined,\n            getFocusedElementIndex: () => 0,\n            getListItemCount: () => 0,\n            isFocusInsideList: () => false,\n            isRootFocused: () => false,\n            notifyAction: () => undefined,\n            notifySelected: () => undefined,\n            getSelectedStateForElementIndex: () => false,\n            setDisabledStateForElementIndex: () => undefined,\n            getDisabledStateForElementIndex: () => false,\n            setSelectedStateForElementIndex: () => undefined,\n            setActivatedStateForElementIndex: () => undefined,\n            setTabIndexForElementIndex: () => undefined,\n            setAttributeForElementIndex: () => undefined,\n            getAttributeForElementIndex: () => null,\n        };\n    }\n    /**\n     * Sets the private wrapFocus_ variable.\n     */\n    setWrapFocus(value) {\n        this.wrapFocus_ = value;\n    }\n    /**\n     * Sets the private wrapFocus_ variable.\n     */\n    setMulti(value) {\n        this.isMulti_ = value;\n        const currentIndex = this.selectedIndex_;\n        if (value) {\n            // number to set\n            if (!isIndexSet(currentIndex)) {\n                const isUnset = currentIndex === numbers.UNSET_INDEX;\n                this.selectedIndex_ = isUnset ? new Set() : new Set([currentIndex]);\n            }\n        }\n        else {\n            // set to first sorted number in set\n            if (isIndexSet(currentIndex)) {\n                if (currentIndex.size) {\n                    const vals = Array.from(currentIndex).sort(integerSort);\n                    this.selectedIndex_ = vals[0];\n                }\n                else {\n                    this.selectedIndex_ = numbers.UNSET_INDEX;\n                }\n            }\n        }\n    }\n    /**\n     * Sets the isVertical_ private variable.\n     */\n    setVerticalOrientation(value) {\n        this.isVertical_ = value;\n    }\n    /**\n     * Sets the useActivatedClass_ private variable.\n     */\n    setUseActivatedClass(useActivated) {\n        this.useActivatedClass_ = useActivated;\n    }\n    getSelectedIndex() {\n        return this.selectedIndex_;\n    }\n    setSelectedIndex(index) {\n        if (!this.isIndexValid_(index)) {\n            return;\n        }\n        if (this.isMulti_) {\n            this.setMultiSelectionAtIndex_(createSetFromIndex(index));\n        }\n        else {\n            this.setSingleSelectionAtIndex_(index);\n        }\n    }\n    /**\n     * Focus in handler for the list items.\n     */\n    handleFocusIn(_, listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.adapter.setTabIndexForElementIndex(listItemIndex, 0);\n        }\n    }\n    /**\n     * Focus out handler for the list items.\n     */\n    handleFocusOut(_, listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.adapter.setTabIndexForElementIndex(listItemIndex, -1);\n        }\n        /**\n         * Between Focusout & Focusin some browsers do not have focus on any\n         * element. Setting a delay to wait till the focus is moved to next element.\n         */\n        setTimeout(() => {\n            if (!this.adapter.isFocusInsideList()) {\n                this.setTabindexToFirstSelectedItem_();\n            }\n        }, 0);\n    }\n    /**\n     * Key handler for the list.\n     */\n    handleKeydown(event, isRootListItem, listItemIndex) {\n        const isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n        const isArrowUp = normalizeKey(event) === 'ArrowUp';\n        const isArrowRight = normalizeKey(event) === 'ArrowRight';\n        const isArrowDown = normalizeKey(event) === 'ArrowDown';\n        const isHome = normalizeKey(event) === 'Home';\n        const isEnd = normalizeKey(event) === 'End';\n        const isEnter = normalizeKey(event) === 'Enter';\n        const isSpace = normalizeKey(event) === 'Spacebar';\n        if (this.adapter.isRootFocused()) {\n            if (isArrowUp || isEnd) {\n                event.preventDefault();\n                this.focusLastElement();\n            }\n            else if (isArrowDown || isHome) {\n                event.preventDefault();\n                this.focusFirstElement();\n            }\n            return;\n        }\n        let currentIndex = this.adapter.getFocusedElementIndex();\n        if (currentIndex === -1) {\n            currentIndex = listItemIndex;\n            if (currentIndex < 0) {\n                // If this event doesn't have a mdc-deprecated-list-item ancestor from\n                // the current list (not from a sublist), return early.\n                return;\n            }\n        }\n        let nextIndex;\n        if ((this.isVertical_ && isArrowDown) ||\n            (!this.isVertical_ && isArrowRight)) {\n            this.preventDefaultEvent(event);\n            nextIndex = this.focusNextElement(currentIndex);\n        }\n        else if ((this.isVertical_ && isArrowUp) || (!this.isVertical_ && isArrowLeft)) {\n            this.preventDefaultEvent(event);\n            nextIndex = this.focusPrevElement(currentIndex);\n        }\n        else if (isHome) {\n            this.preventDefaultEvent(event);\n            nextIndex = this.focusFirstElement();\n        }\n        else if (isEnd) {\n            this.preventDefaultEvent(event);\n            nextIndex = this.focusLastElement();\n        }\n        else if (isEnter || isSpace) {\n            if (isRootListItem) {\n                // Return early if enter key is pressed on anchor element which triggers\n                // synthetic MouseEvent event.\n                const target = event.target;\n                if (target && target.tagName === 'A' && isEnter) {\n                    return;\n                }\n                this.preventDefaultEvent(event);\n                this.setSelectedIndexOnAction_(currentIndex, true);\n            }\n        }\n        this.focusedItemIndex_ = currentIndex;\n        if (nextIndex !== undefined) {\n            this.setTabindexAtIndex_(nextIndex);\n            this.focusedItemIndex_ = nextIndex;\n        }\n    }\n    /**\n     * Click handler for the list.\n     */\n    handleSingleSelection(index, isInteraction, force) {\n        if (index === numbers.UNSET_INDEX) {\n            return;\n        }\n        this.setSelectedIndexOnAction_(index, isInteraction, force);\n        this.setTabindexAtIndex_(index);\n        this.focusedItemIndex_ = index;\n    }\n    /**\n     * Focuses the next element on the list.\n     */\n    focusNextElement(index) {\n        const count = this.adapter.getListItemCount();\n        let nextIndex = index + 1;\n        if (nextIndex >= count) {\n            if (this.wrapFocus_) {\n                nextIndex = 0;\n            }\n            else {\n                // Return early because last item is already focused.\n                return index;\n            }\n        }\n        this.adapter.focusItemAtIndex(nextIndex);\n        return nextIndex;\n    }\n    /**\n     * Focuses the previous element on the list.\n     */\n    focusPrevElement(index) {\n        let prevIndex = index - 1;\n        if (prevIndex < 0) {\n            if (this.wrapFocus_) {\n                prevIndex = this.adapter.getListItemCount() - 1;\n            }\n            else {\n                // Return early because first item is already focused.\n                return index;\n            }\n        }\n        this.adapter.focusItemAtIndex(prevIndex);\n        return prevIndex;\n    }\n    focusFirstElement() {\n        this.adapter.focusItemAtIndex(0);\n        return 0;\n    }\n    focusLastElement() {\n        const lastIndex = this.adapter.getListItemCount() - 1;\n        this.adapter.focusItemAtIndex(lastIndex);\n        return lastIndex;\n    }\n    /**\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    setEnabled(itemIndex, isEnabled) {\n        if (!this.isIndexValid_(itemIndex)) {\n            return;\n        }\n        this.adapter.setDisabledStateForElementIndex(itemIndex, !isEnabled);\n    }\n    /**\n     * Ensures that preventDefault is only called if the containing element\n     * doesn't consume the event, and it will cause an unintended scroll.\n     */\n    preventDefaultEvent(evt) {\n        const target = evt.target;\n        const tagName = `${target.tagName}`.toLowerCase();\n        if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n            evt.preventDefault();\n        }\n    }\n    setSingleSelectionAtIndex_(index, isInteraction = true) {\n        if (this.selectedIndex_ === index) {\n            return;\n        }\n        // unset previous\n        if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            this.adapter.setSelectedStateForElementIndex(this.selectedIndex_, false);\n            if (this.useActivatedClass_) {\n                this.adapter.setActivatedStateForElementIndex(this.selectedIndex_, false);\n            }\n        }\n        // set new\n        if (isInteraction) {\n            this.adapter.setSelectedStateForElementIndex(index, true);\n        }\n        if (this.useActivatedClass_) {\n            this.adapter.setActivatedStateForElementIndex(index, true);\n        }\n        this.setAriaForSingleSelectionAtIndex_(index);\n        this.selectedIndex_ = index;\n        this.adapter.notifySelected(index);\n    }\n    setMultiSelectionAtIndex_(newIndex, isInteraction = true) {\n        const oldIndex = createSetFromIndex(this.selectedIndex_);\n        const diff = findIndexDiff(oldIndex, newIndex);\n        if (!diff.removed.length && !diff.added.length) {\n            return;\n        }\n        for (const removed of diff.removed) {\n            if (isInteraction) {\n                this.adapter.setSelectedStateForElementIndex(removed, false);\n            }\n            if (this.useActivatedClass_) {\n                this.adapter.setActivatedStateForElementIndex(removed, false);\n            }\n        }\n        for (const added of diff.added) {\n            if (isInteraction) {\n                this.adapter.setSelectedStateForElementIndex(added, true);\n            }\n            if (this.useActivatedClass_) {\n                this.adapter.setActivatedStateForElementIndex(added, true);\n            }\n        }\n        this.selectedIndex_ = newIndex;\n        this.adapter.notifySelected(newIndex, diff);\n    }\n    /**\n     * Sets aria attribute for single selection at given index.\n     */\n    setAriaForSingleSelectionAtIndex_(index) {\n        // Detect the presence of aria-current and get the value only during list\n        // initialization when it is in unset state.\n        if (this.selectedIndex_ === numbers.UNSET_INDEX) {\n            this.ariaCurrentAttrValue_ =\n                this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n        }\n        const isAriaCurrent = this.ariaCurrentAttrValue_ !== null;\n        const ariaAttribute = isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n        if (this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex_, ariaAttribute, 'false');\n        }\n        const ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue_ : 'true';\n        this.adapter.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);\n    }\n    setTabindexAtIndex_(index) {\n        if (this.focusedItemIndex_ === numbers.UNSET_INDEX && index !== 0) {\n            // If no list item was selected set first list item's tabindex to -1.\n            // Generally, tabindex is set to 0 on first list item of list that has no\n            // preselected items.\n            this.adapter.setTabIndexForElementIndex(0, -1);\n        }\n        else if (this.focusedItemIndex_ >= 0 && this.focusedItemIndex_ !== index) {\n            this.adapter.setTabIndexForElementIndex(this.focusedItemIndex_, -1);\n        }\n        this.adapter.setTabIndexForElementIndex(index, 0);\n    }\n    setTabindexToFirstSelectedItem_() {\n        let targetIndex = 0;\n        if (typeof this.selectedIndex_ === 'number' &&\n            this.selectedIndex_ !== numbers.UNSET_INDEX) {\n            targetIndex = this.selectedIndex_;\n        }\n        else if (isIndexSet(this.selectedIndex_) && this.selectedIndex_.size > 0) {\n            targetIndex = Math.min(...this.selectedIndex_);\n        }\n        this.setTabindexAtIndex_(targetIndex);\n    }\n    isIndexValid_(index) {\n        if (index instanceof Set) {\n            if (!this.isMulti_) {\n                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n            }\n            if (index.size === 0) {\n                return true;\n            }\n            else {\n                let isOneInRange = false;\n                for (const entry of index) {\n                    isOneInRange = this.isIndexInRange_(entry);\n                    if (isOneInRange) {\n                        break;\n                    }\n                }\n                return isOneInRange;\n            }\n        }\n        else if (typeof index === 'number') {\n            if (this.isMulti_) {\n                throw new Error('MDCListFoundation: Expected array of index for checkbox based list but got number: ' +\n                    index);\n            }\n            return index === numbers.UNSET_INDEX || this.isIndexInRange_(index);\n        }\n        else {\n            return false;\n        }\n    }\n    isIndexInRange_(index) {\n        const listSize = this.adapter.getListItemCount();\n        return index >= 0 && index < listSize;\n    }\n    /**\n     * Sets selected index on user action, toggles checkbox / radio based on\n     * toggleCheckbox value. User interaction should not toggle list item(s) when\n     * disabled.\n     */\n    setSelectedIndexOnAction_(index, isInteraction, force) {\n        if (this.adapter.getDisabledStateForElementIndex(index)) {\n            return;\n        }\n        let checkedIndex = index;\n        if (this.isMulti_) {\n            checkedIndex = new Set([index]);\n        }\n        if (!this.isIndexValid_(checkedIndex)) {\n            return;\n        }\n        if (this.isMulti_) {\n            this.toggleMultiAtIndex(index, force, isInteraction);\n        }\n        else {\n            if (isInteraction || force) {\n                this.setSingleSelectionAtIndex_(index, isInteraction);\n            }\n            else {\n                const isDeselection = this.selectedIndex_ === index;\n                if (isDeselection) {\n                    this.setSingleSelectionAtIndex_(numbers.UNSET_INDEX);\n                }\n            }\n        }\n        if (isInteraction) {\n            this.adapter.notifyAction(index);\n        }\n    }\n    toggleMultiAtIndex(index, force, isInteraction = true) {\n        let newSelectionValue = false;\n        if (force === undefined) {\n            newSelectionValue = !this.adapter.getSelectedStateForElementIndex(index);\n        }\n        else {\n            newSelectionValue = force;\n        }\n        const newSet = createSetFromIndex(this.selectedIndex_);\n        if (newSelectionValue) {\n            newSet.add(index);\n        }\n        else {\n            newSet.delete(index);\n        }\n        this.setMultiSelectionAtIndex_(newSet, isInteraction);\n    }\n}\n// tslint:disable-next-line:no-default-export Needed for backward compatibility\n// with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n//# sourceMappingURL=mwc-list-foundation.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport './mwc-list-item.js';\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { deepActiveElementPath, doesElementContainFocus, isNodeElement } from '@material/mwc-base/utils.js';\nimport { html } from 'lit';\nimport { property, query, queryAssignedNodes } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport MDCListFoundation, { isIndexSet } from './mwc-list-foundation.js';\nexport { createSetFromIndex, isEventMulti, isIndexSet } from './mwc-list-foundation.js';\nfunction debounceLayout(callback, waitInMS = 50) {\n    let timeoutId;\n    // tslint:disable-next-line\n    return function (updateItems = true) {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n            callback(updateItems);\n        }, waitInMS);\n    };\n}\nconst isListItem = (element) => {\n    return element.hasAttribute('mwc-list-item');\n};\nfunction clearAndCreateItemsReadyPromise() {\n    const oldResolver = this.itemsReadyResolver;\n    this.itemsReady = new Promise((res) => {\n        // TODO(b/175626389): Type '(value: never[] | PromiseLike<never[]>) => void'\n        // is not assignable to type '(value?: never[] | PromiseLike<never[]> |\n        // undefined) => void'.\n        return this.itemsReadyResolver = res;\n    });\n    oldResolver();\n}\n/**\n * @fires selected {SelectedDetail}\n * @fires action {ActionDetail}\n * @fires items-updated\n */\nexport class ListBase extends BaseElement {\n    constructor() {\n        super();\n        this.mdcAdapter = null;\n        this.mdcFoundationClass = MDCListFoundation;\n        this.activatable = false;\n        this.multi = false;\n        this.wrapFocus = false;\n        this.itemRoles = null;\n        this.innerRole = null;\n        this.innerAriaLabel = null;\n        this.rootTabbable = false;\n        this.previousTabindex = null;\n        this.noninteractive = false;\n        this.itemsReadyResolver = (() => {\n            //\n        });\n        this.itemsReady = Promise.resolve([]);\n        // tslint:enable:ban-ts-ignore\n        this.items_ = [];\n        const debouncedFunction = debounceLayout(this.layout.bind(this));\n        this.debouncedLayout = (updateItems = true) => {\n            clearAndCreateItemsReadyPromise.call(this);\n            debouncedFunction(updateItems);\n        };\n    }\n    // tslint:disable:ban-ts-ignore\n    async getUpdateComplete() {\n        // @ts-ignore\n        const result = await super.getUpdateComplete();\n        await this.itemsReady;\n        return result;\n    }\n    get items() {\n        return this.items_;\n    }\n    updateItems() {\n        var _a;\n        const nodes = (_a = this.assignedElements) !== null && _a !== void 0 ? _a : [];\n        const listItems = [];\n        for (const node of nodes) {\n            if (isListItem(node)) {\n                listItems.push(node);\n                node._managingList = this;\n            }\n            if (node.hasAttribute('divider') && !node.hasAttribute('role')) {\n                node.setAttribute('role', 'separator');\n            }\n        }\n        this.items_ = listItems;\n        const selectedIndices = new Set();\n        this.items_.forEach((item, index) => {\n            if (this.itemRoles) {\n                item.setAttribute('role', this.itemRoles);\n            }\n            else {\n                item.removeAttribute('role');\n            }\n            if (item.selected) {\n                selectedIndices.add(index);\n            }\n        });\n        if (this.multi) {\n            this.select(selectedIndices);\n        }\n        else {\n            const index = selectedIndices.size ? selectedIndices.entries().next().value[1] : -1;\n            this.select(index);\n        }\n        const itemsUpdatedEv = new Event('items-updated', { bubbles: true, composed: true });\n        this.dispatchEvent(itemsUpdatedEv);\n    }\n    get selected() {\n        const index = this.index;\n        if (!isIndexSet(index)) {\n            if (index === -1) {\n                return null;\n            }\n            return this.items[index];\n        }\n        const selected = [];\n        for (const entry of index) {\n            selected.push(this.items[entry]);\n        }\n        return selected;\n    }\n    get index() {\n        if (this.mdcFoundation) {\n            return this.mdcFoundation.getSelectedIndex();\n        }\n        return -1;\n    }\n    render() {\n        const role = this.innerRole === null ? undefined : this.innerRole;\n        const ariaLabel = this.innerAriaLabel === null ? undefined : this.innerAriaLabel;\n        const tabindex = this.rootTabbable ? '0' : '-1';\n        return html `\n      <!-- @ts-ignore -->\n      <ul\n          tabindex=${tabindex}\n          role=\"${ifDefined(role)}\"\n          aria-label=\"${ifDefined(ariaLabel)}\"\n          class=\"mdc-deprecated-list\"\n          @keydown=${this.onKeydown}\n          @focusin=${this.onFocusIn}\n          @focusout=${this.onFocusOut}\n          @request-selected=${this.onRequestSelected}\n          @list-item-rendered=${this.onListItemConnected}>\n        <slot></slot>\n        ${this.renderPlaceholder()}\n      </ul>\n    `;\n    }\n    renderPlaceholder() {\n        var _a;\n        const nodes = (_a = this.assignedElements) !== null && _a !== void 0 ? _a : [];\n        if (this.emptyMessage !== undefined && nodes.length === 0) {\n            return html `\n        <mwc-list-item noninteractive>${this.emptyMessage}</mwc-list-item>\n      `;\n        }\n        return null;\n    }\n    firstUpdated() {\n        super.firstUpdated();\n        if (!this.items.length) {\n            // required because this is called before observers\n            this.mdcFoundation.setMulti(this.multi);\n            // for when children upgrade before list\n            this.layout();\n        }\n    }\n    onFocusIn(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            this.mdcFoundation.handleFocusIn(evt, index);\n        }\n    }\n    onFocusOut(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            this.mdcFoundation.handleFocusOut(evt, index);\n        }\n    }\n    onKeydown(evt) {\n        if (this.mdcFoundation && this.mdcRoot) {\n            const index = this.getIndexOfTarget(evt);\n            const target = evt.target;\n            const isRootListItem = isListItem(target);\n            this.mdcFoundation.handleKeydown(evt, isRootListItem, index);\n        }\n    }\n    onRequestSelected(evt) {\n        if (this.mdcFoundation) {\n            let index = this.getIndexOfTarget(evt);\n            // might happen in shady dom slowness. Recalc children\n            if (index === -1) {\n                this.layout();\n                index = this.getIndexOfTarget(evt);\n                // still not found; may not be mwc-list-item. Unsupported case.\n                if (index === -1) {\n                    return;\n                }\n            }\n            const element = this.items[index];\n            if (element.disabled) {\n                return;\n            }\n            const selected = evt.detail.selected;\n            const source = evt.detail.source;\n            this.mdcFoundation.handleSingleSelection(index, source === 'interaction', selected);\n            evt.stopPropagation();\n        }\n    }\n    getIndexOfTarget(evt) {\n        const elements = this.items;\n        const path = evt.composedPath();\n        for (const pathItem of path) {\n            let index = -1;\n            if (isNodeElement(pathItem) && isListItem(pathItem)) {\n                index = elements.indexOf(pathItem);\n            }\n            if (index !== -1) {\n                return index;\n            }\n        }\n        return -1;\n    }\n    createAdapter() {\n        this.mdcAdapter = {\n            getListItemCount: () => {\n                if (this.mdcRoot) {\n                    return this.items.length;\n                }\n                return 0;\n            },\n            getFocusedElementIndex: this.getFocusedItemIndex,\n            getAttributeForElementIndex: (index, attr) => {\n                const listElement = this.mdcRoot;\n                if (!listElement) {\n                    return '';\n                }\n                const element = this.items[index];\n                return element ? element.getAttribute(attr) : '';\n            },\n            setAttributeForElementIndex: (index, attr, val) => {\n                if (!this.mdcRoot) {\n                    return;\n                }\n                const element = this.items[index];\n                if (element) {\n                    element.setAttribute(attr, val);\n                }\n            },\n            focusItemAtIndex: (index) => {\n                const element = this.items[index];\n                if (element) {\n                    element.focus();\n                }\n            },\n            setTabIndexForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (item) {\n                    item.tabindex = value;\n                }\n            },\n            notifyAction: (index) => {\n                const init = { bubbles: true, composed: true };\n                init.detail = { index };\n                const ev = new CustomEvent('action', init);\n                this.dispatchEvent(ev);\n            },\n            notifySelected: (index, diff) => {\n                const init = { bubbles: true, composed: true };\n                init.detail = { index, diff };\n                const ev = new CustomEvent('selected', init);\n                this.dispatchEvent(ev);\n            },\n            isFocusInsideList: () => {\n                return doesElementContainFocus(this);\n            },\n            isRootFocused: () => {\n                const mdcRoot = this.mdcRoot;\n                const root = mdcRoot.getRootNode();\n                return root.activeElement === mdcRoot;\n            },\n            setDisabledStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.disabled = value;\n            },\n            getDisabledStateForElementIndex: (index) => {\n                const item = this.items[index];\n                if (!item) {\n                    return false;\n                }\n                return item.disabled;\n            },\n            setSelectedStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.selected = value;\n            },\n            getSelectedStateForElementIndex: (index) => {\n                const item = this.items[index];\n                if (!item) {\n                    return false;\n                }\n                return item.selected;\n            },\n            setActivatedStateForElementIndex: (index, value) => {\n                const item = this.items[index];\n                if (!item) {\n                    return;\n                }\n                item.activated = value;\n            },\n        };\n        return this.mdcAdapter;\n    }\n    selectUi(index, activate = false) {\n        const item = this.items[index];\n        if (item) {\n            item.selected = true;\n            item.activated = activate;\n        }\n    }\n    deselectUi(index) {\n        const item = this.items[index];\n        if (item) {\n            item.selected = false;\n            item.activated = false;\n        }\n    }\n    select(index) {\n        if (!this.mdcFoundation) {\n            return;\n        }\n        this.mdcFoundation.setSelectedIndex(index);\n    }\n    toggle(index, force) {\n        if (this.multi) {\n            this.mdcFoundation.toggleMultiAtIndex(index, force);\n        }\n    }\n    onListItemConnected(e) {\n        const target = e.target;\n        this.layout(this.items.indexOf(target) === -1);\n    }\n    layout(updateItems = true) {\n        if (updateItems) {\n            this.updateItems();\n        }\n        const first = this.items[0];\n        for (const item of this.items) {\n            item.tabindex = -1;\n        }\n        if (first) {\n            if (this.noninteractive) {\n                if (!this.previousTabindex) {\n                    this.previousTabindex = first;\n                }\n            }\n            else {\n                first.tabindex = 0;\n            }\n        }\n        this.itemsReadyResolver();\n    }\n    getFocusedItemIndex() {\n        if (!this.mdcRoot) {\n            return -1;\n        }\n        if (!this.items.length) {\n            return -1;\n        }\n        const activeElementPath = deepActiveElementPath();\n        if (!activeElementPath.length) {\n            return -1;\n        }\n        for (let i = activeElementPath.length - 1; i >= 0; i--) {\n            const activeItem = activeElementPath[i];\n            if (isListItem(activeItem)) {\n                return this.items.indexOf(activeItem);\n            }\n        }\n        return -1;\n    }\n    focusItemAtIndex(index) {\n        for (const item of this.items) {\n            if (item.tabindex === 0) {\n                item.tabindex = -1;\n                break;\n            }\n        }\n        this.items[index].tabindex = 0;\n        this.items[index].focus();\n    }\n    focus() {\n        const root = this.mdcRoot;\n        if (root) {\n            root.focus();\n        }\n    }\n    blur() {\n        const root = this.mdcRoot;\n        if (root) {\n            root.blur();\n        }\n    }\n}\n__decorate([\n    property({ type: String })\n], ListBase.prototype, \"emptyMessage\", void 0);\n__decorate([\n    query('.mdc-deprecated-list')\n], ListBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    queryAssignedNodes('', true, '*')\n], ListBase.prototype, \"assignedElements\", void 0);\n__decorate([\n    queryAssignedNodes('', true, '[tabindex=\"0\"]')\n], ListBase.prototype, \"tabbableElements\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (value) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setUseActivatedClass(value);\n        }\n    })\n], ListBase.prototype, \"activatable\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (newValue, oldValue) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setMulti(newValue);\n        }\n        if (oldValue !== undefined) {\n            this.layout();\n        }\n    })\n], ListBase.prototype, \"multi\", void 0);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (value) {\n        if (this.mdcFoundation) {\n            this.mdcFoundation.setWrapFocus(value);\n        }\n    })\n], ListBase.prototype, \"wrapFocus\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (_newValue, oldValue) {\n        if (oldValue !== undefined) {\n            this.updateItems();\n        }\n    })\n], ListBase.prototype, \"itemRoles\", void 0);\n__decorate([\n    property({ type: String })\n], ListBase.prototype, \"innerRole\", void 0);\n__decorate([\n    property({ type: String })\n], ListBase.prototype, \"innerAriaLabel\", void 0);\n__decorate([\n    property({ type: Boolean })\n], ListBase.prototype, \"rootTabbable\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        var _a, _b;\n        if (value) {\n            const tabbable = (_b = (_a = this.tabbableElements) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : null;\n            this.previousTabindex = tabbable;\n            if (tabbable) {\n                tabbable.setAttribute('tabindex', '-1');\n            }\n        }\n        else if (!value && this.previousTabindex) {\n            this.previousTabindex.setAttribute('tabindex', '0');\n            this.previousTabindex = null;\n        }\n    })\n], ListBase.prototype, \"noninteractive\", void 0);\n//# sourceMappingURL=mwc-list-base.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\nimport { css } from 'lit';\nexport const styles = css `@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host{display:block}.mdc-deprecated-list{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1rem;font-size:var(--mdc-typography-subtitle1-font-size, 1rem);line-height:1.75rem;line-height:var(--mdc-typography-subtitle1-line-height, 1.75rem);font-weight:400;font-weight:var(--mdc-typography-subtitle1-font-weight, 400);letter-spacing:0.009375em;letter-spacing:var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);text-decoration:inherit;text-decoration:var(--mdc-typography-subtitle1-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-subtitle1-text-transform, inherit);line-height:1.5rem;margin:0;padding:8px 0;list-style-type:none;color:rgba(0, 0, 0, 0.87);color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));padding:var(--mdc-list-vertical-padding, 8px) 0}.mdc-deprecated-list:focus{outline:none}.mdc-deprecated-list-item{height:48px}.mdc-deprecated-list--dense{padding-top:4px;padding-bottom:4px;font-size:.812rem}.mdc-deprecated-list ::slotted([divider]){height:0;margin:0;border:none;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgba(0, 0, 0, 0.12)}.mdc-deprecated-list ::slotted([divider][padded]){margin:0 var(--mdc-list-side-padding, 16px)}.mdc-deprecated-list ::slotted([divider][inset]){margin-left:var(--mdc-list-inset-margin, 72px);margin-right:0;width:calc( 100% - var(--mdc-list-inset-margin, 72px) )}[dir=rtl] .mdc-deprecated-list ::slotted([divider][inset]),.mdc-deprecated-list ::slotted([divider][inset][dir=rtl]){margin-left:0;margin-right:var(--mdc-list-inset-margin, 72px)}.mdc-deprecated-list ::slotted([divider][inset][padded]){width:calc( 100% - var(--mdc-list-inset-margin, 72px) - var(--mdc-list-side-padding, 16px) )}.mdc-deprecated-list--dense ::slotted([mwc-list-item]){height:40px}.mdc-deprecated-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 20px}.mdc-deprecated-list--two-line.mdc-deprecated-list--dense ::slotted([mwc-list-item]),.mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense ::slotted([mwc-list-item]){height:60px}.mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense ::slotted([mwc-list]){--mdc-list-item-graphic-size: 36px}:host([noninteractive]){pointer-events:none;cursor:default}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text){display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text)::before{display:inline-block;width:0;height:24px;content:\"\";vertical-align:0}.mdc-deprecated-list--dense ::slotted(.mdc-deprecated-list-item__primary-text)::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}`;\n//# sourceMappingURL=mwc-list.css.js.map","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport { customElement } from 'lit/decorators.js';\nimport { ListBase } from './mwc-list-base.js';\nimport { styles } from './mwc-list.css.js';\nexport { createSetFromIndex, isEventMulti, isIndexSet } from './mwc-list-foundation.js';\nlet List = class List extends ListBase {\n};\nList.styles = [styles];\nList = __decorate([\n    customElement('mwc-list')\n], List);\nexport { List };\n//# sourceMappingURL=mwc-list.js.map","export interface IssueDetail {\n  title: string;\n  message?: string;\n}\n\nexport interface ValidationError {\n  file: string;\n  line: number;\n  column: number;\n  level: 0 | 1 | 2 | 3;\n  message: string;\n  node: string;\n  part: string;\n  code: number;\n  valid?: undefined;\n  loaded?: undefined;\n}\n\nexport interface LoadSchemaResult {\n  file: string;\n  valid?: undefined;\n  loaded: boolean;\n}\n\nexport interface ValidationResult {\n  file: string;\n  code: number;\n  valid: boolean;\n  loaded?: undefined;\n}\n\nexport type Validator = (\n  xml: string,\n  xmlName: string\n) => Promise<ValidationResult>;\n\nexport type WorkerMessage =\n  | ValidationError\n  | ValidationResult\n  | LoadSchemaResult\n  | string;\n\nexport function isValidationResult(\n  msg: WorkerMessage\n): msg is ValidationResult {\n  return (\n    typeof msg !== 'string' &&\n    msg.file !== undefined &&\n    msg.valid !== undefined &&\n    msg.loaded === undefined\n  );\n}\n\nexport function isValidationError(msg: WorkerMessage): msg is ValidationError {\n  return (\n    typeof msg !== 'string' &&\n    msg.file !== undefined &&\n    msg.valid === undefined &&\n    msg.loaded === undefined\n  );\n}\n\nexport function isLoadSchemaResult(\n  msg: WorkerMessage\n): msg is LoadSchemaResult {\n  return (\n    typeof msg !== 'string' &&\n    msg.file !== undefined &&\n    msg.valid === undefined &&\n    msg.loaded !== undefined\n  );\n}\n","export const schemas = {\n  '2003': `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\"\n      targetNamespace=\"http://www.iec.ch/61850/2003/SCL\" version=\"1.7\"\n      xmlns=\"http://www.iec.ch/61850/2003/SCL\" xmlns:scl=\"http://www.iec.ch/61850/2003/SCL\"\n      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:simpleType name=\"tRef\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\".+/.+/.+/.+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAnyName\">\n          <xs:restriction base=\"xs:normalizedString\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tName\">\n          <xs:restriction base=\"tAnyName\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrName\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"[\\\\d,\\\\p{L}]+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrLdName\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:maxLength value=\"64\"/>\n              <xs:pattern value=\"\\\\p{L}[\\\\d,\\\\p{L}]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrName1stU\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"\\\\p{Lu}[\\\\d,\\\\p{L}]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrName1stL\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"\\\\p{Ll}[\\\\d,\\\\p{L}]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPAddr\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedPTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"IP\"/>\n              <xs:enumeration value=\"IP-SUBNET\"/>\n              <xs:enumeration value=\"IP-GATEWAY\"/>\n              <xs:enumeration value=\"OSI-NSAP\"/>\n              <xs:enumeration value=\"OSI-TSEL\"/>\n              <xs:enumeration value=\"OSI-SSEL\"/>\n              <xs:enumeration value=\"OSI-PSEL\"/>\n              <xs:enumeration value=\"OSI-AP-Title\"/>\n              <xs:enumeration value=\"OSI-AP-Invoke\"/>\n              <xs:enumeration value=\"OSI-AE-Qualifier\"/>\n              <xs:enumeration value=\"OSI-AE-Invoke\"/>\n              <xs:enumeration value=\"MAC-Address\"/>\n              <xs:enumeration value=\"APPID\"/>\n              <xs:enumeration value=\"VLAN-PRIORITY\"/>\n              <xs:enumeration value=\"VLAN-ID\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionPTypeEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"\\\\p{Lu}[\\\\d,\\\\p{L},\\\\-]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPTypeEnum\">\n          <xs:union memberTypes=\"tPredefinedPTypeEnum tExtensionPTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedAttributeNameEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"T\"/>\n              <xs:enumeration value=\"Test\"/>\n              <xs:enumeration value=\"Check\"/>\n              <xs:enumeration value=\"SIUnit\"/>\n              <xs:enumeration value=\"Oper\"/>\n              <xs:enumeration value=\"SBO\"/>\n              <xs:enumeration value=\"SBOw\"/>\n              <xs:enumeration value=\"Cancel\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionAttributeNameEnum\">\n          <xs:restriction base=\"tRestrName1stL\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAttributeNameEnum\">\n          <xs:union memberTypes=\"tPredefinedAttributeNameEnum tExtensionAttributeNameEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedCommonConductingEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"CBR\"/>\n              <xs:enumeration value=\"DIS\"/>\n              <xs:enumeration value=\"VTR\"/>\n              <xs:enumeration value=\"CTR\"/>\n              <xs:enumeration value=\"GEN\"/>\n              <xs:enumeration value=\"CAP\"/>\n              <xs:enumeration value=\"REA\"/>\n              <xs:enumeration value=\"CON\"/>\n              <xs:enumeration value=\"MOT\"/>\n              <xs:enumeration value=\"EFN\"/>\n              <xs:enumeration value=\"PSH\"/>\n              <xs:enumeration value=\"BAT\"/>\n              <xs:enumeration value=\"BSH\"/>\n              <xs:enumeration value=\"CAB\"/>\n              <xs:enumeration value=\"GIL\"/>\n              <xs:enumeration value=\"LIN\"/>\n              <xs:enumeration value=\"RRC\"/>\n              <xs:enumeration value=\"SAR\"/>\n              <xs:enumeration value=\"TCF\"/>\n              <xs:enumeration value=\"TCR\"/>\n              <xs:enumeration value=\"IFL\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"E\\\\p{Lu}*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tCommonConductingEquipmentEnum\">\n          <xs:union memberTypes=\"tPredefinedCommonConductingEquipmentEnum tExtensionEquipmentEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPowerTransformerEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"PTR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tTransformerWindingEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"PTW\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedEquipmentEnum\">\n          <xs:union\n              memberTypes=\"tCommonConductingEquipmentEnum tPowerTransformerEnum tTransformerWindingEnum\"\n          />\n      </xs:simpleType>\n      <xs:simpleType name=\"tEquipmentEnum\">\n          <xs:union memberTypes=\"tPredefinedEquipmentEnum tExtensionEquipmentEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedGeneralEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"AXN\"/>\n              <xs:enumeration value=\"BAT\"/>\n              <xs:enumeration value=\"MOT\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionGeneralEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"E\\\\p{Lu}*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tGeneralEquipmentEnum\">\n          <xs:union memberTypes=\"tPredefinedGeneralEquipmentEnum tExtensionGeneralEquipmentEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tServiceSettingsEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Dyn\"/>\n              <xs:enumeration value=\"Conf\"/>\n              <xs:enumeration value=\"Fix\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPhaseEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"A\"/>\n              <xs:enumeration value=\"B\"/>\n              <xs:enumeration value=\"C\"/>\n              <xs:enumeration value=\"N\"/>\n              <xs:enumeration value=\"all\"/>\n              <xs:enumeration value=\"none\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAuthenticationEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"none\"/>\n              <xs:enumeration value=\"password\"/>\n              <xs:enumeration value=\"week\"/>\n              <xs:enumeration value=\"strong\"/>\n              <xs:enumeration value=\"certificate\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAssociationKindEnum\">\n          <xs:restriction base=\"xs:token\">\n              <xs:enumeration value=\"pre-established\"/>\n              <xs:enumeration value=\"predefined\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLPHDEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"LPHD\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLLN0Enum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"LLN0\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupAEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"A[A-Z]*\"/>\n              <xs:enumeration value=\"ANCR\"/>\n              <xs:enumeration value=\"ARCO\"/>\n              <xs:enumeration value=\"ATCC\"/>\n              <xs:enumeration value=\"AVCO\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"C[A-Z]*\"/>\n              <xs:enumeration value=\"CILO\"/>\n              <xs:enumeration value=\"CSWI\"/>\n              <xs:enumeration value=\"CALH\"/>\n              <xs:enumeration value=\"CCGR\"/>\n              <xs:enumeration value=\"CPOW\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupGEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"G[A-Z]*\"/>\n              <xs:enumeration value=\"GAPC\"/>\n              <xs:enumeration value=\"GGIO\"/>\n              <xs:enumeration value=\"GSAL\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupIEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"I[A-Z]*\"/>\n              <xs:enumeration value=\"IHMI\"/>\n              <xs:enumeration value=\"IARC\"/>\n              <xs:enumeration value=\"ITCI\"/>\n              <xs:enumeration value=\"ITMI\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupMEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"M[A-Z]*\"/>\n              <xs:enumeration value=\"MMXU\"/>\n              <xs:enumeration value=\"MDIF\"/>\n              <xs:enumeration value=\"MHAI\"/>\n              <xs:enumeration value=\"MHAN\"/>\n              <xs:enumeration value=\"MMTR\"/>\n              <xs:enumeration value=\"MMXN\"/>\n              <xs:enumeration value=\"MSQI\"/>\n              <xs:enumeration value=\"MSTA\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupPEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"P[A-Z]*\"/>\n              <xs:enumeration value=\"PDIF\"/>\n              <xs:enumeration value=\"PDIS\"/>\n              <xs:enumeration value=\"PDIR\"/>\n              <xs:enumeration value=\"PDOP\"/>\n              <xs:enumeration value=\"PDUP\"/>\n              <xs:enumeration value=\"PFRC\"/>\n              <xs:enumeration value=\"PHAR\"/>\n              <xs:enumeration value=\"PHIZ\"/>\n              <xs:enumeration value=\"PIOC\"/>\n              <xs:enumeration value=\"PMRI\"/>\n              <xs:enumeration value=\"PMSS\"/>\n              <xs:enumeration value=\"POPF\"/>\n              <xs:enumeration value=\"PPAM\"/>\n              <xs:enumeration value=\"PSCH\"/>\n              <xs:enumeration value=\"PSDE\"/>\n              <xs:enumeration value=\"PTEF\"/>\n              <xs:enumeration value=\"PTOC\"/>\n              <xs:enumeration value=\"PTOF\"/>\n              <xs:enumeration value=\"PTOV\"/>\n              <xs:enumeration value=\"PTRC\"/>\n              <xs:enumeration value=\"PTTR\"/>\n              <xs:enumeration value=\"PTUC\"/>\n              <xs:enumeration value=\"PTUV\"/>\n              <xs:enumeration value=\"PUPF\"/>\n              <xs:enumeration value=\"PTUF\"/>\n              <xs:enumeration value=\"PVOC\"/>\n              <xs:enumeration value=\"PVPH\"/>\n              <xs:enumeration value=\"PZSU\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupREnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"R[A-Z]*\"/>\n              <xs:enumeration value=\"RSYN\"/>\n              <xs:enumeration value=\"RDRE\"/>\n              <xs:enumeration value=\"RADR\"/>\n              <xs:enumeration value=\"RBDR\"/>\n              <xs:enumeration value=\"RDRS\"/>\n              <xs:enumeration value=\"RBRF\"/>\n              <xs:enumeration value=\"RDIR\"/>\n              <xs:enumeration value=\"RFLO\"/>\n              <xs:enumeration value=\"RPSB\"/>\n              <xs:enumeration value=\"RREC\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupSEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"S[A-Z]*\"/>\n              <xs:enumeration value=\"SARC\"/>\n              <xs:enumeration value=\"SIMG\"/>\n              <xs:enumeration value=\"SIML\"/>\n              <xs:enumeration value=\"SPDC\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupTEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"T[A-Z]*\"/>\n              <xs:enumeration value=\"TCTR\"/>\n              <xs:enumeration value=\"TVTR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupXEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"X[A-Z]*\"/>\n              <xs:enumeration value=\"XCBR\"/>\n              <xs:enumeration value=\"XSWI\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupYEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"Y[A-Z]*\"/>\n              <xs:enumeration value=\"YPTR\"/>\n              <xs:enumeration value=\"YEFN\"/>\n              <xs:enumeration value=\"YLTC\"/>\n              <xs:enumeration value=\"YPSH\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupZEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"Z[A-Z]*\"/>\n              <xs:enumeration value=\"ZAXN\"/>\n              <xs:enumeration value=\"ZBAT\"/>\n              <xs:enumeration value=\"ZBSH\"/>\n              <xs:enumeration value=\"ZCAB\"/>\n              <xs:enumeration value=\"ZCAP\"/>\n              <xs:enumeration value=\"ZCON\"/>\n              <xs:enumeration value=\"ZGEN\"/>\n              <xs:enumeration value=\"ZGIL\"/>\n              <xs:enumeration value=\"ZLIN\"/>\n              <xs:enumeration value=\"ZMOT\"/>\n              <xs:enumeration value=\"ZREA\"/>\n              <xs:enumeration value=\"ZRRC\"/>\n              <xs:enumeration value=\"ZSAR\"/>\n              <xs:enumeration value=\"ZTCF\"/>\n              <xs:enumeration value=\"ZTCR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNEnum\">\n          <xs:union\n              memberTypes=\"tDomainLNGroupAEnum tDomainLNGroupCEnum tDomainLNGroupGEnum tDomainLNGroupIEnum tDomainLNGroupMEnum tDomainLNGroupPEnum tDomainLNGroupREnum tDomainLNGroupSEnum tDomainLNGroupTEnum tDomainLNGroupXEnum tDomainLNGroupYEnum tDomainLNGroupZEnum\"\n          />\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedLNClassEnum\">\n          <xs:union memberTypes=\"tLPHDEnum tLLN0Enum tDomainLNEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionLNClassEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:minLength value=\"1\"/>\n              <xs:pattern value=\"\\\\p{Lu}+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLNClassEnum\">\n          <xs:union memberTypes=\"tPredefinedLNClassEnum tExtensionLNClassEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedCDCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"SPS\"/>\n              <xs:enumeration value=\"DPS\"/>\n              <xs:enumeration value=\"INS\"/>\n              <xs:enumeration value=\"ACT\"/>\n              <xs:enumeration value=\"ACD\"/>\n              <xs:enumeration value=\"SEC\"/>\n              <xs:enumeration value=\"BCR\"/>\n              <xs:enumeration value=\"MV\"/>\n              <xs:enumeration value=\"CMV\"/>\n              <xs:enumeration value=\"SAV\"/>\n              <xs:enumeration value=\"WYE\"/>\n              <xs:enumeration value=\"DEL\"/>\n              <xs:enumeration value=\"SEQ\"/>\n              <xs:enumeration value=\"HMV\"/>\n              <xs:enumeration value=\"HWYE\"/>\n              <xs:enumeration value=\"HDEL\"/>\n              <xs:enumeration value=\"SPC\"/>\n              <xs:enumeration value=\"DPC\"/>\n              <xs:enumeration value=\"INC\"/>\n              <xs:enumeration value=\"BSC\"/>\n              <xs:enumeration value=\"ISC\"/>\n              <xs:enumeration value=\"APC\"/>\n              <xs:enumeration value=\"SPG\"/>\n              <xs:enumeration value=\"ING\"/>\n              <xs:enumeration value=\"ASG\"/>\n              <xs:enumeration value=\"CURVE\"/>\n              <xs:enumeration value=\"DPL\"/>\n              <xs:enumeration value=\"LPL\"/>\n              <xs:enumeration value=\"CSD\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionCDCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:minLength value=\"1\"/>\n              <xs:pattern value=\"\\\\p{Lu}+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tCDCEnum\">\n          <xs:union memberTypes=\"tPredefinedCDCEnum tExtensionCDCEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tTrgOptEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"dchg\"/>\n              <xs:enumeration value=\"qchg\"/>\n              <xs:enumeration value=\"dupd\"/>\n              <xs:enumeration value=\"none\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tTrgOptControlEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"dchg\"/>\n              <xs:enumeration value=\"qchg\"/>\n              <xs:enumeration value=\"dupd\"/>\n              <xs:enumeration value=\"period\"/>\n              <xs:enumeration value=\"none\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tFCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"ST\"/>\n              <xs:enumeration value=\"MX\"/>\n              <xs:enumeration value=\"CO\"/>\n              <xs:enumeration value=\"SP\"/>\n              <xs:enumeration value=\"SG\"/>\n              <xs:enumeration value=\"SE\"/>\n              <xs:enumeration value=\"SV\"/>\n              <xs:enumeration value=\"CF\"/>\n              <xs:enumeration value=\"DC\"/>\n              <xs:enumeration value=\"EX\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedBasicTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"BOOLEAN\"/>\n              <xs:enumeration value=\"INT8\"/>\n              <xs:enumeration value=\"INT16\"/>\n              <xs:enumeration value=\"INT24\"/>\n              <xs:enumeration value=\"INT32\"/>\n              <xs:enumeration value=\"INT128\"/>\n              <xs:enumeration value=\"INT8U\"/>\n              <xs:enumeration value=\"INT16U\"/>\n              <xs:enumeration value=\"INT24U\"/>\n              <xs:enumeration value=\"INT32U\"/>\n              <xs:enumeration value=\"FLOAT32\"/>\n              <xs:enumeration value=\"FLOAT64\"/>\n              <xs:enumeration value=\"Enum\"/>\n              <xs:enumeration value=\"Dbpos\"/>\n              <xs:enumeration value=\"Tcmd\"/>\n              <xs:enumeration value=\"Quality\"/>\n              <xs:enumeration value=\"Timestamp\"/>\n              <xs:enumeration value=\"VisString32\"/>\n              <xs:enumeration value=\"VisString64\"/>\n              <xs:enumeration value=\"VisString129\"/>\n              <xs:enumeration value=\"VisString255\"/>\n              <xs:enumeration value=\"Octet64\"/>\n              <xs:enumeration value=\"Struct\"/>\n              <xs:enumeration value=\"EntryTime\"/>\n              <xs:enumeration value=\"Unicode255\"/>\n              <xs:enumeration value=\"Check\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionBasicTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"\\\\p{Lu}[\\\\p{L},\\\\d]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tBasicTypeEnum\">\n          <xs:union memberTypes=\"tPredefinedBasicTypeEnum tExtensionBasicTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tValKindEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Spec\"/>\n              <xs:enumeration value=\"Conf\"/>\n              <xs:enumeration value=\"RO\"/>\n              <xs:enumeration value=\"Set\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tGSEControlTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"GSSE\"/>\n              <xs:enumeration value=\"GOOSE\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSIUnitEnum\">\n          <xs:restriction base=\"xs:token\">\n              <xs:enumeration value=\"none\"/>\n              <xs:enumeration value=\"m\"/>\n              <xs:enumeration value=\"kg\"/>\n              <xs:enumeration value=\"s\"/>\n              <xs:enumeration value=\"A\"/>\n              <xs:enumeration value=\"K\"/>\n              <xs:enumeration value=\"mol\"/>\n              <xs:enumeration value=\"cd\"/>\n              <xs:enumeration value=\"deg\"/>\n              <xs:enumeration value=\"rad\"/>\n              <xs:enumeration value=\"sr\"/>\n              <xs:enumeration value=\"Gy\"/>\n              <xs:enumeration value=\"q\"/>\n              <xs:enumeration value=\"°C\"/>\n              <xs:enumeration value=\"Sv\"/>\n              <xs:enumeration value=\"F\"/>\n              <xs:enumeration value=\"C\"/>\n              <xs:enumeration value=\"S\"/>\n              <xs:enumeration value=\"H\"/>\n              <xs:enumeration value=\"V\"/>\n              <xs:enumeration value=\"ohm\"/>\n              <xs:enumeration value=\"J\"/>\n              <xs:enumeration value=\"N\"/>\n              <xs:enumeration value=\"Hz\"/>\n              <xs:enumeration value=\"lx\"/>\n              <xs:enumeration value=\"Lm\"/>\n              <xs:enumeration value=\"Wb\"/>\n              <xs:enumeration value=\"T\"/>\n              <xs:enumeration value=\"W\"/>\n              <xs:enumeration value=\"Pa\"/>\n              <xs:enumeration value=\"m^2\"/>\n              <xs:enumeration value=\"m^3\"/>\n              <xs:enumeration value=\"m/s\"/>\n              <xs:enumeration value=\"m/s^2\"/>\n              <xs:enumeration value=\"m^3/s\"/>\n              <xs:enumeration value=\"m/m^3\"/>\n              <xs:enumeration value=\"M\"/>\n              <xs:enumeration value=\"kg/m^3\"/>\n              <xs:enumeration value=\"m^2/s\"/>\n              <xs:enumeration value=\"W/m K\"/>\n              <xs:enumeration value=\"J/K\"/>\n              <xs:enumeration value=\"ppm\"/>\n              <xs:enumeration value=\"s^-1\"/>\n              <xs:enumeration value=\"rad/s\"/>\n              <xs:enumeration value=\"VA\"/>\n              <xs:enumeration value=\"Watts\"/>\n              <xs:enumeration value=\"VAr\"/>\n              <xs:enumeration value=\"phi\"/>\n              <xs:enumeration value=\"cos_phi\"/>\n              <xs:enumeration value=\"Vs\"/>\n              <xs:enumeration value=\"V^2\"/>\n              <xs:enumeration value=\"As\"/>\n              <xs:enumeration value=\"A^2\"/>\n              <xs:enumeration value=\"A^2 s\"/>\n              <xs:enumeration value=\"VAh\"/>\n              <xs:enumeration value=\"Wh\"/>\n              <xs:enumeration value=\"VArh\"/>\n              <xs:enumeration value=\"V/Hz\"/>\n              <xs:enumeration value=\"b/s\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tUnitMultiplierEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"\"/>\n              <xs:enumeration value=\"m\"/>\n              <xs:enumeration value=\"k\"/>\n              <xs:enumeration value=\"M\"/>\n              <xs:enumeration value=\"mu\"/>\n              <xs:enumeration value=\"y\"/>\n              <xs:enumeration value=\"z\"/>\n              <xs:enumeration value=\"a\"/>\n              <xs:enumeration value=\"f\"/>\n              <xs:enumeration value=\"p\"/>\n              <xs:enumeration value=\"n\"/>\n              <xs:enumeration value=\"c\"/>\n              <xs:enumeration value=\"d\"/>\n              <xs:enumeration value=\"da\"/>\n              <xs:enumeration value=\"h\"/>\n              <xs:enumeration value=\"G\"/>\n              <xs:enumeration value=\"T\"/>\n              <xs:enumeration value=\"P\"/>\n              <xs:enumeration value=\"E\"/>\n              <xs:enumeration value=\"Z\"/>\n              <xs:enumeration value=\"Y\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:attributeGroup name=\"agDesc\">\n          <xs:attribute form=\"unqualified\" name=\"desc\" type=\"xs:normalizedString\" use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tBaseElement\">\n          <xs:sequence>\n              <xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Text\" type=\"tText\"/>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Private\"\n                  type=\"tPrivate\"/>\n          </xs:sequence>\n          <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tUnNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tName\" use=\"required\"/>\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tIDNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attribute form=\"unqualified\" name=\"id\" type=\"tName\" use=\"required\"/>\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" mixed=\"true\" name=\"tAnyContentFromOtherNamespace\">\n          <xs:sequence maxOccurs=\"unbounded\" minOccurs=\"0\">\n              <xs:any namespace=\"##other\" processContents=\"lax\"/>\n          </xs:sequence>\n          <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tText\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"source\" type=\"xs:anyURI\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tPrivate\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"source\" type=\"xs:anyURI\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tHeader\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Text\" type=\"tText\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"History\">\n                  <xs:complexType>\n                      <xs:sequence>\n                          <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"Hitem\"\n                              type=\"tHitem\"/>\n                      </xs:sequence>\n                  </xs:complexType>\n              </xs:element>\n          </xs:sequence>\n          <xs:attribute form=\"unqualified\" name=\"id\" type=\"xs:normalizedString\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"version\" type=\"xs:normalizedString\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"revision\" type=\"xs:normalizedString\"/>\n          <xs:attribute form=\"unqualified\" name=\"toolID\" type=\"xs:normalizedString\"/>\n          <xs:attribute default=\"IEDName\" form=\"unqualified\" name=\"nameStructure\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:Name\">\n                      <xs:enumeration value=\"IEDName\"/>\n                      <!-- xs:enumeration value=\"FuncName\"/ -->\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tHitem\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"version\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"revision\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"when\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"who\" type=\"xs:normalizedString\"/>\n                  <xs:attribute form=\"unqualified\" name=\"what\" type=\"xs:normalizedString\"/>\n                  <xs:attribute form=\"unqualified\" name=\"why\" type=\"xs:normalizedString\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVal\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:normalizedString\">\n                  <xs:attribute form=\"unqualified\" name=\"sGroup\" type=\"xs:unsignedInt\" use=\"optional\"\n                  />\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tValueWithUnit\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:decimal\">\n                  <xs:attribute form=\"unqualified\" name=\"unit\" type=\"tSIUnitEnum\" use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVoltage\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"V\" form=\"unqualified\" name=\"unit\" type=\"tSIUnitEnum\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBitRateInMbPerSec\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"b/s\" form=\"unqualified\" name=\"unit\" type=\"tSIUnitEnum\"\n                      use=\"required\"/>\n                  <xs:attribute fixed=\"M\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDurationInSec\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"s\" form=\"unqualified\" name=\"unit\" type=\"tSIUnitEnum\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDurationInMilliSec\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"s\" form=\"unqualified\" name=\"unit\" type=\"tSIUnitEnum\"\n                      use=\"required\"/>\n                  <xs:attribute fixed=\"m\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:attributeGroup name=\"agVirtual\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"virtual\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tLNodeContainer\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"LNode\"\n                          type=\"tLNode\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tPowerSystemResource\">\n          <xs:complexContent>\n              <xs:extension base=\"tLNodeContainer\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tEquipmentContainer\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"PowerTransformer\" type=\"tPowerTransformer\">\n                          <xs:unique name=\"uniqueWindingInPowerTransformer\">\n                              <xs:selector xpath=\"./scl:TransformerWinding\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tAbstractConductingEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"2\" minOccurs=\"0\" name=\"Terminal\"\n                          type=\"tTerminal\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubEquipment\" type=\"tSubEquipment\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConductingEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractConductingEquipment\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tCommonConductingEquipmentEnum\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:attribute default=\"none\" form=\"unqualified\" name=\"phase\" type=\"tPhaseEnum\"\n                      use=\"optional\"/>\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tPowerTransformer\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"TransformerWinding\"\n                          type=\"tTransformerWinding\"/>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"PTR\" form=\"unqualified\" name=\"type\"\n                      type=\"tPowerTransformerEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTransformerWinding\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractConductingEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TapChanger\" type=\"tTapChanger\"\n                      />\n                  </xs:sequence>\n                  <xs:attribute fixed=\"PTW\" form=\"unqualified\" name=\"type\"\n                      type=\"tTransformerWindingEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTapChanger\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:attribute fixed=\"LTC\" form=\"unqualified\" name=\"type\" type=\"xs:Name\"\n                      use=\"required\"/>\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGeneralEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tGeneralEquipmentEnum\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubstation\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"VoltageLevel\"\n                          type=\"tVoltageLevel\">\n                          <xs:unique name=\"uniqueBayInVoltageLevel\">\n                              <xs:selector xpath=\"./scl:Bay\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniquePowerTransformerInVoltageLevel\">\n                              <xs:selector xpath=\"./scl:PowerTransformer\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueGeneralEquipmentInVoltageLevel\">\n                              <xs:selector xpath=\"./scl:GeneralEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInVoltageLevel\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Function\"\n                          type=\"tFunction\">\n                          <xs:unique name=\"uniqueSubFunctionInFunction\">\n                              <xs:selector xpath=\"./scl:SubFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueGeneralEquipmentInFunction\">\n                              <xs:selector xpath=\"./scl:GeneralEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVoltageLevel\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Voltage\" type=\"tVoltage\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"Bay\" type=\"tBay\">\n                          <xs:unique name=\"uniquePowerTransformerInBay\">\n                              <xs:selector xpath=\"./scl:PowerTransformer\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueConductingEquipmentInBay\">\n                              <xs:selector xpath=\"./scl:ConductingEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueGeneralEquipmentInBay\">\n                              <xs:selector xpath=\"./scl:GeneralEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInBay\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBay\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConductingEquipment\" type=\"tConductingEquipment\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConnectivityNode\" type=\"tConnectivityNode\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLNode\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"lnInst\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n                  <xs:attribute default=\"None\" form=\"unqualified\" name=\"iedName\" type=\"tName\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"ldInst\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnType\" type=\"tName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubFunction\" type=\"tSubFunction\">\n                          <xs:unique name=\"uniqueGeneralEquipmentInSubFunction\">\n                              <xs:selector xpath=\"./scl:GeneralEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConnectivityNode\">\n          <xs:complexContent>\n              <xs:extension base=\"tLNodeContainer\">\n                  <xs:attribute form=\"unqualified\" name=\"pathName\" type=\"tRef\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTerminal\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"name\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"connectivityNode\" type=\"tRef\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"substationName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"voltageLevelName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"bayName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cNodeName\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:element name=\"Substation\" type=\"tSubstation\">\n          <xs:unique name=\"uniqueVoltageLevelInSubstation\">\n              <xs:selector xpath=\"./scl:VoltageLevel\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniquePowerTranformerInSubstation\">\n              <xs:selector xpath=\"./scl:PowerTransformer\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueGeneralEquipmentInSubstation\">\n              <xs:selector xpath=\"./scl:GeneralEquipment\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueFunctionInSubstation\">\n              <xs:selector xpath=\"./scl:Function\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"ConnectivityNodeKey\">\n              <xs:selector xpath=\".//scl:ConnectivityNode\"/>\n              <xs:field xpath=\"@pathName\"/>\n          </xs:key>\n          <!-- This identity constraint must be removed, as there is a problem with the (according to part 6 text)\n    predefined connectivity node grounded resp GROUNDED. If a terminal references this node, which\n    is naturally NOT defined explicitely in the SCL file, verification fails. As far as I know, there is no way\n    to restrict the constraint in this respect, so that for value grounded it is allowed to have no explicit definition.\n    <xs:keyref name=\"ref2ConnectivityNode\" refer=\"ConnectivityNodeKey\">\n        <xs:selector xpath=\".//scl:Terminal\"/>\n        <xs:field xpath=\"@connectivityNode\"/>\n    </xs:keyref>\n    -->\n          <xs:unique name=\"uniqueLNode\">\n              <xs:selector xpath=\".//scl:LNode\"/>\n              <xs:field xpath=\"@lnInst\"/>\n              <xs:field xpath=\"@lnClass\"/>\n              <xs:field xpath=\"@iedName\"/>\n              <xs:field xpath=\"@ldInst\"/>\n              <xs:field xpath=\"@prefix\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueChildNameInSubstation\">\n              <xs:selector xpath=\"./*\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:attributeGroup name=\"agAuthentication\">\n          <xs:attribute default=\"true\" form=\"unqualified\" name=\"none\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"password\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"weak\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"strong\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"certificate\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agSmvOpts\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"refreshTime\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"sampleSynchronized\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"sampleRate\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"security\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataRef\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agOptFields\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"seqNum\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"timeStamp\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataSet\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"reasonCode\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataRef\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"entryID\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"configRef\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agLDRef\">\n          <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tName\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tName\" use=\"required\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agLNRef\">\n          <xs:attributeGroup ref=\"agLDRef\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tAnyName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tAnyName\" use=\"required\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agDORef\">\n          <xs:attributeGroup ref=\"agLNRef\"/>\n          <xs:attribute form=\"unqualified\" name=\"doName\" type=\"tName\" use=\"required\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agDARef\">\n          <xs:attributeGroup ref=\"agDORef\"/>\n          <xs:attribute form=\"unqualified\" name=\"daName\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"fc\" type=\"tFCEnum\" use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType name=\"tIED\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Services\" type=\"tServices\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"AccessPoint\"\n                          type=\"tAccessPoint\">\n                          <xs:unique name=\"uniqueLNInAccessPoint\">\n                              <xs:selector xpath=\"./scl:LN\"/>\n                              <xs:field xpath=\"@inst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"manufacturer\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"configVersion\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServices\">\n          <xs:all>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DynAssociation\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SettingGroups\">\n                  <xs:complexType>\n                      <xs:all>\n                          <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SGEdit\"\n                              type=\"tServiceYesNo\"/>\n                          <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfSG\"\n                              type=\"tServiceYesNo\"/>\n                      </xs:all>\n                  </xs:complexType>\n              </xs:element>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDirectory\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDataObjectDefinition\"\n                  type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DataObjectDirectory\"\n                  type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDataSetValue\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SetDataSetValue\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DataSetDirectory\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfDataSet\"\n                  type=\"tServiceWithMaxAndMaxAttributesAndModify\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DynDataSet\"\n                  type=\"tServiceWithMaxAndMaxAttributes\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ReadWrite\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TimerActivatedControl\"\n                  type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfReportControl\"\n                  type=\"tServiceWithMax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetCBValues\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfLogControl\" type=\"tServiceWithMax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ReportSettings\" type=\"tReportSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"LogSettings\" type=\"tLogSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSESettings\" type=\"tGSESettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SMVSettings\" type=\"tSMVSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSEDir\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GOOSE\" type=\"tServiceWithMaxAndClient\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSSE\" type=\"tServiceWithMaxAndClient\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"FileHandling\" type=\"tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfLNs\" type=\"tConfLNs\"/>\n          </xs:all>\n      </xs:complexType>\n      <xs:complexType name=\"tAccessPoint\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:choice minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"Server\" type=\"tServer\">\n                          <xs:unique name=\"uniqueAssociationInServer\">\n                              <xs:selector xpath=\"./scl:Association\"/>\n                              <xs:field xpath=\"@associationID\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element maxOccurs=\"unbounded\" ref=\"LN\"/>\n                  </xs:choice>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"router\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"clock\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServer\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"Authentication\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agAuthentication\"/>\n                          </xs:complexType>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"LDevice\"\n                          type=\"tLDevice\">\n                          <xs:unique name=\"uniqueLNInLDevice\">\n                              <xs:selector xpath=\"./scl:LN\"/>\n                              <xs:field xpath=\"@inst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"Association\" type=\"tAssociation\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"30\" form=\"unqualified\" name=\"timeout\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLDevice\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element ref=\"LN0\"/>\n                      <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"LN\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"AccessControl\"\n                          type=\"tAccessControl\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"inst\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ldName\" type=\"tRestrLdName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tAccessControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tAssociation\">\n          <xs:attribute form=\"unqualified\" name=\"kind\" type=\"tAssociationKindEnum\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"associationID\" type=\"tName\" use=\"optional\"/>\n          <xs:attributeGroup ref=\"agLNRef\"/>\n      </xs:complexType>\n      <xs:element name=\"LN0\">\n          <xs:complexType>\n              <xs:complexContent>\n                  <xs:extension base=\"tLN0\"/>\n              </xs:complexContent>\n          </xs:complexType>\n          <xs:unique name=\"uniqueReportControlInLN0\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogControlInLN0\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueGSEControlInLN0\">\n              <xs:selector xpath=\"./scl:GSEControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueSampledValueControlInLN0\">\n              <xs:selector xpath=\"./scl:SampledValueControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:DataSet\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DataSetReportLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetLogLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetGSELN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:GSEControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetSVLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:SampledValueControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n      </xs:element>\n      <xs:element name=\"LN\" type=\"tLN\">\n          <xs:unique name=\"uniqueReportControlInLN\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogControlInLN\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:DataSet\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DataSetReport\" refer=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetLog\" refer=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n      </xs:element>\n      <xs:complexType abstract=\"true\" name=\"tAnyLN\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DataSet\"\n                          type=\"tDataSet\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ReportControl\" type=\"tReportControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"LogControl\" type=\"tLogControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DOI\"\n                          type=\"tDOI\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Inputs\" type=\"tInputs\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"lnType\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLN\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyLN\">\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"inst\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tAnyName\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLN0\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyLN\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GSEControl\" type=\"tGSEControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SampledValueControl\" type=\"tSampledValueControl\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SettingControl\"\n                          type=\"tSettingControl\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SCLControl\" type=\"tSCLControl\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Log\" type=\"tLog\"/>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"LLN0\" form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"inst\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDataSet\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"FCDA\" type=\"tFCDA\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tFCDA\">\n          <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tAnyName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"doName\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"daName\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"fc\" type=\"tFCEnum\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"datSet\" type=\"tName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tControlWithTriggerOpt\">\n          <xs:complexContent>\n              <xs:extension base=\"tControl\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TrgOps\" type=\"tTrgOps\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"intgPd\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTrgOps\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"qchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dupd\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"period\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tReportControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithTriggerOpt\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"OptFields\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agOptFields\"/>\n                          </xs:complexType>\n                      </xs:element>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"RptEnabled\" type=\"tRptEnabled\"\n                      />\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"rptID\" type=\"tName\" use=\"optional\">\n                      <xs:annotation>\n                          <xs:documentation xml:lang=\"en\">Even if rptID is optional, it is\n                              recommended, for backward compatibility reason, that tools that\n                              instantiate ReportControl element, set the attribute rptID to the\n                              default system value defined by 8-1: the reference to the Report Control\n                              Block.</xs:documentation>\n                      </xs:annotation>\n                  </xs:attribute>\n                  <xs:attribute form=\"unqualified\" name=\"confRev\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"buffered\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"bufTime\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tRptEnabled\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"ClientLN\"\n                          type=\"tClientLN\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"1\" form=\"unqualified\" name=\"max\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tClientLN\">\n          <xs:attributeGroup ref=\"agLNRef\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tLogControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithTriggerOpt\">\n                  <xs:attribute form=\"unqualified\" name=\"logName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"logEna\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"reasonCode\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tInputs\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"ExtRef\" type=\"tExtRef\"\n                      />\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tExtRef\">\n          <xs:attributeGroup ref=\"agDORef\"/>\n          <xs:attribute form=\"unqualified\" name=\"daName\" type=\"tName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"intAddr\" type=\"xs:normalizedString\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tLog\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tControlWithIEDName\">\n          <xs:complexContent>\n              <xs:extension base=\"tControl\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"IEDName\"\n                          type=\"tName\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"confRev\" type=\"xs:unsignedInt\" use=\"optional\"\n                  />\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGSEControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithIEDName\">\n                  <xs:attribute default=\"GOOSE\" form=\"unqualified\" name=\"type\"\n                      type=\"tGSEControlTypeEnum\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"appID\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSampledValueControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithIEDName\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"SmvOpts\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agSmvOpts\"/>\n                          </xs:complexType>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"smvID\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"multicast\" type=\"xs:boolean\"/>\n                  <xs:attribute form=\"unqualified\" name=\"smpRate\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"nofASDU\" type=\"xs:unsignedInt\" use=\"required\"\n                  />\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSettingControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"numOfSGs\" type=\"xs:unsignedInt\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"1\" form=\"unqualified\" name=\"actSG\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSCLControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDOI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDI\" type=\"tSDI\"/>\n                      <xs:element form=\"qualified\" name=\"DAI\" type=\"tDAI\"/>\n                  </xs:choice>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tRestrName1stU\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"accessControl\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSDI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDI\" type=\"tSDI\"/>\n                      <xs:element form=\"qualified\" name=\"DAI\" type=\"tDAI\"/>\n                  </xs:choice>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDAI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Val\"\n                          type=\"tVal\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"sAddr\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"Set\" form=\"unqualified\" name=\"valKind\" type=\"tValKindEnum\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceYesNo\"/>\n      <xs:complexType name=\"tServiceWithMax\">\n          <xs:attribute form=\"unqualified\" name=\"max\" type=\"xs:unsignedInt\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndMaxAttributes\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute form=\"unqualified\" name=\"maxAttributes\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndModify\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"modify\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndMaxAttributesAndModify\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMaxAndMaxAttributes\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"modify\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndClient\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"client\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tServiceSettings\">\n          <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"cbName\" type=\"tServiceSettingsEnum\"\n              use=\"optional\"/>\n          <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"datSet\" type=\"tServiceSettingsEnum\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tReportSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"rptID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"optFields\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"bufTime\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"trgOps\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"intgPd\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLogSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"logEna\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"trgOps\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"intgPd\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGSESettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"appID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"dataLabel\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSMVSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"SmpRate\">\n                          <xs:simpleType>\n                              <xs:restriction base=\"xs:decimal\">\n                                  <xs:minInclusive value=\"0\"/>\n                              </xs:restriction>\n                          </xs:simpleType>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"svID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"optFields\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"smpRate\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConfLNs\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixPrefix\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixLnInst\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:element name=\"IED\" type=\"tIED\">\n          <xs:unique name=\"uniqueAccessPointInIED\">\n              <xs:selector xpath=\"./scl:AccessPoint\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"LDeviceInIEDKey\">\n              <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice\"/>\n              <xs:field xpath=\"@inst\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2LDeviceInIED\" refer=\"LDeviceInIEDKey\">\n              <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0/scl:LogControl\"/>\n              <xs:field xpath=\"@logName\"/>\n          </xs:keyref>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:complexType abstract=\"true\" name=\"tControlBlock\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A control block within a Logical Device (in\n                  LLN0).</xs:documentation>\n          </xs:annotation>\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Address\" type=\"tAddress\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cbName\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tCommunication\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"SubNetwork\"\n                          type=\"tSubNetwork\">\n                          <xs:unique name=\"uniqueConnectedAP\">\n                              <xs:selector xpath=\"./scl:ConnectedAP\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@apName\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubNetwork\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"BitRate\"\n                          type=\"tBitRateInMbPerSec\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"ConnectedAP\"\n                          type=\"tConnectedAP\">\n                          <xs:unique name=\"uniqueGSEinConnectedAP\">\n                              <xs:selector xpath=\"./scl:GSE\"/>\n                              <xs:field xpath=\"@cbName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueSMVinConnectedAP\">\n                              <xs:selector xpath=\"./scl:SMV\"/>\n                              <xs:field xpath=\"@cbName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\">\n                      <xs:annotation>\n                          <xs:documentation xml:lang=\"en\">The bus protocol types are defined in IEC\n                              61850 Part 8 and 9</xs:documentation>\n                      </xs:annotation>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConnectedAP\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Address\" type=\"tAddress\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"GSE\"\n                          type=\"tGSE\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"SMV\"\n                          type=\"tSMV\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"PhysConn\"\n                          type=\"tPhysConn\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"apName\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tAddress\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"P\" type=\"tP\"/>\n          </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"tGSE\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlBlock\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"MinTime\"\n                          type=\"tDurationInMilliSec\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"MaxTime\"\n                          type=\"tDurationInMilliSec\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSMV\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlBlock\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tPhysConn\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"P\" type=\"tP\"/>\n          </xs:sequence>\n          <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tP\">\n          <xs:simpleContent>\n              <xs:extension base=\"tPAddr\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A TCP/IP address</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\"/>\n                  <xs:attribute fixed=\"IP\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-SUBNET\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A subnet Mask for TCP/IP profiles</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\"/>\n                  <xs:attribute fixed=\"IP-SUBNET\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-GATEWAY\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A First Hop IP gateway address for TCP/IP\n                  profiles</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\\\\.[0-2]?\\\\d{1,2}\"/>\n                  <xs:attribute fixed=\"IP-GATEWAY\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-NSAP\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI Network Address</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"40\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-NSAP\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-TSEL\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI Transport Selector</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"8\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-TSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-SSEL\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI Session Selector</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"16\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-SSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-PSEL\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI Presentation Selector</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"16\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-PSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AP-Title\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI ACSE AP Title value</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-9,]+\"/>\n                  <xs:attribute fixed=\"OSI-AP-Title\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n              <!--<xs:pattern value=\"&#34;[\\\\d,&#44;]+&#34;\"/>-->\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AP-Invoke\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI ACSE AP Invoke ID</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"\\\\d+\"/>\n                  <xs:attribute fixed=\"OSI-AP-Invoke\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AE-Qualifier\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI ACSE AE Qualifier</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"\\\\d+\"/>\n                  <xs:attribute fixed=\"OSI-AE-Qualifier\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AE-Invoke\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An OSI ACSE AE Invoke ID</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"\\\\d+\"/>\n                  <xs:attribute fixed=\"OSI-AE-Invoke\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_MAC-Address\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A Media Access Address value</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:minLength value=\"17\"/>\n                  <xs:maxLength value=\"17\"/>\n                  <xs:pattern\n                      value=\"[\\\\d,A-F]{2}\\\\-[\\\\d,A-F]{2}\\\\-[\\\\d,A-F]{2}\\\\-[\\\\d,A-F]{2}\\\\-[\\\\d,A-F]{2}\\\\-[\\\\d,A-F]{2}\"/>\n                  <xs:attribute fixed=\"MAC-Address\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_APPID\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">An Application Identifier</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:minLength value=\"4\"/>\n                  <xs:maxLength value=\"4\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"APPID\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_VLAN-PRIORITY\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A VLAN User Priority</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-7]\"/>\n                  <xs:attribute fixed=\"VLAN-PRIORITY\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_VLAN-ID\">\n          <xs:annotation>\n              <xs:documentation xml:lang=\"en\">A VLAN ID</xs:documentation>\n          </xs:annotation>\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:minLength value=\"3\"/>\n                  <xs:maxLength value=\"3\"/>\n                  <xs:pattern value=\"[\\\\d,A-F]+\"/>\n                  <xs:attribute fixed=\"VLAN-ID\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:element name=\"Communication\" type=\"tCommunication\">\n          <xs:unique name=\"uniqueSubNetwork\">\n              <xs:selector xpath=\"./scl:SubNetwork\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    Copyright (c) 2013 IEC. All rights reserved.    Version\n              1.7. Release 2014/03/11.   </xs:documentation>\n      </xs:annotation>\n      <xs:attributeGroup name=\"agDATrgOp\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"qchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dupd\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tAbstractDataAttribute\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Val\"\n                          type=\"tVal\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"sAddr\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"bType\" type=\"tBasicTypeEnum\" use=\"required\"/>\n                  <xs:attribute default=\"Set\" form=\"unqualified\" name=\"valKind\" type=\"tValKindEnum\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tAnyName\" use=\"optional\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"count\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLNodeType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"DO\" type=\"tDO\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDO\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tRestrName1stU\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"accessControl\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"transient\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDOType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDO\" type=\"tSDO\"/>\n                      <xs:element form=\"qualified\" name=\"DA\" type=\"tDA\"/>\n                  </xs:choice>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cdc\" type=\"tCDCEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSDO\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDA\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractDataAttribute\">\n                  <xs:attributeGroup ref=\"agDATrgOp\"/>\n                  <xs:attribute form=\"unqualified\" name=\"fc\" type=\"tFCEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDAType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"BDA\" type=\"tBDA\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBDA\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractDataAttribute\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEnumType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"EnumVal\"\n                          type=\"tEnumVal\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEnumVal\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:normalizedString\">\n                  <xs:attribute form=\"unqualified\" name=\"ord\" type=\"xs:integer\" use=\"required\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDataTypeTemplates\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"LNodeType\" type=\"tLNodeType\">\n                  <xs:unique name=\"uniqueDOInLNodeType\">\n                      <xs:selector xpath=\"scl:DO\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"DOType\" type=\"tDOType\">\n                  <xs:unique name=\"uniqueDAorSDOInDOType\">\n                      <xs:selector xpath=\"./*\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DAType\"\n                  type=\"tDAType\">\n                  <xs:unique name=\"uniqueBDAInDAType\">\n                      <xs:selector xpath=\"scl:BDA\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"EnumType\"\n                  type=\"tEnumType\">\n                  <xs:unique name=\"uniqueOrdInEnumType\">\n                      <xs:selector xpath=\"scl:EnumVal\"/>\n                      <xs:field xpath=\"@ord\"/>\n                  </xs:unique>\n              </xs:element>\n          </xs:sequence>\n      </xs:complexType>\n      <xs:element name=\"DataTypeTemplates\" type=\"tDataTypeTemplates\">\n          <xs:unique name=\"uniqueLNodeType\">\n              <xs:selector xpath=\"scl:LNodeType\"/>\n              <xs:field xpath=\"@id\"/>\n              <xs:field xpath=\"@iedType\"/>\n          </xs:unique>\n          <xs:key name=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:DOType\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DOType\" refer=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:LNodeType/scl:DO\"/>\n              <xs:field xpath=\"@type\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DOTypeForSDO\" refer=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:DOType/scl:SDO\"/>\n              <xs:field xpath=\"@type\"/>\n          </xs:keyref>\n          <xs:key name=\"DATypeKey\">\n              <xs:selector xpath=\"scl:DAType\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:key>\n          <xs:key name=\"EnumTypeKey\">\n              <xs:selector xpath=\"scl:EnumType\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:key>\n      </xs:element>\n      <xs:element name=\"SCL\">\n          <xs:complexType>\n              <xs:complexContent>\n                  <xs:extension base=\"tBaseElement\">\n                      <xs:sequence>\n                          <xs:element name=\"Header\" type=\"tHeader\">\n                              <xs:unique name=\"uniqueHitem\">\n                                  <xs:selector xpath=\"./scl:History/scl:Hitem\"/>\n                                  <xs:field xpath=\"@version\"/>\n                                  <xs:field xpath=\"@revision\"/>\n                              </xs:unique>\n                          </xs:element>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"Substation\"/>\n                          <xs:element minOccurs=\"0\" ref=\"Communication\"/>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"IED\"/>\n                          <xs:element minOccurs=\"0\" ref=\"DataTypeTemplates\"/>\n                      </xs:sequence>\n                  </xs:extension>\n              </xs:complexContent>\n          </xs:complexType>\n          <xs:unique name=\"uniqueSubstation\">\n              <xs:selector xpath=\"./scl:Substation\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"IEDKey\">\n              <xs:selector xpath=\"./scl:IED\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:key name=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:DataTypeTemplates/scl:LNodeType\"/>\n              <xs:field xpath=\"@id\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2LNodeTypeDomain1\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:LN\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2LNodeTypeDomain2\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2LNodeTypeLLN0\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n      </xs:element>\n  </xs:schema>\n  `,\n  '2007B': `<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<xs:schema xmlns:scl=\"http://www.iec.ch/61850/2003/SCL\" xmlns=\"http://www.iec.ch/61850/2003/SCL\" elementFormDefault=\"qualified\" targetNamespace=\"http://www.iec.ch/61850/2003/SCL\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\n\t\t\tImplemented Ed. 2 Tissues: 658, 668, 687, 768, 779, 789, 804, 806, 807, 822, 824, 845, 853, 855, 856, 857, 886, 936, 1175, 1189, 1208.\n\t\t\tTissues not relevant for the SCL schema: 660, 661 (Ed.3), 663, 678, 699, 700, 705, 706 (Ed.3), 718, 719, 721, 731, 733, 752, 769, 787, 788, 815, 823, 825, 837, 847, 865, 873, 883, 884, 885, 901, 914, 915, 918, 927 (Ed.3), 930, 938, 949, 961, 1048, 1054, 1059, 1118, 1130, 1131, 1147, 1161, 1168, 1170 (Ed.3), 1173, 1188, 1195, 1200, 1204, 1207, 1221, 1224, 1241 (Ed.3), 1255, 1257 (Ed.3), 1284.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:element name=\"SCL\">\n    <xs:complexType>\n      <xs:complexContent>\n        <xs:extension base=\"tBaseElement\">\n          <xs:sequence>\n            <xs:element name=\"Header\" type=\"tHeader\">\n              <xs:unique name=\"uniqueHitem\">\n                <xs:selector xpath=\"./scl:History/scl:Hitem\" />\n                <xs:field xpath=\"@version\" />\n                <xs:field xpath=\"@revision\" />\n              </xs:unique>\n            </xs:element>\n            <xs:element ref=\"Substation\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n            <xs:element ref=\"Communication\" minOccurs=\"0\" />\n            <xs:element ref=\"IED\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n            <xs:element ref=\"DataTypeTemplates\" minOccurs=\"0\" />\n            <xs:element ref=\"Line\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n            <xs:element ref=\"Process\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          </xs:sequence>\n          <xs:attribute name=\"version\" fixed=\"2007\" type=\"tSclVersion\" use=\"required\" />\n          <xs:attribute name=\"revision\" fixed=\"B\" type=\"tSclRevision\" use=\"required\" />\n          <xs:attribute name=\"release\" fixed=\"1\" type=\"tSclRelease\" use=\"optional\" />\n        </xs:extension>\n      </xs:complexContent>\n    </xs:complexType>\n    <xs:key name=\"SubstationKey\">\n      <xs:selector xpath=\"./scl:Substation|./scl:Process|./scl:Line\" />\n      <xs:field xpath=\"@name\" />\n    </xs:key>\n    <xs:key name=\"IEDKey\">\n      <xs:selector xpath=\"./scl:IED\" />\n      <xs:field xpath=\"@name\" />\n    </xs:key>\n    <xs:key name=\"LNodeTypeKey\">\n      <xs:selector xpath=\"./scl:DataTypeTemplates/scl:LNodeType\" />\n      <xs:field xpath=\"@id\" />\n      <xs:field xpath=\"@lnClass\" />\n    </xs:key>\n    <xs:keyref name=\"ref2LNodeTypeDomain1\" refer=\"LNodeTypeKey\">\n      <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:LN\" />\n      <xs:field xpath=\"@lnType\" />\n      <xs:field xpath=\"@lnClass\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2LNodeTypeDomain2\" refer=\"LNodeTypeKey\">\n      <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN\" />\n      <xs:field xpath=\"@lnType\" />\n      <xs:field xpath=\"@lnClass\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2LNodeTypeLLN0\" refer=\"LNodeTypeKey\">\n      <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0\" />\n      <xs:field xpath=\"@lnType\" />\n      <xs:field xpath=\"@lnClass\" />\n    </xs:keyref>\n    <xs:keyref name=\"refConnectedAP2IED\" refer=\"IEDKey\">\n      <xs:selector xpath=\"./scl:Communication/scl:SubNetwork/scl:ConnectedAP\" />\n      <xs:field xpath=\"@iedName\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2SubstationFromTerminal\" refer=\"SubstationKey\">\n      <xs:selector xpath=\".//scl:Terminal\" />\n      <xs:field xpath=\"@substationName\" />\n    </xs:keyref>\n    <xs:key name=\"ConnectivityNodeKey\">\n      <xs:selector xpath=\".//scl:ConnectivityNode\" />\n      <xs:field xpath=\"@pathName\" />\n    </xs:key>\n  </xs:element>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_Substation.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:attributeGroup name=\"agVirtual\">\n    <xs:attribute name=\"virtual\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:complexType abstract=\"true\" name=\"tLNodeContainer\">\n    <xs:complexContent>\n      <xs:extension base=\"tNaming\">\n        <xs:sequence>\n          <xs:element name=\"LNode\" type=\"tLNode\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tPowerSystemResource\">\n    <xs:complexContent>\n      <xs:extension base=\"tLNodeContainer\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tEquipmentContainer\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"PowerTransformer\" type=\"tPowerTransformer\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInPowerTransformer\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInPTR\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"GeneralEquipment\" type=\"tGeneralEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInGeneralEquipment\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInGE\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tEquipment\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:attributeGroup ref=\"agVirtual\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tAbstractConductingEquipment\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipment\">\n        <xs:sequence>\n          <xs:element name=\"Terminal\" type=\"tTerminal\" minOccurs=\"0\" maxOccurs=\"2\" />\n          <xs:element name=\"SubEquipment\" type=\"tSubEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubEquipment\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInACESubEquipment\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tConductingEquipment\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractConductingEquipment\">\n        <xs:sequence>\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForCE\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForCE\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"tCommonConductingEquipmentEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSubEquipment\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForSubEq\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForSubEq\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"phase\" default=\"none\" type=\"tPhaseEnum\" use=\"optional\" />\n        <xs:attributeGroup ref=\"agVirtual\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tPowerTransformer\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipment\">\n        <xs:sequence>\n          <xs:element name=\"TransformerWinding\" type=\"tTransformerWinding\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInTransformerWinding\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInPTW\">\n              <xs:selector xpath=\"./scl:SubEquipment|./scl:TapChanger|./scl:EqFunction\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"SubEquipment\" type=\"tSubEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubEquipmentPTR\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInPTRSubEquipment\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForPTR\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForPTR\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" fixed=\"PTR\" type=\"tPowerTransformerEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tTransformerWinding\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractConductingEquipment\">\n        <xs:sequence>\n          <xs:element name=\"TapChanger\" type=\"tTapChanger\" minOccurs=\"0\">\n            <xs:unique name=\"uniqueLNodeInTapChanger\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInLTC\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"NeutralPoint\" type=\"tTerminal\" minOccurs=\"0\" />\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForPTW\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForPTW\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" fixed=\"PTW\" type=\"tTransformerWindingEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tTapChanger\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"SubEquipment\" type=\"tSubEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubEquipmentLTC\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInLTCSubEquipment\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForLTC\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForLTC\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" fixed=\"LTC\" type=\"xs:Name\" use=\"required\" />\n        <xs:attributeGroup ref=\"agVirtual\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tGeneralEquipment\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipment\">\n        <xs:sequence>\n          <xs:element name=\"EqFunction\" type=\"tEqFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFuncForGE\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFuncForGE\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"tGeneralEquipmentEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSubstation\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipmentContainer\">\n        <xs:sequence>\n          <xs:element name=\"VoltageLevel\" type=\"tVoltageLevel\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueChildNameInVoltageLevel\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueLNodeInVoltageLevel\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Function\" type=\"tFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFunctionSS\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInSubstationFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tVoltageLevel\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipmentContainer\">\n        <xs:sequence>\n          <xs:element name=\"Voltage\" type=\"tVoltage\" minOccurs=\"0\" />\n          <xs:element name=\"Bay\" type=\"tBay\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueChildNameInBay\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueLNodeInBay\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Function\" type=\"tFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFunctionVL\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInVoltageLevelFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"nomFreq\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:decimal\">\n              <xs:minInclusive value=\"0\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n        <xs:attribute name=\"numPhases\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:unsignedByte\">\n              <xs:minExclusive value=\"0\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tBay\">\n    <xs:complexContent>\n      <xs:extension base=\"tEquipmentContainer\">\n        <xs:sequence>\n          <xs:element name=\"ConductingEquipment\" type=\"tConductingEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInConductingEquipment\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInCE\">\n              <xs:selector xpath=\"./scl:SubEquipment|./scl:EqFunction\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"ConnectivityNode\" type=\"tConnectivityNode\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInConnectivityNode\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Function\" type=\"tFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFunctionB\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInBayFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLNode\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"iedName\" default=\"None\" type=\"tIEDName\" use=\"optional\" />\n        <xs:attribute name=\"ldInst\" default=\"\" type=\"tLDInstOrEmpty\" use=\"optional\" />\n        <xs:attribute name=\"prefix\" default=\"\" type=\"tPrefix\" use=\"optional\" />\n        <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\" />\n        <xs:attribute name=\"lnInst\" default=\"\" type=\"tLNInstOrEmpty\" use=\"optional\" />\n        <xs:attribute name=\"lnType\" type=\"tName\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tFunction\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"SubFunction\" type=\"tSubFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInSubFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"GeneralEquipment\" type=\"tGeneralEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInGEFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"ConductingEquipment\" type=\"tConductingEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInConductingEquipmentOfFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInCondEq\">\n              <xs:selector xpath=\"./scl:SubEquipment|./scl:EqFunction\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSubFunction\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"GeneralEquipment\" type=\"tGeneralEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfSubFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInGESubFunc\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"ConductingEquipment\" type=\"tConductingEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInConductingEquipmentOfSubFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueSubEquipmentSubFunc\">\n              <xs:selector xpath=\"./scl:SubEquipment\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"SubFunction\" type=\"tSubFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubSubFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueSubSubFunc\">\n              <xs:selector xpath=\"./scl:SubFunction\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tAbstractEqFuncSubFunc\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"GeneralEquipment\" type=\"tGeneralEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfFuncForEquipment\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInGEFuncForEquipment\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"EqSubFunction\" type=\"tEqSubFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInSubFuncForEquipment\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueSubFuncForEquipment\">\n              <xs:selector xpath=\"./scl:EqSubFunction\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tEqFunction\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractEqFuncSubFunc\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tEqSubFunction\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractEqFuncSubFunc\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tConnectivityNode\">\n    <xs:complexContent>\n      <xs:extension base=\"tLNodeContainer\">\n        <xs:attribute name=\"pathName\" type=\"tRef\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tTerminal\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"name\" default=\"\" type=\"tAnyName\" use=\"optional\" />\n        <xs:attribute name=\"connectivityNode\" type=\"tRef\" use=\"required\" />\n        <xs:attribute name=\"processName\" type=\"tProcessName\" use=\"optional\" />\n        <xs:attribute name=\"substationName\" type=\"tName\" use=\"required\" />\n        <xs:attribute name=\"voltageLevelName\" type=\"tName\" use=\"required\" />\n        <xs:attribute name=\"bayName\" type=\"tName\" use=\"required\" />\n        <xs:attribute name=\"cNodeName\" type=\"tName\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tGeneralEquipmentContainer\">\n    <xs:complexContent>\n      <xs:extension base=\"tPowerSystemResource\">\n        <xs:sequence>\n          <xs:element name=\"GeneralEquipment\" type=\"tGeneralEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInGeneralEquipment2\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInGE2\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Function\" type=\"tFunction\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNodeInFunction\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueChildNameInFunction\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLine\">\n    <xs:complexContent>\n      <xs:extension base=\"tGeneralEquipmentContainer\">\n        <xs:sequence>\n          <xs:element name=\"ConductingEquipment\" type=\"tConductingEquipment\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"ConnectivityNode\" type=\"tConnectivityNode\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"tLineType\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tProcess\">\n    <xs:complexContent>\n      <xs:extension base=\"tGeneralEquipmentContainer\">\n        <xs:sequence>\n          <xs:element name=\"ConductingEquipment\" type=\"tConductingEquipment\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"Substation\" type=\"tSubstation\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueChildNameInProcessSubstation\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueLNodeInProcessSubstation\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Line\" type=\"tLine\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"Process\" type=\"tProcess\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueChildNameInSubProcess\">\n              <xs:selector xpath=\"./*\" />\n              <xs:field xpath=\"@name\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueLNodeInSubProcess\">\n              <xs:selector xpath=\"./scl:LNode\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"tProcessType\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:element name=\"Substation\" type=\"tSubstation\">\n    <xs:unique name=\"uniqueChildNameInSubstation\">\n      <xs:selector xpath=\"./*\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLNodeInSubstation\">\n      <xs:selector xpath=\"./scl:LNode\" />\n      <xs:field xpath=\"@lnInst\" />\n      <xs:field xpath=\"@lnClass\" />\n      <xs:field xpath=\"@iedName\" />\n      <xs:field xpath=\"@ldInst\" />\n      <xs:field xpath=\"@prefix\" />\n    </xs:unique>\n  </xs:element>\n  <xs:element name=\"Process\" type=\"tProcess\">\n    <xs:unique name=\"uniqueChildNameInProcess\">\n      <xs:selector xpath=\"./*\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLNodeInProcess\">\n      <xs:selector xpath=\"./scl:LNode\" />\n      <xs:field xpath=\"@lnInst\" />\n      <xs:field xpath=\"@lnClass\" />\n      <xs:field xpath=\"@iedName\" />\n      <xs:field xpath=\"@ldInst\" />\n      <xs:field xpath=\"@prefix\" />\n    </xs:unique>\n  </xs:element>\n  <xs:element name=\"Line\" type=\"tLine\">\n    <xs:unique name=\"uniqueChildNameInLine\">\n      <xs:selector xpath=\"./*\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLNodeInLine\">\n      <xs:selector xpath=\"./scl:LNode\" />\n      <xs:field xpath=\"@lnInst\" />\n      <xs:field xpath=\"@lnClass\" />\n      <xs:field xpath=\"@iedName\" />\n      <xs:field xpath=\"@ldInst\" />\n      <xs:field xpath=\"@prefix\" />\n    </xs:unique>\n  </xs:element>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_BaseTypes.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:attributeGroup name=\"agDesc\">\n    <xs:attribute name=\"desc\" default=\"\" type=\"xs:normalizedString\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:complexType abstract=\"true\" name=\"tBaseElement\">\n    <xs:sequence>\n      <xs:any minOccurs=\"0\" maxOccurs=\"unbounded\" namespace=\"##other\" processContents=\"lax\" />\n      <xs:element name=\"Text\" type=\"tText\" minOccurs=\"0\" />\n      <xs:element name=\"Private\" type=\"tPrivate\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" />\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tUnNaming\">\n    <xs:complexContent>\n      <xs:extension base=\"tBaseElement\">\n        <xs:attributeGroup ref=\"agDesc\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tNaming\">\n    <xs:complexContent>\n      <xs:extension base=\"tBaseElement\">\n        <xs:attribute name=\"name\" type=\"tName\" use=\"required\" />\n        <xs:attributeGroup ref=\"agDesc\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tIDNaming\">\n    <xs:complexContent>\n      <xs:extension base=\"tBaseElement\">\n        <xs:attribute name=\"id\" type=\"tName\" use=\"required\" />\n        <xs:attributeGroup ref=\"agDesc\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" mixed=\"true\" name=\"tAnyContentFromOtherNamespace\">\n    <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">\n      <xs:any namespace=\"##other\" processContents=\"lax\" />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" />\n  </xs:complexType>\n  <xs:complexType mixed=\"true\" name=\"tText\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyContentFromOtherNamespace\">\n        <xs:attribute name=\"source\" type=\"xs:anyURI\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType mixed=\"true\" name=\"tPrivate\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyContentFromOtherNamespace\">\n        <xs:attribute name=\"type\" use=\"required\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n        <xs:attribute name=\"source\" type=\"xs:anyURI\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tHeader\">\n    <xs:sequence>\n      <xs:element name=\"Text\" type=\"tText\" minOccurs=\"0\" />\n      <xs:element name=\"History\" minOccurs=\"0\">\n        <xs:complexType>\n          <xs:sequence>\n            <xs:element name=\"Hitem\" type=\"tHitem\" maxOccurs=\"unbounded\" />\n          </xs:sequence>\n        </xs:complexType>\n      </xs:element>\n    </xs:sequence>\n    <xs:attribute name=\"id\" type=\"xs:normalizedString\" use=\"required\" />\n    <xs:attribute name=\"version\" type=\"xs:normalizedString\" use=\"optional\" />\n    <xs:attribute name=\"revision\" default=\"\" type=\"xs:normalizedString\" use=\"optional\" />\n    <xs:attribute name=\"toolID\" type=\"xs:normalizedString\" use=\"optional\" />\n    <xs:attribute name=\"nameStructure\" default=\"IEDName\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:Name\">\n          <xs:enumeration value=\"IEDName\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n  <xs:complexType mixed=\"true\" name=\"tHitem\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyContentFromOtherNamespace\">\n        <xs:attribute name=\"version\" type=\"xs:normalizedString\" use=\"required\" />\n        <xs:attribute name=\"revision\" type=\"xs:normalizedString\" use=\"required\" />\n        <xs:attribute name=\"when\" type=\"xs:normalizedString\" use=\"required\" />\n        <xs:attribute name=\"who\" type=\"xs:normalizedString\" />\n        <xs:attribute name=\"what\" type=\"xs:normalizedString\" />\n        <xs:attribute name=\"why\" type=\"xs:normalizedString\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tVal\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:normalizedString\">\n        <xs:attribute name=\"sGroup\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tValueWithUnit\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:decimal\">\n        <xs:attribute name=\"unit\" type=\"xs:token\" use=\"required\" />\n        <xs:attribute name=\"multiplier\" default=\"\" type=\"tUnitMultiplierEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tVoltage\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tValueWithUnit\">\n        <xs:attribute name=\"unit\" fixed=\"V\" type=\"xs:token\" use=\"required\" />\n        <xs:attribute name=\"multiplier\" default=\"\" type=\"tUnitMultiplierEnum\" use=\"optional\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDurationInSec\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tValueWithUnit\">\n        <xs:attribute name=\"unit\" fixed=\"s\" type=\"xs:token\" use=\"required\" />\n        <xs:attribute name=\"multiplier\" default=\"\" type=\"tUnitMultiplierEnum\" use=\"optional\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDurationInMilliSec\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:decimal\">\n        <xs:attribute name=\"unit\" fixed=\"s\" type=\"xs:token\" use=\"optional\" />\n        <xs:attribute name=\"multiplier\" fixed=\"m\" type=\"tUnitMultiplierEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tBitRateInMbPerSec\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:decimal\">\n        <xs:attribute name=\"unit\" fixed=\"b/s\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"multiplier\" fixed=\"M\" type=\"tUnitMultiplierEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_Enums.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:simpleType name=\"tPredefinedPTypeEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"IP\" />\n      <xs:enumeration value=\"IP-SUBNET\" />\n      <xs:enumeration value=\"IP-GATEWAY\" />\n      <xs:enumeration value=\"OSI-NSAP\" />\n      <xs:enumeration value=\"OSI-TSEL\" />\n      <xs:enumeration value=\"OSI-SSEL\" />\n      <xs:enumeration value=\"OSI-PSEL\" />\n      <xs:enumeration value=\"OSI-AP-Title\" />\n      <xs:enumeration value=\"OSI-AP-Invoke\" />\n      <xs:enumeration value=\"OSI-AE-Qualifier\" />\n      <xs:enumeration value=\"OSI-AE-Invoke\" />\n      <xs:enumeration value=\"MAC-Address\" />\n      <xs:enumeration value=\"APPID\" />\n      <xs:enumeration value=\"VLAN-PRIORITY\" />\n      <xs:enumeration value=\"VLAN-ID\" />\n      <xs:enumeration value=\"SNTP-Port\" />\n      <xs:enumeration value=\"MMS-Port\" />\n      <xs:enumeration value=\"DNSName\" />\n      <xs:enumeration value=\"IPv6FlowLabel\" />\n      <xs:enumeration value=\"IPv6ClassOfTraffic\" />\n      <xs:enumeration value=\"C37-118-IP-Port\" />\n      <xs:enumeration value=\"IP-UDP-PORT\" />\n      <xs:enumeration value=\"IP-TCP-PORT\" />\n      <xs:enumeration value=\"IPv6\" />\n      <xs:enumeration value=\"IPv6-SUBNET\" />\n      <xs:enumeration value=\"IPv6-GATEWAY\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionPTypeEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[A-Z][0-9A-Za-z\\\\-]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPTypeEnum\">\n    <xs:union memberTypes=\"tPredefinedPTypeEnum tExtensionPTypeEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedPTypePhysConnEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"Type\" />\n      <xs:enumeration value=\"Plug\" />\n      <xs:enumeration value=\"Cable\" />\n      <xs:enumeration value=\"Port\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPTypePhysConnEnum\">\n    <xs:union memberTypes=\"tPredefinedPTypePhysConnEnum tExtensionPTypeEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedAttributeNameEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"T\" />\n      <xs:enumeration value=\"Test\" />\n      <xs:enumeration value=\"Check\" />\n      <xs:enumeration value=\"SIUnit\" />\n      <xs:enumeration value=\"Oper\" />\n      <xs:enumeration value=\"SBO\" />\n      <xs:enumeration value=\"SBOw\" />\n      <xs:enumeration value=\"Cancel\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionAttributeNameEnum\">\n    <xs:restriction base=\"tRestrName1stL\">\n      <xs:maxLength value=\"60\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAttributeNameEnum\">\n    <xs:union memberTypes=\"tPredefinedAttributeNameEnum tExtensionAttributeNameEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedCommonConductingEquipmentEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"CBR\" />\n      <xs:enumeration value=\"DIS\" />\n      <xs:enumeration value=\"VTR\" />\n      <xs:enumeration value=\"CTR\" />\n      <xs:enumeration value=\"GEN\" />\n      <xs:enumeration value=\"CAP\" />\n      <xs:enumeration value=\"REA\" />\n      <xs:enumeration value=\"CON\" />\n      <xs:enumeration value=\"MOT\" />\n      <xs:enumeration value=\"EFN\" />\n      <xs:enumeration value=\"PSH\" />\n      <xs:enumeration value=\"BAT\" />\n      <xs:enumeration value=\"BSH\" />\n      <xs:enumeration value=\"CAB\" />\n      <xs:enumeration value=\"GIL\" />\n      <xs:enumeration value=\"LIN\" />\n      <xs:enumeration value=\"RES\" />\n      <xs:enumeration value=\"RRC\" />\n      <xs:enumeration value=\"SAR\" />\n      <xs:enumeration value=\"TCF\" />\n      <xs:enumeration value=\"TCR\" />\n      <xs:enumeration value=\"IFL\" />\n      <xs:enumeration value=\"FAN\" />\n      <xs:enumeration value=\"SCR\" />\n      <xs:enumeration value=\"SMC\" />\n      <xs:enumeration value=\"PMP\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionEquipmentEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:minLength value=\"3\" />\n      <xs:pattern value=\"E[A-Z]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tCommonConductingEquipmentEnum\">\n    <xs:union memberTypes=\"tPredefinedCommonConductingEquipmentEnum tExtensionEquipmentEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPowerTransformerEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"PTR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tTransformerWindingEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"PTW\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedGeneralEquipmentEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"AXN\" />\n      <xs:enumeration value=\"BAT\" />\n      <xs:enumeration value=\"MOT\" />\n      <xs:enumeration value=\"FAN\" />\n      <xs:enumeration value=\"FIL\" />\n      <xs:enumeration value=\"PMP\" />\n      <xs:enumeration value=\"TNK\" />\n      <xs:enumeration value=\"VLV\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionGeneralEquipmentEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:minLength value=\"3\" />\n      <xs:pattern value=\"E[A-Z]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tGeneralEquipmentEnum\">\n    <xs:union memberTypes=\"tPredefinedGeneralEquipmentEnum tExtensionGeneralEquipmentEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tServiceSettingsNoDynEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"Conf\" />\n      <xs:enumeration value=\"Fix\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tServiceSettingsEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"Dyn\" />\n      <xs:enumeration value=\"Conf\" />\n      <xs:enumeration value=\"Fix\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tRedProtEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"none\" />\n      <xs:enumeration value=\"hsr\" />\n      <xs:enumeration value=\"prp\" />\n      <xs:enumeration value=\"rstp\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSMVDeliveryEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"unicast\" />\n      <xs:enumeration value=\"multicast\" />\n      <xs:enumeration value=\"both\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPhaseEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"A\" />\n      <xs:enumeration value=\"B\" />\n      <xs:enumeration value=\"C\" />\n      <xs:enumeration value=\"N\" />\n      <xs:enumeration value=\"all\" />\n      <xs:enumeration value=\"none\" />\n      <xs:enumeration value=\"AB\" />\n      <xs:enumeration value=\"BC\" />\n      <xs:enumeration value=\"CA\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAuthenticationEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"none\" />\n      <xs:enumeration value=\"password\" />\n      <xs:enumeration value=\"weak\" />\n      <xs:enumeration value=\"strong\" />\n      <xs:enumeration value=\"certificate\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAssociationKindEnum\">\n    <xs:restriction base=\"xs:token\">\n      <xs:enumeration value=\"pre-established\" />\n      <xs:enumeration value=\"predefined\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLPHDEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"LPHD\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLLN0Enum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"LLN0\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSystemLNGroupEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"L[A-Z]*\" />\n      <xs:pattern value=\"LLN0\" />\n      <xs:enumeration value=\"LLN0\" />\n      <xs:enumeration value=\"LPHD\" />\n      <xs:enumeration value=\"LCCH\" />\n      <xs:enumeration value=\"LGOS\" />\n      <xs:enumeration value=\"LSVS\" />\n      <xs:enumeration value=\"LTIM\" />\n      <xs:enumeration value=\"LTMS\" />\n      <xs:enumeration value=\"LTRK\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupAEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"A[A-Z]*\" />\n      <xs:enumeration value=\"ANCR\" />\n      <xs:enumeration value=\"ARCO\" />\n      <xs:enumeration value=\"ARIS\" />\n      <xs:enumeration value=\"ATCC\" />\n      <xs:enumeration value=\"AVCO\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupCEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"C[A-Z]*\" />\n      <xs:enumeration value=\"CALH\" />\n      <xs:enumeration value=\"CCGR\" />\n      <xs:enumeration value=\"CILO\" />\n      <xs:enumeration value=\"CPOW\" />\n      <xs:enumeration value=\"CSWI\" />\n      <xs:enumeration value=\"CSYN\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupFEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"F[A-Z]*\" />\n      <xs:enumeration value=\"FCNT\" />\n      <xs:enumeration value=\"FCSD\" />\n      <xs:enumeration value=\"FFIL\" />\n      <xs:enumeration value=\"FLIM\" />\n      <xs:enumeration value=\"FPID\" />\n      <xs:enumeration value=\"FRMP\" />\n      <xs:enumeration value=\"FSPT\" />\n      <xs:enumeration value=\"FXOT\" />\n      <xs:enumeration value=\"FXUT\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupGEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"G[A-Z]*\" />\n      <xs:enumeration value=\"GAPC\" />\n      <xs:enumeration value=\"GGIO\" />\n      <xs:enumeration value=\"GLOG\" />\n      <xs:enumeration value=\"GSAL\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupIEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"I[A-Z]*\" />\n      <xs:enumeration value=\"IARC\" />\n      <xs:enumeration value=\"IHMI\" />\n      <xs:enumeration value=\"ISAF\" />\n      <xs:enumeration value=\"ITCI\" />\n      <xs:enumeration value=\"ITMI\" />\n      <xs:enumeration value=\"ITPC\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupKEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"K[A-Z]*\" />\n      <xs:enumeration value=\"KFAN\" />\n      <xs:enumeration value=\"KFIL\" />\n      <xs:enumeration value=\"KPMP\" />\n      <xs:enumeration value=\"KTNK\" />\n      <xs:enumeration value=\"KVLV\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupMEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"M[A-Z]*\" />\n      <xs:enumeration value=\"MDIF\" />\n      <xs:enumeration value=\"MENV\" />\n      <xs:enumeration value=\"MFLK\" />\n      <xs:enumeration value=\"MHAI\" />\n      <xs:enumeration value=\"MHAN\" />\n      <xs:enumeration value=\"MHYD\" />\n      <xs:enumeration value=\"MMDC\" />\n      <xs:enumeration value=\"MMET\" />\n      <xs:enumeration value=\"MMTN\" />\n      <xs:enumeration value=\"MMTR\" />\n      <xs:enumeration value=\"MMXN\" />\n      <xs:enumeration value=\"MMXU\" />\n      <xs:enumeration value=\"MSQI\" />\n      <xs:enumeration value=\"MSTA\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupPEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"P[A-Z]*\" />\n      <xs:enumeration value=\"PDIF\" />\n      <xs:enumeration value=\"PDIR\" />\n      <xs:enumeration value=\"PDIS\" />\n      <xs:enumeration value=\"PDOP\" />\n      <xs:enumeration value=\"PDUP\" />\n      <xs:enumeration value=\"PFRC\" />\n      <xs:enumeration value=\"PHAR\" />\n      <xs:enumeration value=\"PHIZ\" />\n      <xs:enumeration value=\"PIOC\" />\n      <xs:enumeration value=\"PMRI\" />\n      <xs:enumeration value=\"PMSS\" />\n      <xs:enumeration value=\"POPF\" />\n      <xs:enumeration value=\"PPAM\" />\n      <xs:enumeration value=\"PRTR\" />\n      <xs:enumeration value=\"PSCH\" />\n      <xs:enumeration value=\"PSDE\" />\n      <xs:enumeration value=\"PTEF\" />\n      <xs:enumeration value=\"PTHF\" />\n      <xs:enumeration value=\"PTOC\" />\n      <xs:enumeration value=\"PTOF\" />\n      <xs:enumeration value=\"PTOV\" />\n      <xs:enumeration value=\"PTRC\" />\n      <xs:enumeration value=\"PTTR\" />\n      <xs:enumeration value=\"PTUC\" />\n      <xs:enumeration value=\"PTUF\" />\n      <xs:enumeration value=\"PTUV\" />\n      <xs:enumeration value=\"PUPF\" />\n      <xs:enumeration value=\"PVOC\" />\n      <xs:enumeration value=\"PVPH\" />\n      <xs:enumeration value=\"PZSU\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupQEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"Q[A-Z]*\" />\n      <xs:enumeration value=\"QFVR\" />\n      <xs:enumeration value=\"QITR\" />\n      <xs:enumeration value=\"QIUB\" />\n      <xs:enumeration value=\"QVTR\" />\n      <xs:enumeration value=\"QVUB\" />\n      <xs:enumeration value=\"QVVR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupREnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"R[A-Z]*\" />\n      <xs:enumeration value=\"RADR\" />\n      <xs:enumeration value=\"RBDR\" />\n      <xs:enumeration value=\"RBRF\" />\n      <xs:enumeration value=\"RDIR\" />\n      <xs:enumeration value=\"RDRE\" />\n      <xs:enumeration value=\"RDRS\" />\n      <xs:enumeration value=\"RFLO\" />\n      <xs:enumeration value=\"RMXU\" />\n      <xs:enumeration value=\"RPSB\" />\n      <xs:enumeration value=\"RREC\" />\n      <xs:enumeration value=\"RSYN\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupSEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"S[A-Z]*\" />\n      <xs:enumeration value=\"SARC\" />\n      <xs:enumeration value=\"SCBR\" />\n      <xs:enumeration value=\"SIMG\" />\n      <xs:enumeration value=\"SIML\" />\n      <xs:enumeration value=\"SLTC\" />\n      <xs:enumeration value=\"SOPM\" />\n      <xs:enumeration value=\"SPDC\" />\n      <xs:enumeration value=\"SPTR\" />\n      <xs:enumeration value=\"SSWI\" />\n      <xs:enumeration value=\"STMP\" />\n      <xs:enumeration value=\"SVBR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupTEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"T[A-Z]*\" />\n      <xs:enumeration value=\"TANG\" />\n      <xs:enumeration value=\"TAXD\" />\n      <xs:enumeration value=\"TCTR\" />\n      <xs:enumeration value=\"TDST\" />\n      <xs:enumeration value=\"TFLW\" />\n      <xs:enumeration value=\"TFRQ\" />\n      <xs:enumeration value=\"TGSN\" />\n      <xs:enumeration value=\"THUM\" />\n      <xs:enumeration value=\"TLVL\" />\n      <xs:enumeration value=\"TMGF\" />\n      <xs:enumeration value=\"TMVM\" />\n      <xs:enumeration value=\"TPOS\" />\n      <xs:enumeration value=\"TPRS\" />\n      <xs:enumeration value=\"TRTN\" />\n      <xs:enumeration value=\"TSND\" />\n      <xs:enumeration value=\"TTMP\" />\n      <xs:enumeration value=\"TTNS\" />\n      <xs:enumeration value=\"TVBR\" />\n      <xs:enumeration value=\"TVTR\" />\n      <xs:enumeration value=\"TWPH\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupXEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"X[A-Z]*\" />\n      <xs:enumeration value=\"XCBR\" />\n      <xs:enumeration value=\"XSWI\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupYEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"Y[A-Z]*\" />\n      <xs:enumeration value=\"YEFN\" />\n      <xs:enumeration value=\"YLTC\" />\n      <xs:enumeration value=\"YPSH\" />\n      <xs:enumeration value=\"YPTR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNGroupZEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"Z[A-Z]*\" />\n      <xs:enumeration value=\"ZAXN\" />\n      <xs:enumeration value=\"ZBAT\" />\n      <xs:enumeration value=\"ZBSH\" />\n      <xs:enumeration value=\"ZCAB\" />\n      <xs:enumeration value=\"ZCAP\" />\n      <xs:enumeration value=\"ZCON\" />\n      <xs:enumeration value=\"ZGEN\" />\n      <xs:enumeration value=\"ZGIL\" />\n      <xs:enumeration value=\"ZLIN\" />\n      <xs:enumeration value=\"ZMOT\" />\n      <xs:enumeration value=\"ZREA\" />\n      <xs:enumeration value=\"ZRES\" />\n      <xs:enumeration value=\"ZRRC\" />\n      <xs:enumeration value=\"ZSAR\" />\n      <xs:enumeration value=\"ZSCR\" />\n      <xs:enumeration value=\"ZSMC\" />\n      <xs:enumeration value=\"ZTCF\" />\n      <xs:enumeration value=\"ZTCR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDomainLNEnum\">\n    <xs:union memberTypes=\"tDomainLNGroupAEnum tDomainLNGroupCEnum tDomainLNGroupFEnum tDomainLNGroupGEnum tDomainLNGroupIEnum tDomainLNGroupKEnum tDomainLNGroupMEnum tDomainLNGroupPEnum tDomainLNGroupQEnum tDomainLNGroupREnum tDomainLNGroupSEnum tDomainLNGroupTEnum tDomainLNGroupXEnum tDomainLNGroupYEnum tDomainLNGroupZEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedLNClassEnum\">\n    <xs:union memberTypes=\"tSystemLNGroupEnum tDomainLNEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionLNClassEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:length value=\"4\" />\n      <xs:pattern value=\"[A-Z]+\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLNClassEnum\">\n    <xs:union memberTypes=\"tPredefinedLNClassEnum tExtensionLNClassEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedCDCEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"SPS\" />\n      <xs:enumeration value=\"DPS\" />\n      <xs:enumeration value=\"INS\" />\n      <xs:enumeration value=\"ENS\" />\n      <xs:enumeration value=\"ACT\" />\n      <xs:enumeration value=\"ACD\" />\n      <xs:enumeration value=\"SEC\" />\n      <xs:enumeration value=\"BCR\" />\n      <xs:enumeration value=\"HST\" />\n      <xs:enumeration value=\"VSS\" />\n      <xs:enumeration value=\"MV\" />\n      <xs:enumeration value=\"CMV\" />\n      <xs:enumeration value=\"SAV\" />\n      <xs:enumeration value=\"WYE\" />\n      <xs:enumeration value=\"DEL\" />\n      <xs:enumeration value=\"SEQ\" />\n      <xs:enumeration value=\"HMV\" />\n      <xs:enumeration value=\"HWYE\" />\n      <xs:enumeration value=\"HDEL\" />\n      <xs:enumeration value=\"SPC\" />\n      <xs:enumeration value=\"DPC\" />\n      <xs:enumeration value=\"INC\" />\n      <xs:enumeration value=\"ENC\" />\n      <xs:enumeration value=\"BSC\" />\n      <xs:enumeration value=\"ISC\" />\n      <xs:enumeration value=\"APC\" />\n      <xs:enumeration value=\"BAC\" />\n      <xs:enumeration value=\"SPG\" />\n      <xs:enumeration value=\"ING\" />\n      <xs:enumeration value=\"ENG\" />\n      <xs:enumeration value=\"ORG\" />\n      <xs:enumeration value=\"TSG\" />\n      <xs:enumeration value=\"CUG\" />\n      <xs:enumeration value=\"VSG\" />\n      <xs:enumeration value=\"ASG\" />\n      <xs:enumeration value=\"CURVE\" />\n      <xs:enumeration value=\"CSG\" />\n      <xs:enumeration value=\"DPL\" />\n      <xs:enumeration value=\"LPL\" />\n      <xs:enumeration value=\"CSD\" />\n      <xs:enumeration value=\"CST\" />\n      <xs:enumeration value=\"BTS\" />\n      <xs:enumeration value=\"UTS\" />\n      <xs:enumeration value=\"LTS\" />\n      <xs:enumeration value=\"GTS\" />\n      <xs:enumeration value=\"MTS\" />\n      <xs:enumeration value=\"NTS\" />\n      <xs:enumeration value=\"STS\" />\n      <xs:enumeration value=\"CTS\" />\n      <xs:enumeration value=\"OTS\" />\n      <xs:enumeration value=\"VSD\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionCDCEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:minLength value=\"1\" />\n      <xs:maxLength value=\"5\" />\n      <xs:pattern value=\"[A-Za-z]+\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tCDCEnum\">\n    <xs:restriction base=\"tPredefinedCDCEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tFCEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"ST\" />\n      <xs:enumeration value=\"MX\" />\n      <xs:enumeration value=\"CO\" />\n      <xs:enumeration value=\"SP\" />\n      <xs:enumeration value=\"SG\" />\n      <xs:enumeration value=\"SE\" />\n      <xs:enumeration value=\"SV\" />\n      <xs:enumeration value=\"CF\" />\n      <xs:enumeration value=\"DC\" />\n      <xs:enumeration value=\"EX\" />\n      <xs:enumeration value=\"SR\" />\n      <xs:enumeration value=\"BL\" />\n      <xs:enumeration value=\"OR\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedBasicTypeEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"BOOLEAN\" />\n      <xs:enumeration value=\"INT8\" />\n      <xs:enumeration value=\"INT16\" />\n      <xs:enumeration value=\"INT24\" />\n      <xs:enumeration value=\"INT32\" />\n      <xs:enumeration value=\"INT64\" />\n      <xs:enumeration value=\"INT128\" />\n      <xs:enumeration value=\"INT8U\" />\n      <xs:enumeration value=\"INT16U\" />\n      <xs:enumeration value=\"INT24U\" />\n      <xs:enumeration value=\"INT32U\" />\n      <xs:enumeration value=\"FLOAT32\" />\n      <xs:enumeration value=\"FLOAT64\" />\n      <xs:enumeration value=\"Enum\" />\n      <xs:enumeration value=\"Dbpos\" />\n      <xs:enumeration value=\"Tcmd\" />\n      <xs:enumeration value=\"Quality\" />\n      <xs:enumeration value=\"Timestamp\" />\n      <xs:enumeration value=\"VisString32\" />\n      <xs:enumeration value=\"VisString64\" />\n      <xs:enumeration value=\"VisString65\" />\n      <xs:enumeration value=\"VisString129\" />\n      <xs:enumeration value=\"VisString255\" />\n      <xs:enumeration value=\"Octet64\" />\n      <xs:enumeration value=\"Unicode255\" />\n      <xs:enumeration value=\"Struct\" />\n      <xs:enumeration value=\"EntryTime\" />\n      <xs:enumeration value=\"Check\" />\n      <xs:enumeration value=\"ObjRef\" />\n      <xs:enumeration value=\"Currency\" />\n      <xs:enumeration value=\"PhyComAddr\" />\n      <xs:enumeration value=\"TrgOps\" />\n      <xs:enumeration value=\"OptFlds\" />\n      <xs:enumeration value=\"SvOptFlds\" />\n      <xs:enumeration value=\"EntryID\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tBasicTypeEnum\">\n    <xs:restriction base=\"tPredefinedBasicTypeEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tValKindEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"Spec\" />\n      <xs:enumeration value=\"Conf\" />\n      <xs:enumeration value=\"RO\" />\n      <xs:enumeration value=\"Set\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tGSEControlTypeEnum\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"GSSE\" />\n      <xs:enumeration value=\"GOOSE\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tUnitMultiplierEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:enumeration value=\"\" />\n      <xs:enumeration value=\"m\" />\n      <xs:enumeration value=\"k\" />\n      <xs:enumeration value=\"M\" />\n      <xs:enumeration value=\"mu\" />\n      <xs:enumeration value=\"y\" />\n      <xs:enumeration value=\"z\" />\n      <xs:enumeration value=\"a\" />\n      <xs:enumeration value=\"f\" />\n      <xs:enumeration value=\"p\" />\n      <xs:enumeration value=\"n\" />\n      <xs:enumeration value=\"c\" />\n      <xs:enumeration value=\"d\" />\n      <xs:enumeration value=\"da\" />\n      <xs:enumeration value=\"h\" />\n      <xs:enumeration value=\"G\" />\n      <xs:enumeration value=\"T\" />\n      <xs:enumeration value=\"P\" />\n      <xs:enumeration value=\"E\" />\n      <xs:enumeration value=\"Z\" />\n      <xs:enumeration value=\"Y\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tRightEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:enumeration value=\"full\" />\n      <xs:enumeration value=\"fix\" />\n      <xs:enumeration value=\"dataflow\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSDOCount\">\n    <xs:union memberTypes=\"xs:unsignedInt tRestrName1stL\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tDACount\">\n    <xs:union memberTypes=\"xs:unsignedInt tAttributeNameEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tSmpMod\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:enumeration value=\"SmpPerPeriod\" />\n      <xs:enumeration value=\"SmpPerSec\" />\n      <xs:enumeration value=\"SecPerSmp\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedPhysConnTypeEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:enumeration value=\"Connection\" />\n      <xs:enumeration value=\"RedConn\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tExtensionPhysConnTypeEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[A-Z][0-9A-Za-z\\\\-]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPhysConnTypeEnum\">\n    <xs:union memberTypes=\"tPredefinedPhysConnTypeEnum tExtensionPhysConnTypeEnum\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tServiceType\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:enumeration value=\"Poll\" />\n      <xs:enumeration value=\"Report\" />\n      <xs:enumeration value=\"GOOSE\" />\n      <xs:enumeration value=\"SMV\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPredefinedTypeOfSecurityEnum\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:enumeration value=\"None\" />\n      <xs:enumeration value=\"Signature\" />\n      <xs:enumeration value=\"SignatureAndEncryption\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_BaseSimpleTypes.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:simpleType name=\"tRef\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\".+/.+/.+/.+(/.+)*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAnyName\">\n    <xs:restriction base=\"xs:normalizedString\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tName\">\n    <xs:restriction base=\"tAnyName\">\n      <xs:minLength value=\"1\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAcsiName\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tRestrName1stU\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:pattern value=\"[A-Z][0-9A-Za-z]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tRestrName1stL\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:pattern value=\"[a-z][0-9A-Za-z]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tPAddr\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:minLength value=\"1\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSclVersion\">\n    <xs:restriction base=\"tName\">\n      <xs:pattern value=\"2[0-2][0-9]{2}\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSclRevision\">\n    <xs:restriction base=\"xs:Name\">\n      <xs:pattern value=\"[A-Z]\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSclRelease\">\n    <xs:restriction base=\"xs:unsignedByte\">\n      <xs:minExclusive value=\"0\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tEmpty\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:maxLength value=\"0\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tIEDName\">\n    <xs:restriction base=\"tAcsiName\">\n      <xs:maxLength value=\"64\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tOnlyRelativeIEDName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"@\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tIEDNameOrRelative\">\n    <xs:union memberTypes=\"tIEDName tOnlyRelativeIEDName\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tLDName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:maxLength value=\"64\" />\n      <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLDInst\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:maxLength value=\"64\" />\n      <xs:pattern value=\"[A-Za-z0-9][0-9A-Za-z_]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLDInstOrEmpty\">\n    <xs:union memberTypes=\"tLDInst tEmpty\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tPrefix\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:maxLength value=\"11\" />\n      <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\" />\n      <xs:pattern value=\"\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLNInst\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[0-9]{1,12}\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLNInstOrEmpty\">\n    <xs:union memberTypes=\"tLNInst tEmpty\" />\n  </xs:simpleType>\n  <xs:simpleType name=\"tDataName\">\n    <xs:restriction base=\"tRestrName1stU\">\n      <xs:maxLength value=\"12\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tDataSetName\">\n    <xs:restriction base=\"tAcsiName\">\n      <xs:maxLength value=\"32\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tCBName\">\n    <xs:restriction base=\"tAcsiName\">\n      <xs:maxLength value=\"32\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLogName\">\n    <xs:restriction base=\"tAcsiName\">\n      <xs:maxLength value=\"32\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAccessPointName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[A-Za-z0-9][0-9A-Za-z_]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tAssociationID\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:minLength value=\"1\" />\n      <xs:pattern value=\"[0-9A-Za-z]+\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tVisibleBasicLatin\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[ -~]*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tMessageID\">\n    <xs:restriction base=\"tVisibleBasicLatin\">\n      <xs:minLength value=\"1\" />\n      <xs:maxLength value=\"129\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tFullAttributeName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[a-zA-Z][a-zA-Z0-9]*(\\\\([0-9]+\\\\))?(\\\\.[a-zA-Z][a-zA-Z0-9]*(\\\\([0-9]+\\\\))?)*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tFullDOName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[A-Z][0-9A-Za-z]{0,11}(\\\\.[a-z][0-9A-Za-z]*(\\\\([0-9]+\\\\))?)?\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tSubDataName\">\n    <xs:restriction base=\"tRestrName1stL\">\n      <xs:minLength value=\"1\" />\n      <xs:maxLength value=\"60\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tNamespaceName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\"[ -~]+:20\\\\d\\\\d[A-Z]?\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tLineType\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:minLength value=\"1\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tProcessType\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:minLength value=\"1\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <xs:simpleType name=\"tProcessName\">\n    <xs:restriction base=\"xs:normalizedString\">\n      <xs:pattern value=\".+(/.+)*\" />\n    </xs:restriction>\n  </xs:simpleType>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_IED.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:attributeGroup name=\"agAuthentication\">\n    <xs:attribute name=\"none\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"password\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"weak\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"strong\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"certificate\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:attributeGroup name=\"agSmvOpts\">\n    <xs:attribute name=\"refreshTime\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"sampleSynchronized\" fixed=\"true\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"sampleRate\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"dataSet\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"security\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"timestamp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:attributeGroup name=\"agOptFields\">\n    <xs:attribute name=\"seqNum\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"timeStamp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"dataSet\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"reasonCode\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"dataRef\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"entryID\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"configRef\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"bufOvfl\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:attributeGroup name=\"agLDRef\">\n    <xs:attributeGroup ref=\"agDesc\" />\n    <xs:attribute name=\"iedName\" type=\"tIEDName\" use=\"required\" />\n    <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"required\" />\n  </xs:attributeGroup>\n  <xs:attributeGroup name=\"agLNRef\">\n    <xs:attributeGroup ref=\"agLDRef\" />\n    <xs:attribute name=\"prefix\" default=\"\" type=\"tPrefix\" use=\"optional\" />\n    <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\" />\n    <xs:attribute name=\"lnInst\" type=\"tLNInstOrEmpty\" use=\"required\" />\n  </xs:attributeGroup>\n  <xs:complexType name=\"tIED\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Services\" type=\"tServices\" minOccurs=\"0\" />\n          <xs:element name=\"AccessPoint\" type=\"tAccessPoint\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNInAccessPoint\">\n              <xs:selector xpath=\"./scl:LN\" />\n              <xs:field xpath=\"@inst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"KDC\" type=\"tKDC\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"name\" type=\"tIEDName\" use=\"required\" />\n        <xs:attribute name=\"type\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"manufacturer\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"configVersion\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"originalSclVersion\" type=\"tSclVersion\" use=\"optional\" />\n        <xs:attribute name=\"originalSclRevision\" type=\"tSclRevision\" use=\"optional\" />\n        <xs:attribute name=\"originalSclRelease\" type=\"tSclRelease\" use=\"optional\" />\n        <xs:attribute name=\"engRight\" default=\"full\" type=\"tRightEnum\" use=\"optional\" />\n        <xs:attribute name=\"owner\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServices\">\n    <xs:all>\n      <xs:element name=\"DynAssociation\" type=\"tServiceWithOptionalMax\" minOccurs=\"0\" />\n      <xs:element name=\"SettingGroups\" type=\"tSettingGroups\" minOccurs=\"0\" />\n      <xs:element name=\"GetDirectory\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"GetDataObjectDefinition\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"DataObjectDirectory\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"GetDataSetValue\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"SetDataSetValue\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"DataSetDirectory\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"ConfDataSet\" type=\"tServiceForConfDataSet\" minOccurs=\"0\" />\n      <xs:element name=\"DynDataSet\" type=\"tServiceWithMaxAndMaxAttributes\" minOccurs=\"0\" />\n      <xs:element name=\"ReadWrite\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"TimerActivatedControl\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"ConfReportControl\" type=\"tServiceConfReportControl\" minOccurs=\"0\" />\n      <xs:element name=\"GetCBValues\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"ConfLogControl\" type=\"tServiceWithMaxNonZero\" minOccurs=\"0\" />\n      <xs:element name=\"ReportSettings\" type=\"tReportSettings\" minOccurs=\"0\" />\n      <xs:element name=\"LogSettings\" type=\"tLogSettings\" minOccurs=\"0\" />\n      <xs:element name=\"GSESettings\" type=\"tGSESettings\" minOccurs=\"0\" />\n      <xs:element name=\"SMVSettings\" type=\"tSMVSettings\" minOccurs=\"0\" />\n      <xs:element name=\"GSEDir\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"GOOSE\" type=\"tGOOSEcapabilities\" minOccurs=\"0\" />\n      <xs:element name=\"GSSE\" type=\"tServiceWithMax\" minOccurs=\"0\" />\n      <xs:element name=\"SMVsc\" type=\"tSMVsc\" minOccurs=\"0\" />\n      <xs:element name=\"FileHandling\" type=\"tFileHandling\" minOccurs=\"0\" />\n      <xs:element name=\"ConfLNs\" type=\"tConfLNs\" minOccurs=\"0\" />\n      <xs:element name=\"ClientServices\" type=\"tClientServices\" minOccurs=\"0\" />\n      <xs:element name=\"ConfLdName\" type=\"tServiceYesNo\" minOccurs=\"0\" />\n      <xs:element name=\"SupSubscription\" type=\"tSupSubscription\" minOccurs=\"0\" />\n      <xs:element name=\"ConfSigRef\" type=\"tServiceWithMaxNonZero\" minOccurs=\"0\" />\n      <xs:element name=\"ValueHandling\" type=\"tValueHandling\" minOccurs=\"0\" />\n      <xs:element name=\"RedProt\" type=\"tRedProt\" minOccurs=\"0\" />\n      <xs:element name=\"TimeSyncProt\" type=\"tTimeSyncProt\" minOccurs=\"0\" />\n      <xs:element name=\"CommProt\" type=\"tCommProt\" minOccurs=\"0\" />\n    </xs:all>\n    <xs:attribute name=\"nameLength\" default=\"32\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:token\">\n          <xs:pattern value=\"32\" />\n          <xs:pattern value=\"64\" />\n          <xs:pattern value=\"6[5-9]\" />\n          <xs:pattern value=\"[7-9]\\\\d\" />\n          <xs:pattern value=\"[1-9]\\\\d\\\\d+\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n  <xs:complexType name=\"tAccessPoint\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:choice minOccurs=\"0\">\n            <xs:element name=\"Server\" type=\"tServer\">\n              <xs:unique name=\"uniqueAssociationInServer\">\n                <xs:selector xpath=\"./scl:Association\" />\n                <xs:field xpath=\"@associationID\" />\n              </xs:unique>\n            </xs:element>\n            <xs:element ref=\"LN\" maxOccurs=\"unbounded\" />\n            <xs:element name=\"ServerAt\" type=\"tServerAt\" />\n          </xs:choice>\n          <xs:element name=\"Services\" type=\"tServices\" minOccurs=\"0\" />\n          <xs:element name=\"GOOSESecurity\" type=\"tCertificate\" minOccurs=\"0\" maxOccurs=\"7\" />\n          <xs:element name=\"SMVSecurity\" type=\"tCertificate\" minOccurs=\"0\" maxOccurs=\"7\" />\n        </xs:sequence>\n        <xs:attribute name=\"name\" type=\"tAccessPointName\" use=\"required\" />\n        <xs:attribute name=\"router\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"clock\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"kdc\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tCertificate\">\n    <xs:complexContent>\n      <xs:extension base=\"tNaming\">\n        <xs:sequence>\n          <xs:element name=\"Subject\" type=\"tCert\" />\n          <xs:element name=\"IssuerName\" type=\"tCert\" />\n        </xs:sequence>\n        <xs:attribute name=\"xferNumber\" type=\"xs:unsignedInt\" use=\"optional\" />\n        <xs:attribute name=\"serialNumber\" use=\"required\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\" />\n              <xs:pattern value=\"[0-9]+\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tCert\">\n    <xs:attribute name=\"commonName\" use=\"required\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:normalizedString\">\n          <xs:minLength value=\"4\" />\n          <xs:pattern value=\"none\" />\n          <xs:pattern value=\"CN=.+\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name=\"idHierarchy\" use=\"required\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:normalizedString\">\n          <xs:minLength value=\"1\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n  <xs:complexType name=\"tServerAt\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"apName\" type=\"tAccessPointName\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServer\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Authentication\">\n            <xs:complexType>\n              <xs:attributeGroup ref=\"agAuthentication\" />\n            </xs:complexType>\n          </xs:element>\n          <xs:element name=\"LDevice\" type=\"tLDevice\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueLNInLDevice\">\n              <xs:selector xpath=\"./scl:LN\" />\n              <xs:field xpath=\"@inst\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@prefix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Association\" type=\"tAssociation\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"timeout\" default=\"30\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLDevice\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element ref=\"LN0\" />\n          <xs:element ref=\"LN\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"AccessControl\" type=\"tAccessControl\" minOccurs=\"0\" />\n        </xs:sequence>\n        <xs:attribute name=\"inst\" type=\"tLDInst\" use=\"required\" />\n        <xs:attribute name=\"ldName\" type=\"tLDName\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType mixed=\"true\" name=\"tAccessControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyContentFromOtherNamespace\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tAssociation\">\n    <xs:attributeGroup ref=\"agLNRef\" />\n    <xs:attribute name=\"kind\" type=\"tAssociationKindEnum\" use=\"required\" />\n    <xs:attribute name=\"associationID\" type=\"tAssociationID\" use=\"optional\" />\n  </xs:complexType>\n  <xs:element name=\"LN0\">\n    <xs:complexType>\n      <xs:complexContent>\n        <xs:extension base=\"tLN0\" />\n      </xs:complexContent>\n    </xs:complexType>\n    <xs:unique name=\"uniqueReportControlInLN0\">\n      <xs:selector xpath=\"./scl:ReportControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLogControlInLN0\">\n      <xs:selector xpath=\"./scl:LogControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueGSEControlInLN0\">\n      <xs:selector xpath=\"./scl:GSEControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueSampledValueControlInLN0\">\n      <xs:selector xpath=\"./scl:SampledValueControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:key name=\"DataSetKeyLN0\">\n      <xs:selector xpath=\"./scl:DataSet\" />\n      <xs:field xpath=\"@name\" />\n    </xs:key>\n    <xs:keyref name=\"ref2DataSetReportLN0\" refer=\"DataSetKeyLN0\">\n      <xs:selector xpath=\"./scl:ReportControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2DataSetLogLN0\" refer=\"DataSetKeyLN0\">\n      <xs:selector xpath=\"./scl:LogControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2DataSetGSELN0\" refer=\"DataSetKeyLN0\">\n      <xs:selector xpath=\"./scl:GSEControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2DataSetSVLN0\" refer=\"DataSetKeyLN0\">\n      <xs:selector xpath=\"./scl:SampledValueControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:unique name=\"uniqueDOIinLN0\">\n      <xs:selector xpath=\"./scl:DOI\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLogInLN0\">\n      <xs:selector xpath=\"./scl:Log\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n  </xs:element>\n  <xs:element name=\"LN\" type=\"tLN\">\n    <xs:unique name=\"uniqueReportControlInLN\">\n      <xs:selector xpath=\"./scl:ReportControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLogControlInLN\">\n      <xs:selector xpath=\"./scl:LogControl\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:key name=\"DataSetKeyInLN\">\n      <xs:selector xpath=\"./scl:DataSet\" />\n      <xs:field xpath=\"@name\" />\n    </xs:key>\n    <xs:keyref name=\"ref2DataSetReport\" refer=\"DataSetKeyInLN\">\n      <xs:selector xpath=\"./scl:ReportControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2DataSetLog\" refer=\"DataSetKeyInLN\">\n      <xs:selector xpath=\"./scl:LogControl\" />\n      <xs:field xpath=\"@datSet\" />\n    </xs:keyref>\n    <xs:unique name=\"uniqueDOIinLN\">\n      <xs:selector xpath=\"./scl:DOI\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n    <xs:unique name=\"uniqueLogInLN\">\n      <xs:selector xpath=\"./scl:Log\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n  </xs:element>\n  <xs:complexType abstract=\"true\" name=\"tAnyLN\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"DataSet\" type=\"tDataSet\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"ReportControl\" type=\"tReportControl\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"LogControl\" type=\"tLogControl\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"DOI\" type=\"tDOI\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueSDI_DAIinDOI\">\n              <xs:selector xpath=\"./scl:DAI|./scl:SDI\" />\n              <xs:field xpath=\"@name\" />\n              <xs:field xpath=\"@ix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Inputs\" type=\"tInputs\" minOccurs=\"0\">\n            <xs:unique name=\"uniqueExtRefInInputs\">\n              <xs:selector xpath=\"./scl:ExtRef\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@ldInst\" />\n              <xs:field xpath=\"@prefix\" />\n              <xs:field xpath=\"@lnClass\" />\n              <xs:field xpath=\"@lnInst\" />\n              <xs:field xpath=\"@doName\" />\n              <xs:field xpath=\"@daName\" />\n              <xs:field xpath=\"@intAddr\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"Log\" type=\"tLog\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"lnType\" type=\"tName\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLN\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyLN\">\n        <xs:attribute name=\"prefix\" default=\"\" type=\"tPrefix\" use=\"optional\" />\n        <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\" />\n        <xs:attribute name=\"inst\" type=\"tLNInst\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLN0\">\n    <xs:complexContent>\n      <xs:extension base=\"tAnyLN\">\n        <xs:sequence>\n          <xs:element name=\"GSEControl\" type=\"tGSEControl\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"SampledValueControl\" type=\"tSampledValueControl\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"SettingControl\" type=\"tSettingControl\" minOccurs=\"0\" />\n        </xs:sequence>\n        <xs:attribute name=\"lnClass\" fixed=\"LLN0\" type=\"tLNClassEnum\" use=\"required\" />\n        <xs:attribute name=\"inst\" fixed=\"\" type=\"xs:normalizedString\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDataSet\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:choice maxOccurs=\"unbounded\">\n          <xs:element name=\"FCDA\" type=\"tFCDA\" />\n        </xs:choice>\n        <xs:attribute name=\"name\" type=\"tDataSetName\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tFCDA\">\n    <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"optional\" />\n    <xs:attribute name=\"prefix\" default=\"\" type=\"tPrefix\" use=\"optional\" />\n    <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\" />\n    <xs:attribute name=\"lnInst\" type=\"tLNInst\" use=\"optional\" />\n    <xs:attribute name=\"doName\" type=\"tFullDOName\" use=\"optional\" />\n    <xs:attribute name=\"daName\" type=\"tFullAttributeName\" use=\"optional\" />\n    <xs:attribute name=\"fc\" type=\"tFCEnum\" use=\"required\" />\n    <xs:attribute name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"name\" type=\"tCBName\" use=\"required\" />\n        <xs:attribute name=\"datSet\" type=\"tDataSetName\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tControlWithTriggerOpt\">\n    <xs:complexContent>\n      <xs:extension base=\"tControl\">\n        <xs:sequence>\n          <xs:element name=\"TrgOps\" type=\"tTrgOps\" minOccurs=\"0\" />\n        </xs:sequence>\n        <xs:attribute name=\"intgPd\" default=\"0\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tTrgOps\">\n    <xs:attribute name=\"dchg\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"qchg\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"dupd\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"period\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"gi\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tReportControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlWithTriggerOpt\">\n        <xs:sequence>\n          <xs:element name=\"OptFields\">\n            <xs:complexType>\n              <xs:attributeGroup ref=\"agOptFields\" />\n            </xs:complexType>\n          </xs:element>\n          <xs:element name=\"RptEnabled\" type=\"tRptEnabled\" minOccurs=\"0\" />\n        </xs:sequence>\n        <xs:attribute name=\"rptID\" type=\"tMessageID\" use=\"optional\" />\n        <xs:attribute name=\"confRev\" type=\"xs:unsignedInt\" use=\"required\" />\n        <xs:attribute name=\"buffered\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"bufTime\" default=\"0\" type=\"xs:unsignedInt\" use=\"optional\" />\n        <xs:attribute name=\"indexed\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tRptEnabled\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"ClientLN\" type=\"tClientLN\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"max\" default=\"1\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tClientLN\">\n    <xs:attributeGroup ref=\"agLNRef\" />\n    <xs:attribute name=\"apRef\" type=\"tAccessPointName\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tLogControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlWithTriggerOpt\">\n        <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"optional\" />\n        <xs:attribute name=\"prefix\" default=\"\" type=\"tPrefix\" use=\"optional\" />\n        <xs:attribute name=\"lnClass\" default=\"LLN0\" type=\"tLNClassEnum\" use=\"optional\" />\n        <xs:attribute name=\"lnInst\" type=\"tLNInst\" use=\"optional\" />\n        <xs:attribute name=\"logName\" type=\"tLogName\" use=\"required\" />\n        <xs:attribute name=\"logEna\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"reasonCode\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"bufTime\" default=\"0\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tInputs\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"ExtRef\" type=\"tExtRef\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tExtRef\">\n    <xs:attributeGroup ref=\"agDesc\" />\n    <xs:attribute name=\"iedName\" type=\"tIEDNameOrRelative\" use=\"optional\" />\n    <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"optional\" />\n    <xs:attribute name=\"prefix\" type=\"tPrefix\" use=\"optional\" />\n    <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\" />\n    <xs:attribute name=\"lnInst\" type=\"tLNInst\" use=\"optional\" />\n    <xs:attribute name=\"doName\" type=\"tFullDOName\" use=\"optional\" />\n    <xs:attribute name=\"daName\" type=\"tFullAttributeName\" use=\"optional\" />\n    <xs:attribute name=\"intAddr\" type=\"xs:normalizedString\" use=\"optional\" />\n    <xs:attribute name=\"serviceType\" type=\"tServiceType\" use=\"optional\" />\n    <xs:attribute name=\"srcLDInst\" type=\"tLDInst\" use=\"optional\" />\n    <xs:attribute name=\"srcPrefix\" type=\"tPrefix\" use=\"optional\" />\n    <xs:attribute name=\"srcLNClass\" type=\"tLNClassEnum\" use=\"optional\" />\n    <xs:attribute name=\"srcLNInst\" type=\"tLNInst\" use=\"optional\" />\n    <xs:attribute name=\"srcCBName\" type=\"tCBName\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tLog\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"name\" type=\"tLogName\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tControlWithIEDName\">\n    <xs:complexContent>\n      <xs:extension base=\"tControl\">\n        <xs:sequence>\n          <xs:element name=\"IEDName\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:complexType>\n              <xs:simpleContent>\n                <xs:extension base=\"tIEDName\">\n                  <xs:attribute name=\"apRef\" type=\"tAccessPointName\" use=\"optional\" />\n                  <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"optional\" />\n                  <xs:attribute name=\"prefix\" type=\"tPrefix\" use=\"optional\" />\n                  <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\" />\n                  <xs:attribute name=\"lnInst\" type=\"tLNInst\" use=\"optional\" />\n                </xs:extension>\n              </xs:simpleContent>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"confRev\" type=\"xs:unsignedInt\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tProtocol\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:normalizedString\">\n        <xs:attribute name=\"mustUnderstand\" fixed=\"true\" type=\"xs:boolean\" use=\"required\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tGSEControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlWithIEDName\">\n        <xs:sequence>\n          <xs:element name=\"Protocol\" type=\"tProtocol\" minOccurs=\"0\" fixed=\"R-GOOSE\" />\n        </xs:sequence>\n        <xs:attribute name=\"type\" default=\"GOOSE\" type=\"tGSEControlTypeEnum\" use=\"optional\" />\n        <xs:attribute name=\"appID\" type=\"tMessageID\" use=\"required\" />\n        <xs:attribute name=\"fixedOffs\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"securityEnable\" default=\"None\" type=\"tPredefinedTypeOfSecurityEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSampledValueControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlWithIEDName\">\n        <xs:sequence>\n          <xs:element name=\"SmvOpts\">\n            <xs:complexType>\n              <xs:attributeGroup ref=\"agSmvOpts\" />\n            </xs:complexType>\n          </xs:element>\n          <xs:element name=\"Protocol\" type=\"tProtocol\" minOccurs=\"0\" fixed=\"R-SV\" />\n        </xs:sequence>\n        <xs:attribute name=\"smvID\" type=\"tMessageID\" use=\"required\" />\n        <xs:attribute name=\"multicast\" default=\"true\" type=\"xs:boolean\" />\n        <xs:attribute name=\"smpRate\" type=\"xs:unsignedInt\" use=\"required\" />\n        <xs:attribute name=\"nofASDU\" type=\"xs:unsignedInt\" use=\"required\" />\n        <xs:attribute name=\"smpMod\" default=\"SmpPerPeriod\" type=\"tSmpMod\" use=\"optional\" />\n        <xs:attribute name=\"securityEnable\" default=\"None\" type=\"tPredefinedTypeOfSecurityEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSettingControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"numOfSGs\" use=\"required\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:unsignedInt\">\n              <xs:minInclusive value=\"1\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n        <xs:attribute name=\"actSG\" default=\"1\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:unsignedInt\">\n              <xs:minInclusive value=\"1\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n        <xs:attribute name=\"resvTms\" type=\"xs:unsignedShort\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDOI\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n          <xs:element name=\"SDI\" type=\"tSDI\">\n            <xs:unique name=\"uniqueSDI_DAIinSDI\">\n              <xs:selector xpath=\"./scl:DAI|./scl:SDI\" />\n              <xs:field xpath=\"@name\" />\n              <xs:field xpath=\"@ix\" />\n            </xs:unique>\n          </xs:element>\n          <xs:element name=\"DAI\" type=\"tDAI\" />\n        </xs:choice>\n        <xs:attribute name=\"name\" type=\"tDataName\" use=\"required\" />\n        <xs:attribute name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\" />\n        <xs:attribute name=\"accessControl\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSDI\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n          <xs:element name=\"SDI\" type=\"tSDI\" />\n          <xs:element name=\"DAI\" type=\"tDAI\" />\n        </xs:choice>\n        <xs:attribute name=\"name\" type=\"tAttributeNameEnum\" use=\"required\" />\n        <xs:attribute name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\" />\n        <xs:attribute name=\"sAddr\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDAI\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Val\" type=\"tVal\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"name\" type=\"tAttributeNameEnum\" use=\"required\" />\n        <xs:attribute name=\"sAddr\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"valKind\" type=\"tValKindEnum\" use=\"optional\" />\n        <xs:attribute name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\" />\n        <xs:attribute name=\"valImport\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServiceYesNo\" />\n  <xs:complexType name=\"tServiceWithOptionalMax\">\n    <xs:attribute name=\"max\" type=\"xs:unsignedInt\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tServiceWithMax\">\n    <xs:attribute name=\"max\" type=\"xs:unsignedInt\" use=\"required\" />\n  </xs:complexType>\n  <xs:complexType name=\"tServiceWithMaxNonZero\">\n    <xs:attribute name=\"max\" use=\"required\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:unsignedInt\">\n          <xs:minExclusive value=\"0\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n  <xs:complexType name=\"tServiceConfReportControl\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMax\">\n        <xs:attribute name=\"bufMode\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"unbuffered\" />\n              <xs:enumeration value=\"buffered\" />\n              <xs:enumeration value=\"both\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n        <xs:attribute name=\"bufConf\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServiceWithMaxAndMaxAttributes\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMax\">\n        <xs:attribute name=\"maxAttributes\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:unsignedInt\">\n              <xs:minExclusive value=\"0\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServiceWithMaxAndModify\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMax\">\n        <xs:attribute name=\"modify\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tServiceForConfDataSet\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMaxAndMaxAttributes\">\n        <xs:attribute name=\"modify\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tClientServices\">\n    <xs:sequence>\n      <xs:element name=\"TimeSyncProt\" type=\"tTimeSyncProt\" minOccurs=\"0\" />\n    </xs:sequence>\n    <xs:attribute name=\"goose\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"gsse\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"bufReport\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"unbufReport\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"readLog\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"sv\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"supportsLdName\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"maxAttributes\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:unsignedInt\" />\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name=\"maxReports\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:unsignedInt\" />\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name=\"maxGOOSE\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:unsignedInt\" />\n      </xs:simpleType>\n    </xs:attribute>\n    <xs:attribute name=\"maxSMV\" use=\"optional\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:unsignedInt\" />\n      </xs:simpleType>\n    </xs:attribute>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tServiceSettings\">\n    <xs:attribute name=\"cbName\" default=\"Fix\" type=\"tServiceSettingsNoDynEnum\" use=\"optional\" />\n    <xs:attribute name=\"datSet\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tReportSettings\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceSettings\">\n        <xs:attribute name=\"rptID\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"optFields\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"bufTime\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"trgOps\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"intgPd\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"resvTms\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"owner\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLogSettings\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceSettings\">\n        <xs:attribute name=\"logEna\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"trgOps\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"intgPd\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tGSESettings\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceSettings\">\n        <xs:attribute name=\"appID\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"dataLabel\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSMVSettings\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceSettings\">\n        <xs:choice maxOccurs=\"unbounded\">\n          <xs:element name=\"SmpRate\">\n            <xs:simpleType>\n              <xs:restriction base=\"xs:unsignedInt\">\n                <xs:minExclusive value=\"0\" />\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"SamplesPerSec\">\n            <xs:simpleType>\n              <xs:restriction base=\"xs:unsignedInt\">\n                <xs:minExclusive value=\"0\" />\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"SecPerSamples\">\n            <xs:simpleType>\n              <xs:restriction base=\"xs:unsignedInt\">\n                <xs:minExclusive value=\"0\" />\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n        </xs:choice>\n        <xs:attribute name=\"svID\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"optFields\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"smpRate\" default=\"Fix\" type=\"tServiceSettingsEnum\" use=\"optional\" />\n        <xs:attribute name=\"samplesPerSec\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"pdcTimeStamp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tConfLNs\">\n    <xs:attribute name=\"fixPrefix\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"fixLnInst\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tValueHandling\">\n    <xs:attribute name=\"setToRO\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tFileHandling\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceYesNo\">\n        <xs:attribute name=\"mms\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"ftp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"ftps\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tGOOSEcapabilities\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMax\">\n        <xs:attribute name=\"fixedOffs\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tRedProt\">\n    <xs:attribute name=\"hsr\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"prp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"rstp\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:complexType>\n  <xs:complexType name=\"tTimeSyncProt\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceYesNo\">\n        <xs:attribute name=\"sntp\" default=\"true\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"c37_238\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n        <xs:attribute name=\"other\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSMVsc\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceWithMax\">\n        <xs:attribute name=\"delivery\" default=\"multicast\" type=\"tSMVDeliveryEnum\" use=\"optional\" />\n        <xs:attribute name=\"deliveryConf\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSupSubscription\">\n    <xs:attribute name=\"maxGo\" type=\"xs:unsignedInt\" use=\"required\" />\n    <xs:attribute name=\"maxSv\" type=\"xs:unsignedInt\" use=\"required\" />\n  </xs:complexType>\n  <xs:complexType name=\"tCommProt\">\n    <xs:complexContent>\n      <xs:extension base=\"tServiceYesNo\">\n        <xs:attribute name=\"ipv6\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tKDC\">\n    <xs:attribute name=\"iedName\" type=\"tIEDName\" use=\"required\" />\n    <xs:attribute name=\"apName\" type=\"tAccessPointName\" use=\"required\" />\n  </xs:complexType>\n  <xs:complexType name=\"tSettingGroups\">\n    <xs:all>\n      <xs:element name=\"SGEdit\" minOccurs=\"0\">\n        <xs:complexType>\n          <xs:complexContent>\n            <xs:extension base=\"tServiceYesNo\">\n              <xs:attribute name=\"resvTms\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n            </xs:extension>\n          </xs:complexContent>\n        </xs:complexType>\n      </xs:element>\n      <xs:element name=\"ConfSG\" minOccurs=\"0\">\n        <xs:complexType>\n          <xs:complexContent>\n            <xs:extension base=\"tServiceYesNo\">\n              <xs:attribute name=\"resvTms\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n            </xs:extension>\n          </xs:complexContent>\n        </xs:complexType>\n      </xs:element>\n    </xs:all>\n  </xs:complexType>\n  <xs:element name=\"IED\" type=\"tIED\">\n    <xs:key name=\"LDeviceInIEDKey\">\n      <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice\" />\n      <xs:field xpath=\"@inst\" />\n    </xs:key>\n    <xs:keyref name=\"ref2LDeviceInDataSetForFCDAinLN\" refer=\"LDeviceInIEDKey\">\n      <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice/scl:LN/scl:DataSet/scl:FCDA\" />\n      <xs:field xpath=\"@ldInst\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2LDeviceInDataSetForFCDAinLN0\" refer=\"LDeviceInIEDKey\">\n      <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0/scl:DataSet/scl:FCDA\" />\n      <xs:field xpath=\"@ldInst\" />\n    </xs:keyref>\n    <xs:key name=\"AccessPointInIEDKey\">\n      <xs:selector xpath=\"./scl:AccessPoint\" />\n      <xs:field xpath=\"@name\" />\n    </xs:key>\n    <xs:keyref name=\"ServerAtRef2AccessPoint\" refer=\"AccessPointInIEDKey\">\n      <xs:selector xpath=\"./scl:AccessPoint/scl:ServerAt\" />\n      <xs:field xpath=\"@apName\" />\n    </xs:keyref>\n  </xs:element>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_Communication.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:complexType abstract=\"true\" name=\"tControlBlock\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Address\" type=\"tAddress\" minOccurs=\"0\" />\n        </xs:sequence>\n        <xs:attribute name=\"ldInst\" type=\"tLDInst\" use=\"required\" />\n        <xs:attribute name=\"cbName\" type=\"tCBName\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tCommunication\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"SubNetwork\" type=\"tSubNetwork\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueConnectedAP\">\n              <xs:selector xpath=\"./scl:ConnectedAP\" />\n              <xs:field xpath=\"@iedName\" />\n              <xs:field xpath=\"@apName\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSubNetwork\">\n    <xs:complexContent>\n      <xs:extension base=\"tNaming\">\n        <xs:sequence>\n          <xs:element name=\"BitRate\" type=\"tBitRateInMbPerSec\" minOccurs=\"0\" />\n          <xs:element name=\"ConnectedAP\" type=\"tConnectedAP\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniqueGSEinConnectedAP\">\n              <xs:selector xpath=\"./scl:GSE\" />\n              <xs:field xpath=\"@cbName\" />\n              <xs:field xpath=\"@ldInst\" />\n            </xs:unique>\n            <xs:unique name=\"uniqueSMVinConnectedAP\">\n              <xs:selector xpath=\"./scl:SMV\" />\n              <xs:field xpath=\"@cbName\" />\n              <xs:field xpath=\"@ldInst\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"xs:normalizedString\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tConnectedAP\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Address\" type=\"tAddress\" minOccurs=\"0\" />\n          <xs:element name=\"GSE\" type=\"tGSE\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"SMV\" type=\"tSMV\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"PhysConn\" type=\"tPhysConn\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <xs:unique name=\"uniquePTypeInPhysConn\">\n              <xs:selector xpath=\"./scl:P\" />\n              <xs:field xpath=\"@type\" />\n            </xs:unique>\n          </xs:element>\n        </xs:sequence>\n        <xs:attribute name=\"iedName\" type=\"tIEDName\" use=\"required\" />\n        <xs:attribute name=\"apName\" type=\"tAccessPointName\" use=\"required\" />\n        <xs:attribute name=\"redProt\" type=\"tRedProtEnum\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tAddress\">\n    <xs:sequence>\n      <xs:element name=\"P\" type=\"tP\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n  </xs:complexType>\n  <xs:complexType name=\"tGSE\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlBlock\">\n        <xs:sequence>\n          <xs:element name=\"MinTime\" type=\"tDurationInMilliSec\" minOccurs=\"0\" />\n          <xs:element name=\"MaxTime\" type=\"tDurationInMilliSec\" minOccurs=\"0\" />\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSMV\">\n    <xs:complexContent>\n      <xs:extension base=\"tControlBlock\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tPhysConn\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"P\" type=\"tP_PhysConn\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"type\" type=\"tPhysConnTypeEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_PhysConn\">\n    <xs:simpleContent>\n      <xs:extension base=\"tPAddr\">\n        <xs:attribute name=\"type\" type=\"tPTypePhysConnEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP\">\n    <xs:simpleContent>\n      <xs:extension base=\"tPAddr\">\n        <xs:attribute name=\"type\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tP_IPbase\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern id=\"IPv4\" value=\"([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IP\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_IPbase\">\n        <xs:attribute name=\"type\" fixed=\"IP\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IP-SUBNET\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_IPbase\">\n        <xs:attribute name=\"type\" fixed=\"IP-SUBNET\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IP-GATEWAY\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_IPbase\">\n        <xs:attribute name=\"type\" fixed=\"IP-GATEWAY\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tP_IPv6base\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern id=\"IPv6\" value=\"([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IPv6\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_IPv6base\">\n        <xs:attribute name=\"type\" fixed=\"IPv6\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IPv6-SUBNET\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern id=\"IPv6_Subnet\" value=\"/[1-9]|/[1-9][0-9]|/1[0-1][0-9]|/12[0-7]\" />\n        <xs:attribute name=\"type\" fixed=\"IPv6-SUBNET\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IPv6-GATEWAY\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_IPv6base\">\n        <xs:attribute name=\"type\" fixed=\"IPv6-GATEWAY\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_DNSName\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"\\\\S*\" />\n        <xs:attribute name=\"type\" fixed=\"DNSName\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IPv6FlowLabel\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-9a-fA-F]{1,5}\" />\n        <xs:attribute name=\"type\" fixed=\"IPv6FlowLabel\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-NSAP\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"40\" />\n        <xs:pattern value=\"[0-9A-F]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-NSAP\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-TSEL\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"8\" />\n        <xs:pattern value=\"[0-9A-F]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-TSEL\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-SSEL\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"16\" />\n        <xs:pattern value=\"[0-9A-F]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-SSEL\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-PSEL\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"16\" />\n        <xs:pattern value=\"[0-9A-F]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-PSEL\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-AP-Title\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-9,]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-AP-Title\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-AP-Invoke\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"5\" />\n        <xs:pattern value=\"[0-9]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-AP-Invoke\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-AE-Qualifier\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"5\" />\n        <xs:pattern value=\"[0-9]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-AE-Qualifier\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_OSI-AE-Invoke\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:maxLength value=\"5\" />\n        <xs:pattern value=\"[0-9]+\" />\n        <xs:attribute name=\"type\" fixed=\"OSI-AE-Invoke\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_MAC-Address\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\" />\n        <xs:attribute name=\"type\" fixed=\"MAC-Address\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_APPID\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-9A-F]{4}\" />\n        <xs:attribute name=\"type\" fixed=\"APPID\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_VLAN-PRIORITY\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-7]\" />\n        <xs:attribute name=\"type\" fixed=\"VLAN-PRIORITY\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_VLAN-ID\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"[0-9A-F]{3}\" />\n        <xs:attribute name=\"type\" fixed=\"VLAN-ID\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType abstract=\"true\" name=\"tP_Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern value=\"0\" />\n        <xs:pattern value=\"[1-9][0-9]{0,3}\" />\n        <xs:pattern value=\"[1-5][0-9]{4,4}\" />\n        <xs:pattern value=\"6[0-4][0-9]{3,3}\" />\n        <xs:pattern value=\"65[0-4][0-9]{2,2}\" />\n        <xs:pattern value=\"655[0-2][0-9]\" />\n        <xs:pattern value=\"6553[0-5]\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_SNTP-Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_Port\">\n        <xs:attribute name=\"type\" fixed=\"SNTP-Port\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_MMS-Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_Port\">\n        <xs:attribute name=\"type\" fixed=\"MMS-Port\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_UDP-Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_Port\">\n        <xs:attribute name=\"type\" fixed=\"IP-UDP-PORT\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_TCP-Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP_Port\">\n        <xs:attribute name=\"type\" fixed=\"IP-TCP-PORT\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_IPv6ClassOfTraffic\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern id=\"Values0-255\" value=\"[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]\" />\n        <xs:attribute name=\"type\" fixed=\"IPv6ClassOfTraffic\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tP_C37-118-IP-Port\">\n    <xs:simpleContent>\n      <xs:restriction base=\"tP\">\n        <xs:pattern id=\"Values1025-65535\" value=\"102[5-9]|10[3-9][0-9]|1[1-9][0-9][0-9]|[2-9][0-9]{3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]\" />\n        <xs:attribute name=\"type\" fixed=\"C37-118-IP-Port\" type=\"tPTypeEnum\" use=\"required\" />\n      </xs:restriction>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:element name=\"Communication\" type=\"tCommunication\">\n    <xs:unique name=\"uniqueSubNetwork\">\n      <xs:selector xpath=\"./scl:SubNetwork\" />\n      <xs:field xpath=\"@name\" />\n    </xs:unique>\n  </xs:element>\n  <!--Schema items added from SCL.2007B1.2014-07-18\\\\SCL_DataTypeTemplates.xsd-->\n  <xs:annotation>\n    <xs:documentation xml:lang=\"en\">\n\t\t\tSCL schema version \"2007\" revision \"B\" release 1,  for IEC 61850-6 Ed. 2.1. Draft 2014-07-18.\n\n\t\t\tCOPYRIGHT (c) IEC, 2014. All rights reserved. Disclaimer: The IEC disclaims liability for any personal injury, property or other damages of any nature whatsoever, whether special, indirect, consequential or compensatory, directly or indirectly resulting from this software and the document upon which its methods are based, use of, or reliance upon.\n\t\t</xs:documentation>\n  </xs:annotation>\n  <xs:attributeGroup name=\"agDATrgOp\">\n    <xs:attribute name=\"dchg\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"qchg\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n    <xs:attribute name=\"dupd\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n  </xs:attributeGroup>\n  <xs:complexType abstract=\"true\" name=\"tAbstractDataAttribute\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:sequence>\n          <xs:element name=\"Val\" type=\"tVal\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"name\" type=\"tAttributeNameEnum\" use=\"required\" />\n        <xs:attribute name=\"sAddr\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"bType\" type=\"tBasicTypeEnum\" use=\"required\" />\n        <xs:attribute name=\"valKind\" default=\"Set\" type=\"tValKindEnum\" use=\"optional\" />\n        <xs:attribute name=\"type\" type=\"tAnyName\" use=\"optional\" />\n        <xs:attribute name=\"count\" default=\"0\" type=\"tDACount\" use=\"optional\" />\n        <xs:attribute name=\"valImport\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tLNodeType\">\n    <xs:complexContent>\n      <xs:extension base=\"tIDNaming\">\n        <xs:sequence>\n          <xs:element name=\"DO\" type=\"tDO\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"iedType\" default=\"\" type=\"tAnyName\" use=\"optional\" />\n        <xs:attribute name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDO\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"name\" type=\"tDataName\" use=\"required\" />\n        <xs:attribute name=\"type\" type=\"tName\" use=\"required\" />\n        <xs:attribute name=\"accessControl\" type=\"xs:normalizedString\" use=\"optional\" />\n        <xs:attribute name=\"transient\" default=\"false\" type=\"xs:boolean\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDOType\">\n    <xs:complexContent>\n      <xs:extension base=\"tIDNaming\">\n        <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\n          <xs:element name=\"SDO\" type=\"tSDO\" />\n          <xs:element name=\"DA\" type=\"tDA\">\n            <xs:unique name=\"uniqueProtNsInDA\">\n              <xs:selector xpath=\"scl:ProtNs\" />\n              <xs:field xpath=\"@type\" />\n              <xs:field xpath=\".\" />\n            </xs:unique>\n          </xs:element>\n        </xs:choice>\n        <xs:attribute name=\"iedType\" default=\"\" type=\"tAnyName\" use=\"optional\" />\n        <xs:attribute name=\"cdc\" type=\"tCDCEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tSDO\">\n    <xs:complexContent>\n      <xs:extension base=\"tUnNaming\">\n        <xs:attribute name=\"name\" type=\"tSubDataName\" use=\"required\" />\n        <xs:attribute name=\"type\" type=\"tName\" use=\"required\" />\n        <xs:attribute name=\"count\" default=\"0\" type=\"tSDOCount\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDA\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractDataAttribute\">\n        <xs:sequence>\n          <xs:element name=\"ProtNs\" type=\"tProtNs\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attributeGroup ref=\"agDATrgOp\" />\n        <xs:attribute name=\"fc\" type=\"tFCEnum\" use=\"required\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDAType\">\n    <xs:complexContent>\n      <xs:extension base=\"tIDNaming\">\n        <xs:sequence>\n          <xs:element name=\"BDA\" type=\"tBDA\" maxOccurs=\"unbounded\" />\n          <xs:element name=\"ProtNs\" type=\"tProtNs\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n        <xs:attribute name=\"iedType\" default=\"\" type=\"tAnyName\" use=\"optional\" />\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tBDA\">\n    <xs:complexContent>\n      <xs:extension base=\"tAbstractDataAttribute\" />\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tEnumType\">\n    <xs:complexContent>\n      <xs:extension base=\"tIDNaming\">\n        <xs:sequence>\n          <xs:element name=\"EnumVal\" type=\"tEnumVal\" maxOccurs=\"unbounded\" />\n        </xs:sequence>\n      </xs:extension>\n    </xs:complexContent>\n  </xs:complexType>\n  <xs:complexType name=\"tProtNs\">\n    <xs:simpleContent>\n      <xs:extension base=\"tNamespaceName\">\n        <xs:attribute name=\"type\" default=\"8-MMS\" use=\"optional\">\n          <xs:simpleType>\n            <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\" />\n            </xs:restriction>\n          </xs:simpleType>\n        </xs:attribute>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tEnumVal\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:normalizedString\">\n        <xs:attribute name=\"ord\" type=\"xs:int\" use=\"required\" />\n        <xs:attributeGroup ref=\"agDesc\" />\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n  <xs:complexType name=\"tDataTypeTemplates\">\n    <xs:sequence>\n      <xs:element name=\"LNodeType\" type=\"tLNodeType\" maxOccurs=\"unbounded\">\n        <xs:unique name=\"uniqueDOInLNodeType\">\n          <xs:selector xpath=\"scl:DO\" />\n          <xs:field xpath=\"@name\" />\n        </xs:unique>\n      </xs:element>\n      <xs:element name=\"DOType\" type=\"tDOType\" maxOccurs=\"unbounded\">\n        <xs:unique name=\"uniqueDAorSDOInDOType\">\n          <xs:selector xpath=\"./*\" />\n          <xs:field xpath=\"@name\" />\n        </xs:unique>\n      </xs:element>\n      <xs:element name=\"DAType\" type=\"tDAType\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n        <xs:unique name=\"uniqueBDAInDAType\">\n          <xs:selector xpath=\"scl:BDA\" />\n          <xs:field xpath=\"@name\" />\n        </xs:unique>\n        <xs:unique name=\"uniqueProtNs\">\n          <xs:selector xpath=\"scl:ProtNs\" />\n          <xs:field xpath=\"@type\" />\n          <xs:field xpath=\".\" />\n        </xs:unique>\n      </xs:element>\n      <xs:element name=\"EnumType\" type=\"tEnumType\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n        <xs:unique name=\"uniqueOrdInEnumType\">\n          <xs:selector xpath=\"scl:EnumVal\" />\n          <xs:field xpath=\"@ord\" />\n        </xs:unique>\n        <xs:unique name=\"uniqueEnumValue\">\n          <xs:selector xpath=\"scl:EnumVal\" />\n          <xs:field xpath=\".\" />\n        </xs:unique>\n      </xs:element>\n    </xs:sequence>\n  </xs:complexType>\n  <xs:element name=\"DataTypeTemplates\" type=\"tDataTypeTemplates\">\n    <xs:unique name=\"uniqueLNodeType\">\n      <xs:selector xpath=\"scl:LNodeType\" />\n      <xs:field xpath=\"@id\" />\n    </xs:unique>\n    <xs:key name=\"DOTypeKey\">\n      <xs:selector xpath=\"scl:DOType\" />\n      <xs:field xpath=\"@id\" />\n    </xs:key>\n    <xs:keyref name=\"ref2DOType\" refer=\"DOTypeKey\">\n      <xs:selector xpath=\"scl:LNodeType/scl:DO\" />\n      <xs:field xpath=\"@type\" />\n    </xs:keyref>\n    <xs:keyref name=\"ref2DOTypeForSDO\" refer=\"DOTypeKey\">\n      <xs:selector xpath=\"scl:DOType/scl:SDO\" />\n      <xs:field xpath=\"@type\" />\n    </xs:keyref>\n    <xs:key name=\"DATypeKey\">\n      <xs:selector xpath=\"scl:DAType\" />\n      <xs:field xpath=\"@id\" />\n    </xs:key>\n    <xs:key name=\"EnumTypeKey\">\n      <xs:selector xpath=\"scl:EnumType\" />\n      <xs:field xpath=\"@id\" />\n    </xs:key>\n  </xs:element>\n  </xs:schema>\n  `,\n  '2007B4': `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\"\n      targetNamespace=\"http://www.iec.ch/61850/2003/SCL\" version=\"2007B4\"\n      xmlns=\"http://www.iec.ch/61850/2003/SCL\" xmlns:scl=\"http://www.iec.ch/61850/2003/SCL\"\n      xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".        Implemented Ed. 2 Tissues\n              (since \"2007B\"): 948, 1050, 1175, 1189, 1208, 1328, 1359, 1365, 1397, 1434, 1448, 1450,\n              1458, 1472.    Tissues not relevant for the SCL schema (since \"2007B\"): 706 (Ed.3), 837,\n              847, 865, 873, 883, 884, 885, 938, 949, 961, 1048, 1054, 1059, 1118, 1130, 1131, 1147,\n              1161, 1168, 1170 (Ed.3), 1173, 1185, 1188, 1195, 1200, 1204, 1207, 1221, 1224, 1241\n              (Ed.3), 1255, 1257 (Ed.3), 1280, 1284, 1327, 1337, 1354, 1395, 1398, 1399, 1400, 1401,\n              1402, 1415, 1416, 1419, 1421, 1431, 1444, 1445, 1446, 1447, 1451, 1452, 1457, 1461,\n              1471.   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:simpleType name=\"tConnectivityNodeReference\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\".+/.+(/.+)*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAnyName\">\n          <xs:restriction base=\"xs:normalizedString\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tName\">\n          <xs:restriction base=\"tAnyName\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tID\">\n          <xs:restriction base=\"xs:token\">\n              <xs:minLength value=\"1\"/>\n              <xs:maxLength value=\"255\"/>\n              <xs:pattern value=\"\\\\S+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAcsiName\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrName1stU\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"[A-Z][0-9A-Za-z]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRestrName1stL\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"[a-z][0-9A-Za-z]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPAddr\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSclVersion\">\n          <xs:restriction base=\"tName\">\n              <xs:pattern value=\"2[0-2][0-9]{2}\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSclRevision\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:pattern value=\"[A-Z]\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSclRelease\">\n          <xs:restriction base=\"xs:unsignedByte\">\n              <xs:minExclusive value=\"0\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tEmpty\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"0\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tIEDName\">\n          <xs:restriction base=\"tAcsiName\">\n              <xs:maxLength value=\"64\"/>\n              <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]{0,2}\"/>\n              <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]{4,63}\"/>\n              <xs:pattern value=\"[A-MO-Za-z][0-9A-Za-z_]{3}\"/>\n              <xs:pattern value=\"N[0-9A-Za-np-z_][0-9A-Za-z_]{2}\"/>\n              <xs:pattern value=\"No[0-9A-Za-mo-z_][0-9A-Za-z_]\"/>\n              <xs:pattern value=\"Non[0-9A-Za-df-z_]\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tIEDNameIsNone\">\n          <xs:restriction base=\"tAcsiName\">\n              <xs:pattern value=\"None\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tIEDNameOrNone\">\n          <xs:union memberTypes=\"tIEDName tIEDNameIsNone\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tOnlyRelativeIEDName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"@\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tIEDNameOrRelative\">\n          <xs:union memberTypes=\"tIEDName tOnlyRelativeIEDName\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLDName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"64\"/>\n              <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLDInst\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"64\"/>\n              <xs:pattern value=\"[A-Za-z0-9][0-9A-Za-z_]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLDInstOrEmpty\">\n          <xs:union memberTypes=\"tLDInst tEmpty\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPrefix\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"11\"/>\n              <xs:pattern value=\"[A-Za-z][0-9A-Za-z_]*\"/>\n              <xs:pattern value=\"\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLNInst\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[0-9]{1,12}\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLNInstOrEmpty\">\n          <xs:union memberTypes=\"tLNInst tEmpty\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDataName\">\n          <xs:restriction base=\"tRestrName1stU\">\n              <xs:maxLength value=\"12\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDataSetName\">\n          <xs:restriction base=\"tAcsiName\">\n              <xs:maxLength value=\"32\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tCBName\">\n          <xs:restriction base=\"tAcsiName\">\n              <xs:maxLength value=\"32\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLogName\">\n          <xs:restriction base=\"tAcsiName\">\n              <xs:maxLength value=\"32\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAccessPointName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"32\"/>\n              <xs:pattern value=\"[A-Za-z0-9][0-9A-Za-z_]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAssociationID\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\"/>\n              <xs:pattern value=\"[0-9A-Za-z]+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tVisibleBasicLatin\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[ -~]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tMessageID\">\n          <xs:restriction base=\"tVisibleBasicLatin\">\n              <xs:minLength value=\"1\"/>\n              <xs:maxLength value=\"129\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tFullAttributeName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern\n                  value=\"[a-zA-Z][a-zA-Z0-9]*(\\\\([0-9]+\\\\))?(\\\\.[a-zA-Z][a-zA-Z0-9]*(\\\\([0-9]+\\\\))?)*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tFullDOName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[A-Z][0-9A-Za-z]{0,11}(\\\\.[a-z][0-9A-Za-z]*(\\\\([0-9]+\\\\))?)?\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSubDataName\">\n          <xs:restriction base=\"tRestrName1stL\">\n              <xs:minLength value=\"1\"/>\n              <xs:maxLength value=\"60\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tNamespaceName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[ -~]+:20\\\\d\\\\d[A-Z]?\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLineType\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tProcessType\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:minLength value=\"1\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tProcessName\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\".+(/.+)*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tEnumStringValue\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:maxLength value=\"127\"/>\n              <xs:pattern value=\"[\\\\p{IsBasicLatin}\\\\p{IsLatin-1Supplement}]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedPTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"IP\"/>\n              <xs:enumeration value=\"IP-SUBNET\"/>\n              <xs:enumeration value=\"IP-GATEWAY\"/>\n              <xs:enumeration value=\"OSI-NSAP\"/>\n              <xs:enumeration value=\"OSI-TSEL\"/>\n              <xs:enumeration value=\"OSI-SSEL\"/>\n              <xs:enumeration value=\"OSI-PSEL\"/>\n              <xs:enumeration value=\"OSI-AP-Title\"/>\n              <xs:enumeration value=\"OSI-AP-Invoke\"/>\n              <xs:enumeration value=\"OSI-AE-Qualifier\"/>\n              <xs:enumeration value=\"OSI-AE-Invoke\"/>\n              <xs:enumeration value=\"MAC-Address\"/>\n              <xs:enumeration value=\"APPID\"/>\n              <xs:enumeration value=\"VLAN-PRIORITY\"/>\n              <xs:enumeration value=\"VLAN-ID\"/>\n              <xs:enumeration value=\"SNTP-Port\"/>\n              <xs:enumeration value=\"MMS-Port\"/>\n              <xs:enumeration value=\"DNSName\"/>\n              <xs:enumeration value=\"IPv6FlowLabel\"/>\n              <xs:enumeration value=\"IPv6ClassOfTraffic\"/>\n              <xs:enumeration value=\"C37-118-IP-Port\"/>\n              <xs:enumeration value=\"IP-UDP-PORT\"/>\n              <xs:enumeration value=\"IP-TCP-PORT\"/>\n              <xs:enumeration value=\"IPv6\"/>\n              <xs:enumeration value=\"IPv6-SUBNET\"/>\n              <xs:enumeration value=\"IPv6-GATEWAY\"/>\n              <xs:enumeration value=\"IPv6-IGMPv3Src\"/>\n              <xs:enumeration value=\"IP-IGMPv3Src\"/>\n              <xs:enumeration value=\"IP-ClassOfTraffic\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionPTypeEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[A-Z][0-9A-Za-z\\\\-]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPTypeEnum\">\n          <xs:union memberTypes=\"tPredefinedPTypeEnum tExtensionPTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedPTypePhysConnEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Type\"/>\n              <xs:enumeration value=\"Plug\"/>\n              <xs:enumeration value=\"Cable\"/>\n              <xs:enumeration value=\"Port\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPTypePhysConnEnum\">\n          <xs:union memberTypes=\"tPredefinedPTypePhysConnEnum tExtensionPTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedAttributeNameEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"T\"/>\n              <xs:enumeration value=\"Test\"/>\n              <xs:enumeration value=\"Check\"/>\n              <xs:enumeration value=\"SIUnit\"/>\n              <xs:enumeration value=\"Oper\"/>\n              <xs:enumeration value=\"SBO\"/>\n              <xs:enumeration value=\"SBOw\"/>\n              <xs:enumeration value=\"Cancel\"/>\n              <xs:enumeration value=\"Addr\"/>\n              <xs:enumeration value=\"PRIORITY\"/>\n              <xs:enumeration value=\"VID\"/>\n              <xs:enumeration value=\"APPID\"/>\n              <xs:enumeration value=\"TransportInUse\"/>\n              <xs:enumeration value=\"IPClassOfTraffic\"/>\n              <xs:enumeration value=\"IPv6FlowLabel\"/>\n              <xs:enumeration value=\"IPAddressLength\"/>\n              <xs:enumeration value=\"IPAddress\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionAttributeNameEnum\">\n          <xs:restriction base=\"tRestrName1stL\">\n              <xs:maxLength value=\"60\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAttributeNameEnum\">\n          <xs:union memberTypes=\"tPredefinedAttributeNameEnum tExtensionAttributeNameEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedCommonConductingEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"CBR\"/>\n              <xs:enumeration value=\"DIS\"/>\n              <xs:enumeration value=\"VTR\"/>\n              <xs:enumeration value=\"CTR\"/>\n              <xs:enumeration value=\"GEN\"/>\n              <xs:enumeration value=\"CAP\"/>\n              <xs:enumeration value=\"REA\"/>\n              <xs:enumeration value=\"CON\"/>\n              <xs:enumeration value=\"MOT\"/>\n              <xs:enumeration value=\"EFN\"/>\n              <xs:enumeration value=\"PSH\"/>\n              <xs:enumeration value=\"BAT\"/>\n              <xs:enumeration value=\"BSH\"/>\n              <xs:enumeration value=\"CAB\"/>\n              <xs:enumeration value=\"GIL\"/>\n              <xs:enumeration value=\"LIN\"/>\n              <xs:enumeration value=\"RES\"/>\n              <xs:enumeration value=\"RRC\"/>\n              <xs:enumeration value=\"SAR\"/>\n              <xs:enumeration value=\"TCF\"/>\n              <xs:enumeration value=\"TCR\"/>\n              <xs:enumeration value=\"IFL\"/>\n              <xs:enumeration value=\"FAN\"/>\n              <xs:enumeration value=\"SCR\"/>\n              <xs:enumeration value=\"SMC\"/>\n              <xs:enumeration value=\"PMP\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:minLength value=\"3\"/>\n              <xs:pattern value=\"E[A-Z]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tCommonConductingEquipmentEnum\">\n          <xs:union memberTypes=\"tPredefinedCommonConductingEquipmentEnum tExtensionEquipmentEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPowerTransformerEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"PTR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tTransformerWindingEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"PTW\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedGeneralEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"AXN\"/>\n              <xs:enumeration value=\"BAT\"/>\n              <xs:enumeration value=\"MOT\"/>\n              <xs:enumeration value=\"FAN\"/>\n              <xs:enumeration value=\"FIL\"/>\n              <xs:enumeration value=\"PMP\"/>\n              <xs:enumeration value=\"TNK\"/>\n              <xs:enumeration value=\"VLV\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionGeneralEquipmentEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:minLength value=\"3\"/>\n              <xs:pattern value=\"E[A-Z]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tGeneralEquipmentEnum\">\n          <xs:union memberTypes=\"tPredefinedGeneralEquipmentEnum tExtensionGeneralEquipmentEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tServiceSettingsNoDynEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Conf\"/>\n              <xs:enumeration value=\"Fix\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tServiceSettingsEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Dyn\"/>\n              <xs:enumeration value=\"Conf\"/>\n              <xs:enumeration value=\"Fix\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRedProtEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"none\"/>\n              <xs:enumeration value=\"hsr\"/>\n              <xs:enumeration value=\"prp\"/>\n              <xs:enumeration value=\"rstp\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSMVDeliveryEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"unicast\"/>\n              <xs:enumeration value=\"multicast\"/>\n              <xs:enumeration value=\"both\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPhaseEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"A\"/>\n              <xs:enumeration value=\"B\"/>\n              <xs:enumeration value=\"C\"/>\n              <xs:enumeration value=\"N\"/>\n              <xs:enumeration value=\"all\"/>\n              <xs:enumeration value=\"none\"/>\n              <xs:enumeration value=\"AB\"/>\n              <xs:enumeration value=\"BC\"/>\n              <xs:enumeration value=\"CA\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAuthenticationEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"none\"/>\n              <xs:enumeration value=\"password\"/>\n              <xs:enumeration value=\"weak\"/>\n              <xs:enumeration value=\"strong\"/>\n              <xs:enumeration value=\"certificate\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tAssociationKindEnum\">\n          <xs:restriction base=\"xs:token\">\n              <xs:enumeration value=\"pre-established\"/>\n              <xs:enumeration value=\"predefined\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLPHDEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"LPHD\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLLN0Enum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"LLN0\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSystemLNGroupEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"L[A-Z]*\"/>\n              <xs:pattern value=\"LLN0\"/>\n              <xs:enumeration value=\"LLN0\"/>\n              <xs:enumeration value=\"LPHD\"/>\n              <xs:enumeration value=\"LCCH\"/>\n              <xs:enumeration value=\"LGOS\"/>\n              <xs:enumeration value=\"LSVS\"/>\n              <xs:enumeration value=\"LTIM\"/>\n              <xs:enumeration value=\"LTMS\"/>\n              <xs:enumeration value=\"LTRK\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupAEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"A[A-Z]*\"/>\n              <xs:enumeration value=\"ANCR\"/>\n              <xs:enumeration value=\"ARCO\"/>\n              <xs:enumeration value=\"ARIS\"/>\n              <xs:enumeration value=\"ATCC\"/>\n              <xs:enumeration value=\"AVCO\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"C[A-Z]*\"/>\n              <xs:enumeration value=\"CALH\"/>\n              <xs:enumeration value=\"CCGR\"/>\n              <xs:enumeration value=\"CILO\"/>\n              <xs:enumeration value=\"CPOW\"/>\n              <xs:enumeration value=\"CSWI\"/>\n              <xs:enumeration value=\"CSYN\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupFEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"F[A-Z]*\"/>\n              <xs:enumeration value=\"FCNT\"/>\n              <xs:enumeration value=\"FCSD\"/>\n              <xs:enumeration value=\"FFIL\"/>\n              <xs:enumeration value=\"FLIM\"/>\n              <xs:enumeration value=\"FPID\"/>\n              <xs:enumeration value=\"FRMP\"/>\n              <xs:enumeration value=\"FSPT\"/>\n              <xs:enumeration value=\"FXOT\"/>\n              <xs:enumeration value=\"FXUT\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupGEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"G[A-Z]*\"/>\n              <xs:enumeration value=\"GAPC\"/>\n              <xs:enumeration value=\"GGIO\"/>\n              <xs:enumeration value=\"GLOG\"/>\n              <xs:enumeration value=\"GSAL\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupIEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"I[A-Z]*\"/>\n              <xs:enumeration value=\"IARC\"/>\n              <xs:enumeration value=\"IHMI\"/>\n              <xs:enumeration value=\"ISAF\"/>\n              <xs:enumeration value=\"ITCI\"/>\n              <xs:enumeration value=\"ITMI\"/>\n              <xs:enumeration value=\"ITPC\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupKEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"K[A-Z]*\"/>\n              <xs:enumeration value=\"KFAN\"/>\n              <xs:enumeration value=\"KFIL\"/>\n              <xs:enumeration value=\"KPMP\"/>\n              <xs:enumeration value=\"KTNK\"/>\n              <xs:enumeration value=\"KVLV\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupMEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"M[A-Z]*\"/>\n              <xs:enumeration value=\"MDIF\"/>\n              <xs:enumeration value=\"MENV\"/>\n              <xs:enumeration value=\"MFLK\"/>\n              <xs:enumeration value=\"MHAI\"/>\n              <xs:enumeration value=\"MHAN\"/>\n              <xs:enumeration value=\"MHYD\"/>\n              <xs:enumeration value=\"MMDC\"/>\n              <xs:enumeration value=\"MMET\"/>\n              <xs:enumeration value=\"MMTN\"/>\n              <xs:enumeration value=\"MMTR\"/>\n              <xs:enumeration value=\"MMXN\"/>\n              <xs:enumeration value=\"MMXU\"/>\n              <xs:enumeration value=\"MSQI\"/>\n              <xs:enumeration value=\"MSTA\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupPEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"P[A-Z]*\"/>\n              <xs:enumeration value=\"PDIF\"/>\n              <xs:enumeration value=\"PDIR\"/>\n              <xs:enumeration value=\"PDIS\"/>\n              <xs:enumeration value=\"PDOP\"/>\n              <xs:enumeration value=\"PDUP\"/>\n              <xs:enumeration value=\"PFRC\"/>\n              <xs:enumeration value=\"PHAR\"/>\n              <xs:enumeration value=\"PHIZ\"/>\n              <xs:enumeration value=\"PIOC\"/>\n              <xs:enumeration value=\"PMRI\"/>\n              <xs:enumeration value=\"PMSS\"/>\n              <xs:enumeration value=\"POPF\"/>\n              <xs:enumeration value=\"PPAM\"/>\n              <xs:enumeration value=\"PRTR\"/>\n              <xs:enumeration value=\"PSCH\"/>\n              <xs:enumeration value=\"PSDE\"/>\n              <xs:enumeration value=\"PTEF\"/>\n              <xs:enumeration value=\"PTHF\"/>\n              <xs:enumeration value=\"PTOC\"/>\n              <xs:enumeration value=\"PTOF\"/>\n              <xs:enumeration value=\"PTOV\"/>\n              <xs:enumeration value=\"PTRC\"/>\n              <xs:enumeration value=\"PTTR\"/>\n              <xs:enumeration value=\"PTUC\"/>\n              <xs:enumeration value=\"PTUF\"/>\n              <xs:enumeration value=\"PTUV\"/>\n              <xs:enumeration value=\"PUPF\"/>\n              <xs:enumeration value=\"PVOC\"/>\n              <xs:enumeration value=\"PVPH\"/>\n              <xs:enumeration value=\"PZSU\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupQEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"Q[A-Z]*\"/>\n              <xs:enumeration value=\"QFVR\"/>\n              <xs:enumeration value=\"QITR\"/>\n              <xs:enumeration value=\"QIUB\"/>\n              <xs:enumeration value=\"QVTR\"/>\n              <xs:enumeration value=\"QVUB\"/>\n              <xs:enumeration value=\"QVVR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupREnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"R[A-Z]*\"/>\n              <xs:enumeration value=\"RADR\"/>\n              <xs:enumeration value=\"RBDR\"/>\n              <xs:enumeration value=\"RBRF\"/>\n              <xs:enumeration value=\"RDIR\"/>\n              <xs:enumeration value=\"RDRE\"/>\n              <xs:enumeration value=\"RDRS\"/>\n              <xs:enumeration value=\"RFLO\"/>\n              <xs:enumeration value=\"RMXU\"/>\n              <xs:enumeration value=\"RPSB\"/>\n              <xs:enumeration value=\"RREC\"/>\n              <xs:enumeration value=\"RSYN\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupSEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"S[A-Z]*\"/>\n              <xs:enumeration value=\"SARC\"/>\n              <xs:enumeration value=\"SCBR\"/>\n              <xs:enumeration value=\"SIMG\"/>\n              <xs:enumeration value=\"SIML\"/>\n              <xs:enumeration value=\"SLTC\"/>\n              <xs:enumeration value=\"SOPM\"/>\n              <xs:enumeration value=\"SPDC\"/>\n              <xs:enumeration value=\"SPTR\"/>\n              <xs:enumeration value=\"SSWI\"/>\n              <xs:enumeration value=\"STMP\"/>\n              <xs:enumeration value=\"SVBR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupTEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"T[A-Z]*\"/>\n              <xs:enumeration value=\"TANG\"/>\n              <xs:enumeration value=\"TAXD\"/>\n              <xs:enumeration value=\"TCTR\"/>\n              <xs:enumeration value=\"TDST\"/>\n              <xs:enumeration value=\"TFLW\"/>\n              <xs:enumeration value=\"TFRQ\"/>\n              <xs:enumeration value=\"TGSN\"/>\n              <xs:enumeration value=\"THUM\"/>\n              <xs:enumeration value=\"TLVL\"/>\n              <xs:enumeration value=\"TMGF\"/>\n              <xs:enumeration value=\"TMVM\"/>\n              <xs:enumeration value=\"TPOS\"/>\n              <xs:enumeration value=\"TPRS\"/>\n              <xs:enumeration value=\"TRTN\"/>\n              <xs:enumeration value=\"TSND\"/>\n              <xs:enumeration value=\"TTMP\"/>\n              <xs:enumeration value=\"TTNS\"/>\n              <xs:enumeration value=\"TVBR\"/>\n              <xs:enumeration value=\"TVTR\"/>\n              <xs:enumeration value=\"TWPH\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupXEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"X[A-Z]*\"/>\n              <xs:enumeration value=\"XCBR\"/>\n              <xs:enumeration value=\"XSWI\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupYEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"Y[A-Z]*\"/>\n              <xs:enumeration value=\"YEFN\"/>\n              <xs:enumeration value=\"YLTC\"/>\n              <xs:enumeration value=\"YPSH\"/>\n              <xs:enumeration value=\"YPTR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNGroupZEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"Z[A-Z]*\"/>\n              <xs:enumeration value=\"ZAXN\"/>\n              <xs:enumeration value=\"ZBAT\"/>\n              <xs:enumeration value=\"ZBSH\"/>\n              <xs:enumeration value=\"ZCAB\"/>\n              <xs:enumeration value=\"ZCAP\"/>\n              <xs:enumeration value=\"ZCON\"/>\n              <xs:enumeration value=\"ZGEN\"/>\n              <xs:enumeration value=\"ZGIL\"/>\n              <xs:enumeration value=\"ZLIN\"/>\n              <xs:enumeration value=\"ZMOT\"/>\n              <xs:enumeration value=\"ZREA\"/>\n              <xs:enumeration value=\"ZRES\"/>\n              <xs:enumeration value=\"ZRRC\"/>\n              <xs:enumeration value=\"ZSAR\"/>\n              <xs:enumeration value=\"ZSCR\"/>\n              <xs:enumeration value=\"ZSMC\"/>\n              <xs:enumeration value=\"ZTCF\"/>\n              <xs:enumeration value=\"ZTCR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDomainLNEnum\">\n          <xs:union\n              memberTypes=\"tDomainLNGroupAEnum tDomainLNGroupCEnum tDomainLNGroupFEnum tDomainLNGroupGEnum tDomainLNGroupIEnum tDomainLNGroupKEnum tDomainLNGroupMEnum tDomainLNGroupPEnum tDomainLNGroupQEnum tDomainLNGroupREnum tDomainLNGroupSEnum tDomainLNGroupTEnum tDomainLNGroupXEnum tDomainLNGroupYEnum tDomainLNGroupZEnum\"\n          />\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedLNClassEnum\">\n          <xs:union memberTypes=\"tSystemLNGroupEnum tDomainLNEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionLNClassEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:length value=\"4\"/>\n              <xs:pattern value=\"[A-Z]+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tLNClassEnum\">\n          <xs:union memberTypes=\"tPredefinedLNClassEnum tExtensionLNClassEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedCDCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"SPS\"/>\n              <xs:enumeration value=\"DPS\"/>\n              <xs:enumeration value=\"INS\"/>\n              <xs:enumeration value=\"ENS\"/>\n              <xs:enumeration value=\"ACT\"/>\n              <xs:enumeration value=\"ACD\"/>\n              <xs:enumeration value=\"SEC\"/>\n              <xs:enumeration value=\"BCR\"/>\n              <xs:enumeration value=\"HST\"/>\n              <xs:enumeration value=\"VSS\"/>\n              <xs:enumeration value=\"MV\"/>\n              <xs:enumeration value=\"CMV\"/>\n              <xs:enumeration value=\"SAV\"/>\n              <xs:enumeration value=\"WYE\"/>\n              <xs:enumeration value=\"DEL\"/>\n              <xs:enumeration value=\"SEQ\"/>\n              <xs:enumeration value=\"HMV\"/>\n              <xs:enumeration value=\"HWYE\"/>\n              <xs:enumeration value=\"HDEL\"/>\n              <xs:enumeration value=\"SPC\"/>\n              <xs:enumeration value=\"DPC\"/>\n              <xs:enumeration value=\"INC\"/>\n              <xs:enumeration value=\"ENC\"/>\n              <xs:enumeration value=\"BSC\"/>\n              <xs:enumeration value=\"ISC\"/>\n              <xs:enumeration value=\"APC\"/>\n              <xs:enumeration value=\"BAC\"/>\n              <xs:enumeration value=\"SPG\"/>\n              <xs:enumeration value=\"ING\"/>\n              <xs:enumeration value=\"ENG\"/>\n              <xs:enumeration value=\"ORG\"/>\n              <xs:enumeration value=\"TSG\"/>\n              <xs:enumeration value=\"CUG\"/>\n              <xs:enumeration value=\"VSG\"/>\n              <xs:enumeration value=\"ASG\"/>\n              <xs:enumeration value=\"CURVE\"/>\n              <xs:enumeration value=\"CSG\"/>\n              <xs:enumeration value=\"DPL\"/>\n              <xs:enumeration value=\"LPL\"/>\n              <xs:enumeration value=\"CSD\"/>\n              <xs:enumeration value=\"CST\"/>\n              <xs:enumeration value=\"BTS\"/>\n              <xs:enumeration value=\"UTS\"/>\n              <xs:enumeration value=\"LTS\"/>\n              <xs:enumeration value=\"GTS\"/>\n              <xs:enumeration value=\"MTS\"/>\n              <xs:enumeration value=\"NTS\"/>\n              <xs:enumeration value=\"STS\"/>\n              <xs:enumeration value=\"CTS\"/>\n              <xs:enumeration value=\"OTS\"/>\n              <xs:enumeration value=\"VSD\"/>\n              <xs:enumeration value=\"ORS\"/>\n              <xs:enumeration value=\"TCS\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionCDCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:minLength value=\"1\"/>\n              <xs:maxLength value=\"5\"/>\n              <xs:pattern value=\"[A-Za-z]+\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tCDCEnum\">\n          <xs:restriction base=\"tPredefinedCDCEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tFCEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"ST\"/>\n              <xs:enumeration value=\"MX\"/>\n              <xs:enumeration value=\"CO\"/>\n              <xs:enumeration value=\"SP\"/>\n              <xs:enumeration value=\"SG\"/>\n              <xs:enumeration value=\"SE\"/>\n              <xs:enumeration value=\"SV\"/>\n              <xs:enumeration value=\"CF\"/>\n              <xs:enumeration value=\"DC\"/>\n              <xs:enumeration value=\"EX\"/>\n              <xs:enumeration value=\"SR\"/>\n              <xs:enumeration value=\"BL\"/>\n              <xs:enumeration value=\"OR\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedBasicTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"BOOLEAN\"/>\n              <xs:enumeration value=\"INT8\"/>\n              <xs:enumeration value=\"INT16\"/>\n              <xs:enumeration value=\"INT24\"/>\n              <xs:enumeration value=\"INT32\"/>\n              <xs:enumeration value=\"INT64\"/>\n              <xs:enumeration value=\"INT128\"/>\n              <xs:enumeration value=\"INT8U\"/>\n              <xs:enumeration value=\"INT16U\"/>\n              <xs:enumeration value=\"INT24U\"/>\n              <xs:enumeration value=\"INT32U\"/>\n              <xs:enumeration value=\"FLOAT32\"/>\n              <xs:enumeration value=\"FLOAT64\"/>\n              <xs:enumeration value=\"Enum\"/>\n              <xs:enumeration value=\"Dbpos\"/>\n              <xs:enumeration value=\"Tcmd\"/>\n              <xs:enumeration value=\"Quality\"/>\n              <xs:enumeration value=\"Timestamp\"/>\n              <xs:enumeration value=\"VisString32\"/>\n              <xs:enumeration value=\"VisString64\"/>\n              <xs:enumeration value=\"VisString65\"/>\n              <xs:enumeration value=\"VisString129\"/>\n              <xs:enumeration value=\"VisString255\"/>\n              <xs:enumeration value=\"Octet64\"/>\n              <xs:enumeration value=\"Unicode255\"/>\n              <xs:enumeration value=\"Struct\"/>\n              <xs:enumeration value=\"EntryTime\"/>\n              <xs:enumeration value=\"Check\"/>\n              <xs:enumeration value=\"ObjRef\"/>\n              <xs:enumeration value=\"Currency\"/>\n              <xs:enumeration value=\"PhyComAddr\"/>\n              <xs:enumeration value=\"TrgOps\"/>\n              <xs:enumeration value=\"OptFlds\"/>\n              <xs:enumeration value=\"SvOptFlds\"/>\n              <xs:enumeration value=\"LogOptFlds\"/>\n              <xs:enumeration value=\"EntryID\"/>\n              <xs:enumeration value=\"Octet6\"/>\n              <xs:enumeration value=\"Octet16\"/>\n              <!-- for 61850-8-1 Edition 2.1 -->\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tBasicTypeEnum\">\n          <xs:restriction base=\"tPredefinedBasicTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tValKindEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Spec\"/>\n              <xs:enumeration value=\"Conf\"/>\n              <xs:enumeration value=\"RO\"/>\n              <xs:enumeration value=\"Set\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tGSEControlTypeEnum\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"GSSE\"/>\n              <xs:enumeration value=\"GOOSE\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tUnitMultiplierEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"\"/>\n              <xs:enumeration value=\"m\"/>\n              <xs:enumeration value=\"k\"/>\n              <xs:enumeration value=\"M\"/>\n              <xs:enumeration value=\"mu\"/>\n              <xs:enumeration value=\"y\"/>\n              <xs:enumeration value=\"z\"/>\n              <xs:enumeration value=\"a\"/>\n              <xs:enumeration value=\"f\"/>\n              <xs:enumeration value=\"p\"/>\n              <xs:enumeration value=\"n\"/>\n              <xs:enumeration value=\"c\"/>\n              <xs:enumeration value=\"d\"/>\n              <xs:enumeration value=\"da\"/>\n              <xs:enumeration value=\"h\"/>\n              <xs:enumeration value=\"G\"/>\n              <xs:enumeration value=\"T\"/>\n              <xs:enumeration value=\"P\"/>\n              <xs:enumeration value=\"E\"/>\n              <xs:enumeration value=\"Z\"/>\n              <xs:enumeration value=\"Y\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tRightEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"full\"/>\n              <xs:enumeration value=\"fix\"/>\n              <xs:enumeration value=\"dataflow\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSDOCount\">\n          <xs:union memberTypes=\"xs:unsignedInt tRestrName1stL\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tDACount\">\n          <xs:union memberTypes=\"xs:unsignedInt tAttributeNameEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tSmpMod\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"SmpPerPeriod\"/>\n              <xs:enumeration value=\"SmpPerSec\"/>\n              <xs:enumeration value=\"SecPerSmp\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedPhysConnTypeEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"Connection\"/>\n              <xs:enumeration value=\"RedConn\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tExtensionPhysConnTypeEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:pattern value=\"[A-Z][0-9A-Za-z\\\\-]*\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPhysConnTypeEnum\">\n          <xs:union memberTypes=\"tPredefinedPhysConnTypeEnum tExtensionPhysConnTypeEnum\"/>\n      </xs:simpleType>\n      <xs:simpleType name=\"tServiceType\">\n          <xs:restriction base=\"xs:Name\">\n              <xs:enumeration value=\"Poll\"/>\n              <xs:enumeration value=\"Report\"/>\n              <xs:enumeration value=\"GOOSE\"/>\n              <xs:enumeration value=\"SMV\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:simpleType name=\"tPredefinedTypeOfSecurityEnum\">\n          <xs:restriction base=\"xs:normalizedString\">\n              <xs:enumeration value=\"None\"/>\n              <xs:enumeration value=\"Signature\"/>\n              <xs:enumeration value=\"SignatureAndEncryption\"/>\n          </xs:restriction>\n      </xs:simpleType>\n      <xs:attributeGroup name=\"agDesc\">\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"desc\" type=\"xs:normalizedString\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tBaseElement\">\n          <xs:sequence>\n              <xs:any maxOccurs=\"unbounded\" minOccurs=\"0\" namespace=\"##other\" processContents=\"lax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Text\" type=\"tText\"/>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Private\"\n                  type=\"tPrivate\"/>\n          </xs:sequence>\n          <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tUnNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tName\" use=\"required\"/>\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tIDNaming\">\n          <xs:complexContent>\n              <xs:extension base=\"tBaseElement\">\n                  <xs:attribute form=\"unqualified\" name=\"id\" type=\"tID\" use=\"required\"/>\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" mixed=\"true\" name=\"tAnyContentFromOtherNamespace\">\n          <xs:sequence maxOccurs=\"unbounded\" minOccurs=\"0\">\n              <xs:any namespace=\"##other\" processContents=\"lax\"/>\n          </xs:sequence>\n          <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tText\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"source\" type=\"xs:anyURI\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tPrivate\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" use=\"required\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:normalizedString\">\n                              <xs:minLength value=\"1\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute form=\"unqualified\" name=\"source\" type=\"xs:anyURI\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tHeader\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Text\" type=\"tText\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"History\">\n                  <xs:complexType>\n                      <xs:sequence>\n                          <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"Hitem\"\n                              type=\"tHitem\"/>\n                      </xs:sequence>\n                  </xs:complexType>\n              </xs:element>\n          </xs:sequence>\n          <xs:attribute form=\"unqualified\" name=\"id\" type=\"xs:normalizedString\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"version\" type=\"xs:normalizedString\" use=\"optional\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"revision\" type=\"xs:normalizedString\"\n              use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"toolID\" type=\"xs:normalizedString\" use=\"optional\"/>\n          <xs:attribute default=\"IEDName\" form=\"unqualified\" name=\"nameStructure\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:Name\">\n                      <xs:enumeration value=\"IEDName\"/>\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tHitem\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\">\n                  <xs:attribute form=\"unqualified\" name=\"version\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"revision\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"when\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"who\" type=\"xs:normalizedString\"/>\n                  <xs:attribute form=\"unqualified\" name=\"what\" type=\"xs:normalizedString\"/>\n                  <xs:attribute form=\"unqualified\" name=\"why\" type=\"xs:normalizedString\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVal\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:normalizedString\">\n                  <xs:attribute form=\"unqualified\" name=\"sGroup\" type=\"xs:unsignedInt\" use=\"optional\"\n                  />\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tValueWithUnit\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:decimal\">\n                  <xs:attribute form=\"unqualified\" name=\"unit\" type=\"xs:token\" use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVoltage\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"V\" form=\"unqualified\" name=\"unit\" type=\"xs:token\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDurationInSec\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tValueWithUnit\">\n                  <xs:attribute fixed=\"s\" form=\"unqualified\" name=\"unit\" type=\"xs:token\"\n                      use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDurationInMilliSec\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:decimal\">\n                  <xs:attribute fixed=\"s\" form=\"unqualified\" name=\"unit\" type=\"xs:token\"\n                      use=\"optional\"/>\n                  <xs:attribute fixed=\"m\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBitRateInMbPerSec\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:decimal\">\n                  <xs:attribute fixed=\"b/s\" form=\"unqualified\" name=\"unit\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute fixed=\"M\" form=\"unqualified\" name=\"multiplier\"\n                      type=\"tUnitMultiplierEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:attributeGroup name=\"agVirtual\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"virtual\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tLNodeContainer\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"LNode\"\n                          type=\"tLNode\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tPowerSystemResource\">\n          <xs:complexContent>\n              <xs:extension base=\"tLNodeContainer\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tEquipmentContainer\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"PowerTransformer\" type=\"tPowerTransformer\">\n                          <xs:unique name=\"uniqueLNodeInPowerTransformer\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInPTR\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\">\n                          <xs:unique name=\"uniqueLNodeInGeneralEquipment\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInGE\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tAbstractConductingEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"2\" minOccurs=\"0\" name=\"Terminal\"\n                          type=\"tTerminal\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubEquipment\" type=\"tSubEquipment\">\n                          <xs:unique name=\"uniqueLNodeInSubEquipment\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInACESubEquipment\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConductingEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractConductingEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForCE\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForCE\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tCommonConductingEquipmentEnum\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForSubEq\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForSubEq\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute default=\"none\" form=\"unqualified\" name=\"phase\" type=\"tPhaseEnum\"\n                      use=\"optional\"/>\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tPowerTransformer\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"TransformerWinding\"\n                          type=\"tTransformerWinding\">\n                          <xs:unique name=\"uniqueLNodeInTransformerWinding\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInPTW\">\n                              <xs:selector\n                                  xpath=\"./scl:SubEquipment | ./scl:TapChanger | ./scl:EqFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubEquipment\" type=\"scl:tSubEquipment\">\n                          <xs:unique name=\"uniqueLNodeInSubEquipmentPTR\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInPTRSubEquipment\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForPTR\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForPTR\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"PTR\" form=\"unqualified\" name=\"type\"\n                      type=\"tPowerTransformerEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTransformerWinding\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractConductingEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TapChanger\" type=\"tTapChanger\">\n                          <xs:unique name=\"uniqueLNodeInTapChanger\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInLTC\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"NeutralPoint\" type=\"tTerminal\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForPTW\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForPTW\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"PTW\" form=\"unqualified\" name=\"type\"\n                      type=\"tTransformerWindingEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTapChanger\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubEquipment\" type=\"scl:tSubEquipment\">\n                          <xs:unique name=\"uniqueLNodeInSubEquipmentLTC\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInLTCSubEquipment\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForLTC\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForLTC\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"LTC\" form=\"unqualified\" name=\"type\" type=\"xs:Name\"\n                      use=\"required\"/>\n                  <xs:attributeGroup ref=\"agVirtual\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGeneralEquipment\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipment\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqFunction\" type=\"scl:tEqFunction\">\n                          <xs:unique name=\"uniqueLNodeInFuncForGE\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFuncForGE\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tGeneralEquipmentEnum\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubstation\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"VoltageLevel\"\n                          type=\"tVoltageLevel\">\n                          <xs:unique name=\"uniqueChildNameInVoltageLevel\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueLNodeInVoltageLevel\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Function\"\n                          type=\"tFunction\">\n                          <xs:unique name=\"uniqueLNodeInFunctionSS\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInSubstationFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tVoltageLevel\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Voltage\" type=\"tVoltage\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"Bay\" type=\"tBay\">\n                          <xs:unique name=\"uniqueChildNameInBay\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueLNodeInBay\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Function\"\n                          type=\"scl:tFunction\">\n                          <xs:unique name=\"uniqueLNodeInFunctionVL\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInVoltageLevelFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"nomFreq\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:decimal\">\n                              <xs:minInclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute form=\"unqualified\" name=\"numPhases\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedByte\">\n                              <xs:minExclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBay\">\n          <xs:complexContent>\n              <xs:extension base=\"tEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConductingEquipment\" type=\"tConductingEquipment\">\n                          <xs:unique name=\"uniqueLNodeInConductingEquipment\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInCE\">\n                              <xs:selector xpath=\"./scl:SubEquipment | ./scl:EqFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConnectivityNode\" type=\"tConnectivityNode\">\n                          <xs:unique name=\"uniqueLNodeInConnectivityNode\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Function\"\n                          type=\"scl:tFunction\">\n                          <xs:unique name=\"uniqueLNodeInFunctionB\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInBayFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLNode\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute default=\"None\" form=\"unqualified\" name=\"iedName\" type=\"tIEDNameOrNone\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"ldInst\" type=\"tLDInstOrEmpty\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tPrefix\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"lnInst\" type=\"tLNInstOrEmpty\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnType\" type=\"tName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubFunction\" type=\"tSubFunction\">\n                          <xs:unique name=\"uniqueLNodeInSubFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInSubFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\">\n                          <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInGEFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConductingEquipment\" type=\"tConductingEquipment\">\n                          <xs:unique name=\"uniqueLNodeInConductingEquipmentOfFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInCondEq\">\n                              <xs:selector xpath=\"./scl:SubEquipment | ./scl:EqFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\">\n                          <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfSubFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInGESubFunc\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConductingEquipment\" type=\"scl:tConductingEquipment\">\n                          <xs:unique name=\"uniqueLNodeInConductingEquipmentOfSubFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueSubEquipmentSubFunc\">\n                              <xs:selector xpath=\"./scl:SubEquipment\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SubFunction\" type=\"scl:tSubFunction\">\n                          <xs:unique name=\"uniqueLNodeInSubSubFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueSubSubFunc\">\n                              <xs:selector xpath=\"./scl:SubFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tAbstractEqFuncSubFunc\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\">\n                          <xs:unique name=\"uniqueLNodeInGeneralEquipmentOfFuncForEquipment\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInGEFuncForEquipment\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"EqSubFunction\" type=\"scl:tEqSubFunction\">\n                          <xs:unique name=\"uniqueLNodeInSubFuncForEquipment\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueSubFuncForEquipment\">\n                              <xs:selector xpath=\"./scl:EqSubFunction\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEqFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractEqFuncSubFunc\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEqSubFunction\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractEqFuncSubFunc\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConnectivityNode\">\n          <xs:complexContent>\n              <xs:extension base=\"tLNodeContainer\">\n                  <xs:attribute form=\"unqualified\" name=\"pathName\" type=\"tConnectivityNodeReference\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTerminal\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"name\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"connectivityNode\"\n                      type=\"tConnectivityNodeReference\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"processName\" type=\"tProcessName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"substationName\" type=\"tName\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"voltageLevelName\" type=\"tName\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"bayName\" type=\"tName\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cNodeName\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lineName\" type=\"tName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tGeneralEquipmentContainer\">\n          <xs:complexContent>\n              <xs:extension base=\"tPowerSystemResource\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GeneralEquipment\" type=\"tGeneralEquipment\">\n                          <xs:unique name=\"uniqueLNodeInGeneralEquipment2\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInGE2\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Function\"\n                          type=\"tFunction\">\n                          <xs:unique name=\"uniqueLNodeInFunction\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueChildNameInFunction\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLine\">\n          <xs:complexContent>\n              <xs:extension base=\"tGeneralEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Voltage\" type=\"tVoltage\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"ConductingEquipment\"\n                          type=\"scl:tConductingEquipment\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConnectivityNode\" type=\"scl:tConnectivityNode\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tLineType\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"nomFreq\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:decimal\">\n                              <xs:minInclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute form=\"unqualified\" name=\"numPhases\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedByte\">\n                              <xs:minExclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tProcess\">\n          <xs:complexContent>\n              <xs:extension base=\"tGeneralEquipmentContainer\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ConductingEquipment\" type=\"scl:tConductingEquipment\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"Substation\" type=\"tSubstation\">\n                          <xs:unique name=\"uniqueChildNameInProcessSubstation\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueLNodeInProcessSubstation\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Line\"\n                          type=\"tLine\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Process\"\n                          type=\"tProcess\">\n                          <xs:unique name=\"uniqueChildNameInSubProcess\">\n                              <xs:selector xpath=\"./*\"/>\n                              <xs:field xpath=\"@name\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueLNodeInSubProcess\">\n                              <xs:selector xpath=\"./scl:LNode\"/>\n                              <xs:field xpath=\"@lnInst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tProcessType\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:element name=\"Substation\" type=\"tSubstation\">\n          <xs:unique name=\"uniqueChildNameInSubstation\">\n              <xs:selector xpath=\"./*\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLNodeInSubstation\">\n              <xs:selector xpath=\"./scl:LNode\"/>\n              <xs:field xpath=\"@lnInst\"/>\n              <xs:field xpath=\"@lnClass\"/>\n              <xs:field xpath=\"@iedName\"/>\n              <xs:field xpath=\"@ldInst\"/>\n              <xs:field xpath=\"@prefix\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:element name=\"Process\" type=\"tProcess\">\n          <xs:unique name=\"uniqueChildNameInProcess\">\n              <xs:selector xpath=\"./*\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLNodeInProcess\">\n              <xs:selector xpath=\"./scl:LNode\"/>\n              <xs:field xpath=\"@lnInst\"/>\n              <xs:field xpath=\"@lnClass\"/>\n              <xs:field xpath=\"@iedName\"/>\n              <xs:field xpath=\"@ldInst\"/>\n              <xs:field xpath=\"@prefix\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:element name=\"Line\" type=\"tLine\">\n          <xs:unique name=\"uniqueChildNameInLine\">\n              <xs:selector xpath=\"./*\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLNodeInLine\">\n              <xs:selector xpath=\"./scl:LNode\"/>\n              <xs:field xpath=\"@lnInst\"/>\n              <xs:field xpath=\"@lnClass\"/>\n              <xs:field xpath=\"@iedName\"/>\n              <xs:field xpath=\"@ldInst\"/>\n              <xs:field xpath=\"@prefix\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:attributeGroup name=\"agAuthentication\">\n          <xs:attribute default=\"true\" form=\"unqualified\" name=\"none\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"password\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"weak\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"strong\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"certificate\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agSmvOpts\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"refreshTime\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute fixed=\"true\" form=\"unqualified\" name=\"sampleSynchronized\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"sampleRate\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataSet\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"security\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"timestamp\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"synchSourceId\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agOptFields\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"seqNum\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"timeStamp\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataSet\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"reasonCode\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dataRef\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"entryID\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"configRef\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"true\" form=\"unqualified\" name=\"bufOvfl\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agLDRef\">\n          <xs:attributeGroup ref=\"scl:agDesc\"/>\n          <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tIEDName\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\" use=\"required\"/>\n      </xs:attributeGroup>\n      <xs:attributeGroup name=\"agLNRef\">\n          <xs:attributeGroup ref=\"agLDRef\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tPrefix\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tLNInstOrEmpty\" use=\"required\"/>\n      </xs:attributeGroup>\n      <xs:complexType name=\"tIED\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Services\" type=\"tServices\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"AccessPoint\"\n                          type=\"tAccessPoint\">\n                          <xs:unique name=\"uniqueLNInAccessPoint\">\n                              <xs:selector xpath=\"./scl:LN\"/>\n                              <xs:field xpath=\"@inst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"KDC\"\n                          type=\"tKDC\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tIEDName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"manufacturer\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"configVersion\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"2003\" form=\"unqualified\" name=\"originalSclVersion\"\n                      type=\"tSclVersion\" use=\"optional\"/>\n                  <xs:attribute default=\"A\" form=\"unqualified\" name=\"originalSclRevision\"\n                      type=\"tSclRevision\" use=\"optional\"/>\n                  <xs:attribute default=\"1\" form=\"unqualified\" name=\"originalSclRelease\"\n                      type=\"tSclRelease\" use=\"optional\"/>\n                  <xs:attribute default=\"full\" form=\"unqualified\" name=\"engRight\" type=\"tRightEnum\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"owner\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServices\">\n          <xs:all>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DynAssociation\"\n                  type=\"scl:tServiceWithOptionalMax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SettingGroups\"\n                  type=\"scl:tSettingGroups\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDirectory\" type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDataObjectDefinition\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DataObjectDirectory\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetDataSetValue\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SetDataSetValue\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DataSetDirectory\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfDataSet\"\n                  type=\"scl:tServiceForConfDataSet\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"DynDataSet\"\n                  type=\"scl:tServiceWithMaxAndMaxAttributes\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ReadWrite\" type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TimerActivatedControl\"\n                  type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfReportControl\"\n                  type=\"scl:tServiceConfReportControl\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GetCBValues\" type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfLogControl\"\n                  type=\"scl:tServiceWithMaxNonZero\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ReportSettings\"\n                  type=\"scl:tReportSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"LogSettings\" type=\"scl:tLogSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSESettings\" type=\"scl:tGSESettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SMVSettings\" type=\"scl:tSMVSettings\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSEDir\" type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GOOSE\" type=\"scl:tGOOSEcapabilities\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"GSSE\" type=\"scl:tServiceWithMax\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SMVsc\" type=\"scl:tSMVsc\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"FileHandling\" type=\"scl:tFileHandling\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfLNs\" type=\"scl:tConfLNs\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ClientServices\"\n                  type=\"scl:tClientServices\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfLdName\" type=\"scl:tServiceYesNo\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SupSubscription\"\n                  type=\"scl:tSupSubscription\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfSigRef\"\n                  type=\"scl:tServiceWithMaxNonZero\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ValueHandling\"\n                  type=\"scl:tValueHandling\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"RedProt\" type=\"scl:tRedProt\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TimeSyncProt\" type=\"scl:tTimeSyncProt\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"CommProt\" type=\"scl:tCommProt\"/>\n          </xs:all>\n          <xs:attribute default=\"32\" form=\"unqualified\" name=\"nameLength\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:token\">\n                      <xs:pattern value=\"32\"/>\n                      <xs:pattern value=\"64\"/>\n                      <xs:pattern value=\"6[5-9]\"/>\n                      <xs:pattern value=\"[7-9]\\\\d\"/>\n                      <xs:pattern value=\"[1-9]\\\\d\\\\d+\"/>\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n      </xs:complexType>\n      <xs:complexType name=\"tAccessPoint\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:choice minOccurs=\"0\">\n                          <xs:element form=\"qualified\" name=\"Server\" type=\"scl:tServer\">\n                              <xs:unique name=\"uniqueAssociationInServer\">\n                                  <xs:selector xpath=\"./scl:Association\"/>\n                                  <xs:field xpath=\"@associationID\"/>\n                              </xs:unique>\n                          </xs:element>\n                          <xs:element maxOccurs=\"unbounded\" ref=\"scl:LN\"/>\n                          <xs:element form=\"qualified\" name=\"ServerAt\" type=\"tServerAt\"/>\n                      </xs:choice>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Services\" type=\"scl:tServices\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"7\" minOccurs=\"0\" name=\"GOOSESecurity\"\n                          type=\"tCertificate\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"7\" minOccurs=\"0\" name=\"SMVSecurity\"\n                          type=\"tCertificate\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAccessPointName\" use=\"required\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"router\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"clock\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"kdc\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tCertificate\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"Subject\" type=\"tCert\"/>\n                      <xs:element form=\"qualified\" name=\"IssuerName\" type=\"tCert\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"xferNumber\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"serialNumber\" use=\"required\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:normalizedString\">\n                              <xs:minLength value=\"1\"/>\n                              <xs:pattern value=\"[0-9]+\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tCert\">\n          <xs:attribute form=\"unqualified\" name=\"commonName\" use=\"required\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:normalizedString\">\n                      <xs:minLength value=\"4\"/>\n                      <xs:pattern value=\"none\"/>\n                      <xs:pattern value=\"CN=.+\"/>\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n          <xs:attribute form=\"unqualified\" name=\"idHierarchy\" use=\"required\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:normalizedString\">\n                      <xs:minLength value=\"1\"/>\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n      </xs:complexType>\n      <xs:complexType name=\"tServerAt\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"apName\" type=\"tAccessPointName\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServer\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"Authentication\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agAuthentication\"/>\n                          </xs:complexType>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"LDevice\"\n                          type=\"tLDevice\">\n                          <xs:unique name=\"uniqueLNInLDevice\">\n                              <xs:selector xpath=\"./scl:LN\"/>\n                              <xs:field xpath=\"@inst\"/>\n                              <xs:field xpath=\"@lnClass\"/>\n                              <xs:field xpath=\"@prefix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"Association\" type=\"tAssociation\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"30\" form=\"unqualified\" name=\"timeout\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLDevice\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element ref=\"LN0\"/>\n                      <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"LN\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"AccessControl\"\n                          type=\"tAccessControl\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"inst\" type=\"tLDInst\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ldName\" type=\"tLDName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType mixed=\"true\" name=\"tAccessControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyContentFromOtherNamespace\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tAssociation\">\n          <xs:attributeGroup ref=\"agLNRef\"/>\n          <xs:attribute form=\"unqualified\" name=\"kind\" type=\"tAssociationKindEnum\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"associationID\" type=\"tAssociationID\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:element name=\"LN0\">\n          <xs:complexType>\n              <xs:complexContent>\n                  <xs:extension base=\"tLN0\"/>\n              </xs:complexContent>\n          </xs:complexType>\n          <xs:unique name=\"uniqueReportControlInLN0\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogControlInLN0\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueGSEControlInLN0\">\n              <xs:selector xpath=\"./scl:GSEControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueSampledValueControlInLN0\">\n              <xs:selector xpath=\"./scl:SampledValueControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:DataSet\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DataSetReportLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetLogLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetGSELN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:GSEControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetSVLN0\" refer=\"DataSetKeyLN0\">\n              <xs:selector xpath=\"./scl:SampledValueControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:unique name=\"uniqueDOIinLN0\">\n              <xs:selector xpath=\"./scl:DOI\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogInLN0\">\n              <xs:selector xpath=\"./scl:Log\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:element name=\"LN\" type=\"tLN\">\n          <xs:unique name=\"uniqueReportControlInLN\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogControlInLN\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:key name=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:DataSet\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DataSetReport\" refer=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:ReportControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DataSetLog\" refer=\"DataSetKeyInLN\">\n              <xs:selector xpath=\"./scl:LogControl\"/>\n              <xs:field xpath=\"@datSet\"/>\n          </xs:keyref>\n          <xs:unique name=\"uniqueDOIinLN\">\n              <xs:selector xpath=\"./scl:DOI\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n          <xs:unique name=\"uniqueLogInLN\">\n              <xs:selector xpath=\"./scl:Log\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:complexType abstract=\"true\" name=\"tAnyLN\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DataSet\"\n                          type=\"tDataSet\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"ReportControl\" type=\"tReportControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"LogControl\" type=\"tLogControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DOI\"\n                          type=\"tDOI\">\n                          <xs:unique name=\"uniqueSDI_DAIinDOI\">\n                              <xs:selector xpath=\"./scl:DAI | ./scl:SDI\"/>\n                              <xs:field xpath=\"@name\"/>\n                              <xs:field xpath=\"@ix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Inputs\" type=\"tInputs\">\n                          <!--<xs:unique name=\"uniqueExtRefInInputs\">\n                <xs:selector xpath=\"./scl:ExtRef\"/>\n                <xs:field xpath=\"@iedName\"/>\n                <xs:field xpath=\"@ldInst\"/>\n                <xs:field xpath=\"@prefix\"/>\n                <xs:field xpath=\"@lnClass\"/>\n                <xs:field xpath=\"@lnInst\"/>\n                <xs:field xpath=\"@doName\"/>\n                <xs:field xpath=\"@daName\"/>\n                <xs:field xpath=\"@intAddr\"/>\n              </xs:unique>-->\n                      </xs:element>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Log\"\n                          type=\"scl:tLog\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"lnType\" type=\"tName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLN\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyLN\">\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tPrefix\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"inst\" type=\"tLNInst\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLN0\">\n          <xs:complexContent>\n              <xs:extension base=\"tAnyLN\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"GSEControl\" type=\"tGSEControl\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\"\n                          name=\"SampledValueControl\" type=\"tSampledValueControl\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SettingControl\"\n                          type=\"tSettingControl\"/>\n                  </xs:sequence>\n                  <xs:attribute fixed=\"LLN0\" form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\"\n                      use=\"required\"/>\n                  <xs:attribute fixed=\"\" form=\"unqualified\" name=\"inst\" type=\"xs:normalizedString\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDataSet\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:choice maxOccurs=\"unbounded\">\n                      <xs:element form=\"qualified\" name=\"FCDA\" type=\"tFCDA\"/>\n                  </xs:choice>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tDataSetName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tFCDA\">\n          <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\" use=\"optional\"/>\n          <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tPrefix\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tLNInst\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"doName\" type=\"tFullDOName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"daName\" type=\"tFullAttributeName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"fc\" type=\"tFCEnum\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tCBName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"datSet\" type=\"tDataSetName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tControlWithTriggerOpt\">\n          <xs:complexContent>\n              <xs:extension base=\"tControl\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TrgOps\" type=\"tTrgOps\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"intgPd\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tTrgOps\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"qchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dupd\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"period\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"true\" form=\"unqualified\" name=\"gi\" type=\"xs:boolean\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tReportControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithTriggerOpt\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"OptFields\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agOptFields\"/>\n                          </xs:complexType>\n                      </xs:element>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"RptEnabled\" type=\"tRptEnabled\"\n                      />\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"rptID\" type=\"tMessageID\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"confRev\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"buffered\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"bufTime\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"indexed\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tRptEnabled\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"ClientLN\"\n                          type=\"tClientLN\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"1\" form=\"unqualified\" name=\"max\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedInt\">\n                              <xs:minExclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tClientLN\">\n          <xs:attributeGroup ref=\"agLNRef\"/>\n          <xs:attribute form=\"unqualified\" name=\"apRef\" type=\"tAccessPointName\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tLogControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithTriggerOpt\">\n                  <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\" use=\"optional\"/>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"prefix\" type=\"tPrefix\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"LLN0\" form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tLNInst\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"logName\" type=\"tLogName\" use=\"required\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"logEna\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"reasonCode\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"bufTime\" type=\"xs:unsignedInt\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tInputs\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"ExtRef\" type=\"tExtRef\"\n                      />\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tExtRef\">\n          <xs:attributeGroup ref=\"scl:agDesc\"/>\n          <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tIEDNameOrRelative\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"prefix\" type=\"tPrefix\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tLNInst\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"doName\" type=\"tFullDOName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"daName\" type=\"tFullAttributeName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"intAddr\" type=\"xs:normalizedString\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"serviceType\" type=\"tServiceType\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"srcLDInst\" type=\"tLDInst\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"srcPrefix\" type=\"tPrefix\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"srcLNClass\" type=\"tLNClassEnum\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"srcLNInst\" type=\"tLNInst\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"srcCBName\" type=\"tCBName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"pServT\" type=\"tServiceType\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"pLN\" type=\"tLNClassEnum\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"pDO\" type=\"tFullDOName\" use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"pDA\" type=\"tFullAttributeName\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tLog\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tLogName\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tControlWithIEDName\">\n          <xs:complexContent>\n              <xs:extension base=\"tControl\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"IEDName\">\n                          <xs:complexType>\n                              <xs:simpleContent>\n                                  <xs:extension base=\"tIEDName\">\n                                      <xs:attribute form=\"unqualified\" name=\"apRef\"\n                                          type=\"tAccessPointName\" use=\"optional\"/>\n                                      <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\"\n                                          use=\"optional\"/>\n                                      <xs:attribute form=\"unqualified\" name=\"prefix\" type=\"tPrefix\"\n                                          use=\"optional\"/>\n                                      <xs:attribute form=\"unqualified\" name=\"lnClass\"\n                                          type=\"tLNClassEnum\" use=\"optional\"/>\n                                      <xs:attribute form=\"unqualified\" name=\"lnInst\" type=\"tLNInst\"\n                                          use=\"optional\"/>\n                                  </xs:extension>\n                              </xs:simpleContent>\n                          </xs:complexType>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"confRev\" type=\"xs:unsignedInt\" use=\"optional\"\n                  />\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tProtocol\">\n          <xs:simpleContent>\n              <xs:extension base=\"xs:normalizedString\">\n                  <xs:attribute fixed=\"true\" form=\"unqualified\" name=\"mustUnderstand\"\n                      type=\"xs:boolean\" use=\"required\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGSEControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithIEDName\">\n                  <xs:sequence>\n                      <xs:element fixed=\"R-GOOSE\" form=\"qualified\" minOccurs=\"0\" name=\"Protocol\"\n                          type=\"tProtocol\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"GOOSE\" form=\"unqualified\" name=\"type\"\n                      type=\"tGSEControlTypeEnum\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"appID\" type=\"tMessageID\" use=\"required\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixedOffs\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"None\" form=\"unqualified\" name=\"securityEnable\"\n                      type=\"scl:tPredefinedTypeOfSecurityEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSampledValueControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlWithIEDName\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" name=\"SmvOpts\">\n                          <xs:complexType>\n                              <xs:attributeGroup ref=\"agSmvOpts\"/>\n                          </xs:complexType>\n                      </xs:element>\n                      <xs:element fixed=\"R-SV\" form=\"qualified\" minOccurs=\"0\" name=\"Protocol\"\n                          type=\"tProtocol\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"smvID\" type=\"tMessageID\" use=\"required\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"multicast\" type=\"xs:boolean\"/>\n                  <xs:attribute form=\"unqualified\" name=\"smpRate\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"nofASDU\" type=\"xs:unsignedInt\" use=\"required\"/>\n                  <xs:attribute default=\"SmpPerPeriod\" form=\"unqualified\" name=\"smpMod\" type=\"tSmpMod\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"None\" form=\"unqualified\" name=\"securityEnable\"\n                      type=\"tPredefinedTypeOfSecurityEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSettingControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"numOfSGs\" use=\"required\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedInt\">\n                              <xs:minInclusive value=\"1\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute default=\"1\" form=\"unqualified\" name=\"actSG\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedInt\">\n                              <xs:minInclusive value=\"1\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute form=\"unqualified\" name=\"resvTms\" type=\"xs:unsignedShort\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDOI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDI\" type=\"tSDI\">\n                          <xs:unique name=\"uniqueSDI_DAIinSDI\">\n                              <xs:selector xpath=\"./scl:DAI | ./scl:SDI\"/>\n                              <xs:field xpath=\"@name\"/>\n                              <xs:field xpath=\"@ix\"/>\n                          </xs:unique>\n                      </xs:element>\n                      <xs:element form=\"qualified\" name=\"DAI\" type=\"tDAI\"/>\n                  </xs:choice>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tDataName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"accessControl\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSDI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDI\" type=\"tSDI\"/>\n                      <xs:element form=\"qualified\" name=\"DAI\" type=\"tDAI\"/>\n                  </xs:choice>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"sAddr\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDAI\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Val\"\n                          type=\"tVal\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"sAddr\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"valKind\" type=\"tValKindEnum\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"ix\" type=\"xs:unsignedInt\" use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"valImport\" type=\"xs:boolean\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceYesNo\"/>\n      <xs:complexType name=\"tServiceWithOptionalMax\">\n          <xs:attribute form=\"unqualified\" name=\"max\" type=\"xs:unsignedInt\" use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMax\">\n          <xs:attribute form=\"unqualified\" name=\"max\" type=\"xs:unsignedInt\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxNonZero\">\n          <xs:attribute form=\"unqualified\" name=\"max\" use=\"required\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:unsignedInt\">\n                      <xs:minExclusive value=\"0\"/>\n                  </xs:restriction>\n              </xs:simpleType>\n          </xs:attribute>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceConfReportControl\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"both\" form=\"unqualified\" name=\"bufMode\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:Name\">\n                              <xs:enumeration value=\"unbuffered\"/>\n                              <xs:enumeration value=\"buffered\"/>\n                              <xs:enumeration value=\"both\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"bufConf\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"maxBuf\" type=\"xs:unsignedInt\" use=\"optional\"\n                  />\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndMaxAttributes\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute form=\"unqualified\" name=\"maxAttributes\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:unsignedInt\">\n                              <xs:minExclusive value=\"0\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceWithMaxAndModify\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"modify\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tServiceForConfDataSet\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMaxAndMaxAttributes\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"modify\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tClientServices\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"TimeSyncProt\" type=\"scl:tTimeSyncProt\"/>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"McSecurity\" type=\"scl:tMcSecurity\"/>\n          </xs:sequence>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"goose\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"gsse\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"bufReport\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"unbufReport\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"readLog\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"sv\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"supportsLdName\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute form=\"unqualified\" name=\"maxAttributes\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:unsignedInt\"/>\n              </xs:simpleType>\n          </xs:attribute>\n          <xs:attribute form=\"unqualified\" name=\"maxReports\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:unsignedInt\"/>\n              </xs:simpleType>\n          </xs:attribute>\n          <xs:attribute form=\"unqualified\" name=\"maxGOOSE\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:unsignedInt\"/>\n              </xs:simpleType>\n          </xs:attribute>\n          <xs:attribute form=\"unqualified\" name=\"maxSMV\" use=\"optional\">\n              <xs:simpleType>\n                  <xs:restriction base=\"xs:unsignedInt\"/>\n              </xs:simpleType>\n          </xs:attribute>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"rGOOSE\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"rSV\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"noIctBinding\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tServiceSettings\">\n          <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"cbName\"\n              type=\"tServiceSettingsNoDynEnum\" use=\"optional\"/>\n          <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"datSet\" type=\"tServiceSettingsEnum\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tReportSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"rptID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"optFields\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"bufTime\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"trgOps\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"intgPd\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"resvTms\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"owner\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLogSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"logEna\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"trgOps\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"intgPd\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGSESettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"McSecurity\"\n                          type=\"scl:tMcSecurity\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"appID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"dataLabel\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"kdaParticipant\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSMVSettings\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceSettings\">\n                  <xs:sequence>\n                      <xs:choice maxOccurs=\"unbounded\">\n                          <xs:element form=\"qualified\" name=\"SmpRate\">\n                              <xs:simpleType>\n                                  <xs:restriction base=\"xs:unsignedInt\">\n                                      <xs:minExclusive value=\"0\"/>\n                                  </xs:restriction>\n                              </xs:simpleType>\n                          </xs:element>\n                          <xs:element form=\"qualified\" name=\"SamplesPerSec\">\n                              <xs:simpleType>\n                                  <xs:restriction base=\"xs:unsignedInt\">\n                                      <xs:minExclusive value=\"0\"/>\n                                  </xs:restriction>\n                              </xs:simpleType>\n                          </xs:element>\n                          <xs:element form=\"qualified\" name=\"SecPerSamples\">\n                              <xs:simpleType>\n                                  <xs:restriction base=\"xs:unsignedInt\">\n                                      <xs:minExclusive value=\"0\"/>\n                                  </xs:restriction>\n                              </xs:simpleType>\n                          </xs:element>\n                      </xs:choice>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"McSecurity\"\n                          type=\"scl:tMcSecurity\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"svID\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"optFields\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"smpRate\"\n                      type=\"tServiceSettingsEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"samplesPerSec\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"pdcTimeStamp\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"synchSrcId\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"Fix\" form=\"unqualified\" name=\"nofASDU\"\n                      type=\"tServiceSettingsNoDynEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"kdaParticipant\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConfLNs\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixPrefix\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixLnInst\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tValueHandling\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"setToRO\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tFileHandling\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceYesNo\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"mms\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"ftp\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"ftps\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tGOOSEcapabilities\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"fixedOffs\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"goose\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"rGOOSE\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tRedProt\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"hsr\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"prp\" type=\"xs:boolean\" use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"rstp\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tTimeSyncProt\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceYesNo\">\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"sntp\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"iec61850_9_3\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"c37_238\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"other\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSMVsc\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceWithMax\">\n                  <xs:attribute default=\"multicast\" form=\"unqualified\" name=\"delivery\"\n                      type=\"tSMVDeliveryEnum\" use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"deliveryConf\"\n                      type=\"xs:boolean\" use=\"optional\"/>\n                  <xs:attribute default=\"true\" form=\"unqualified\" name=\"sv\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"rSV\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSupSubscription\">\n          <xs:attribute form=\"unqualified\" name=\"maxGo\" type=\"xs:unsignedInt\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"maxSv\" type=\"xs:unsignedInt\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tCommProt\">\n          <xs:complexContent>\n              <xs:extension base=\"tServiceYesNo\">\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"ipv6\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tMcSecurity\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"signature\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"encryption\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tKDC\">\n          <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tIEDName\" use=\"required\"/>\n          <xs:attribute form=\"unqualified\" name=\"apName\" type=\"tAccessPointName\" use=\"required\"/>\n      </xs:complexType>\n      <xs:complexType name=\"tSettingGroups\">\n          <xs:all>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"SGEdit\">\n                  <xs:complexType>\n                      <xs:complexContent>\n                          <xs:extension base=\"tServiceYesNo\">\n                              <xs:attribute default=\"false\" form=\"unqualified\" name=\"resvTms\"\n                                  type=\"xs:boolean\" use=\"optional\"/>\n                          </xs:extension>\n                      </xs:complexContent>\n                  </xs:complexType>\n              </xs:element>\n              <xs:element form=\"qualified\" minOccurs=\"0\" name=\"ConfSG\">\n                  <xs:complexType>\n                      <xs:complexContent>\n                          <xs:extension base=\"tServiceYesNo\">\n                              <xs:attribute default=\"false\" form=\"unqualified\" name=\"resvTms\"\n                                  type=\"xs:boolean\" use=\"optional\"/>\n                          </xs:extension>\n                      </xs:complexContent>\n                  </xs:complexType>\n              </xs:element>\n          </xs:all>\n      </xs:complexType>\n      <xs:element name=\"IED\" type=\"tIED\">\n          <xs:key name=\"LDeviceInIEDKey\">\n              <xs:selector xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice\"/>\n              <xs:field xpath=\"@inst\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2LDeviceInDataSetForFCDAinLN\" refer=\"LDeviceInIEDKey\">\n              <xs:selector\n                  xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice/scl:LN/scl:DataSet/scl:FCDA\"/>\n              <xs:field xpath=\"@ldInst\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2LDeviceInDataSetForFCDAinLN0\" refer=\"LDeviceInIEDKey\">\n              <xs:selector\n                  xpath=\"./scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0/scl:DataSet/scl:FCDA\"/>\n              <xs:field xpath=\"@ldInst\"/>\n          </xs:keyref>\n          <xs:key name=\"AccessPointInIEDKey\">\n              <xs:selector xpath=\"./scl:AccessPoint\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:keyref name=\"ServerAtRef2AccessPoint\" refer=\"AccessPointInIEDKey\">\n              <xs:selector xpath=\"./scl:AccessPoint/scl:ServerAt\"/>\n              <xs:field xpath=\"@apName\"/>\n          </xs:keyref>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:complexType abstract=\"true\" name=\"tControlBlock\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Address\" type=\"tAddress\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"ldInst\" type=\"tLDInst\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cbName\" type=\"tCBName\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tCommunication\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"SubNetwork\"\n                          type=\"tSubNetwork\">\n                          <xs:unique name=\"uniqueConnectedAP\">\n                              <xs:selector xpath=\"./scl:ConnectedAP\"/>\n                              <xs:field xpath=\"@iedName\"/>\n                              <xs:field xpath=\"@apName\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSubNetwork\">\n          <xs:complexContent>\n              <xs:extension base=\"tNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"BitRate\"\n                          type=\"tBitRateInMbPerSec\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"ConnectedAP\"\n                          type=\"tConnectedAP\">\n                          <xs:unique name=\"uniqueGSEinConnectedAP\">\n                              <xs:selector xpath=\"./scl:GSE\"/>\n                              <xs:field xpath=\"@cbName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                          </xs:unique>\n                          <xs:unique name=\"uniqueSMVinConnectedAP\">\n                              <xs:selector xpath=\"./scl:SMV\"/>\n                              <xs:field xpath=\"@cbName\"/>\n                              <xs:field xpath=\"@ldInst\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:normalizedString\">\n                              <xs:minLength value=\"1\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tConnectedAP\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"Address\" type=\"tAddress\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"GSE\"\n                          type=\"tGSE\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"SMV\"\n                          type=\"tSMV\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"PhysConn\"\n                          type=\"tPhysConn\">\n                          <xs:unique name=\"uniquePTypeInPhysConn\">\n                              <xs:selector xpath=\"./scl:P\"/>\n                              <xs:field xpath=\"@type\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"iedName\" type=\"tIEDName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"apName\" type=\"tAccessPointName\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"redProt\" type=\"scl:tRedProtEnum\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tAddress\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"P\" type=\"tP\"/>\n          </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"tGSE\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlBlock\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"MinTime\"\n                          type=\"tDurationInMilliSec\"/>\n                      <xs:element form=\"qualified\" minOccurs=\"0\" name=\"MaxTime\"\n                          type=\"tDurationInMilliSec\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSMV\">\n          <xs:complexContent>\n              <xs:extension base=\"tControlBlock\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tPhysConn\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"P\"\n                          type=\"tP_PhysConn\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tPhysConnTypeEnum\" use=\"required\"\n                  />\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_PhysConn\">\n          <xs:simpleContent>\n              <xs:extension base=\"tPAddr\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tPTypePhysConnEnum\"\n                      use=\"required\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP\">\n          <xs:simpleContent>\n              <xs:extension base=\"tPAddr\">\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tP_IPbase\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern id=\"IPv4\"\n                      value=\"([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])\"\n                  />\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPbase\">\n                  <xs:attribute fixed=\"IP\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-SUBNET\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPbase\">\n                  <xs:attribute fixed=\"IP-SUBNET\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-GATEWAY\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPbase\">\n                  <xs:attribute fixed=\"IP-GATEWAY\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tP_IPv6base\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern id=\"IPv6\" value=\"([0-9a-f]{1,4}:){7}[0-9a-f]{1,4}\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPv6base\">\n                  <xs:attribute fixed=\"IPv6\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6-SUBNET\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern id=\"IPv6_Subnet\" value=\"/[1-9]|/[1-9][0-9]|/1[0-1][0-9]|/12[0-7]\"/>\n                  <xs:attribute fixed=\"IPv6-SUBNET\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6-GATEWAY\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPv6base\">\n                  <xs:attribute fixed=\"IPv6-GATEWAY\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_DNSName\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"\\\\S*\"/>\n                  <xs:attribute fixed=\"DNSName\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6FlowLabel\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-9a-fA-F]{1,5}\"/>\n                  <xs:attribute fixed=\"IPv6FlowLabel\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-NSAP\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"40\"/>\n                  <xs:pattern value=\"[0-9A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-NSAP\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-TSEL\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"8\"/>\n                  <xs:pattern value=\"[0-9A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-TSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-SSEL\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"16\"/>\n                  <xs:pattern value=\"[0-9A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-SSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-PSEL\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"16\"/>\n                  <xs:pattern value=\"[0-9A-F]+\"/>\n                  <xs:attribute fixed=\"OSI-PSEL\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AP-Title\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-9,]+\"/>\n                  <xs:attribute fixed=\"OSI-AP-Title\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AP-Invoke\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"[0-9]+\"/>\n                  <xs:attribute fixed=\"OSI-AP-Invoke\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AE-Qualifier\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"[0-9]+\"/>\n                  <xs:attribute fixed=\"OSI-AE-Qualifier\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_OSI-AE-Invoke\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"5\"/>\n                  <xs:pattern value=\"[0-9]+\"/>\n                  <xs:attribute fixed=\"OSI-AE-Invoke\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_MAC-Address\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern\n                      value=\"[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\\\\-[0-9A-F]{2}\"/>\n                  <xs:attribute fixed=\"MAC-Address\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_APPID\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-9A-F]{4}\"/>\n                  <xs:attribute fixed=\"APPID\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_VLAN-PRIORITY\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-7]\"/>\n                  <xs:attribute fixed=\"VLAN-PRIORITY\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_VLAN-ID\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"[0-9A-F]{3}\"/>\n                  <xs:attribute fixed=\"VLAN-ID\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType abstract=\"true\" name=\"tP_Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern value=\"0\"/>\n                  <xs:pattern value=\"[1-9][0-9]{0,3}\"/>\n                  <xs:pattern value=\"[1-5][0-9]{4,4}\"/>\n                  <xs:pattern value=\"6[0-4][0-9]{3,3}\"/>\n                  <xs:pattern value=\"65[0-4][0-9]{2,2}\"/>\n                  <xs:pattern value=\"655[0-2][0-9]\"/>\n                  <xs:pattern value=\"6553[0-5]\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_SNTP-Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_Port\">\n                  <xs:attribute fixed=\"SNTP-Port\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_MMS-Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_Port\">\n                  <xs:attribute fixed=\"MMS-Port\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_UDP-Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_Port\">\n                  <xs:attribute fixed=\"IP-UDP-PORT\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_TCP-Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_Port\">\n                  <xs:attribute fixed=\"IP-TCP-PORT\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6ClassOfTraffic\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern id=\"Values0-255\" value=\"[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]\"/>\n                  <xs:attribute fixed=\"IPv6ClassOfTraffic\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_C37-118-IP-Port\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:pattern id=\"Values1025-65535\"\n                      value=\"102[5-9]|10[3-9][0-9]|1[1-9][0-9][0-9]|[2-9][0-9]{3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]\"/>\n                  <xs:attribute fixed=\"C37-118-IP-Port\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IPv6-IGMPv3Src\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPv6base\">\n                  <xs:attribute fixed=\"IPv6-IGMPv3Src\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-IGMPv3Src\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP_IPbase\">\n                  <xs:attribute fixed=\"IP-IGMPv3Src\" form=\"unqualified\" name=\"type\" type=\"tPTypeEnum\"\n                      use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tP_IP-ClassOfTraffic\">\n          <xs:simpleContent>\n              <xs:restriction base=\"tP\">\n                  <xs:maxLength value=\"2\"/>\n                  <xs:pattern value=\"[0-9A-F]+\"/>\n                  <xs:attribute fixed=\"IP-ClassOfTraffic\" form=\"unqualified\" name=\"type\"\n                      type=\"tPTypeEnum\" use=\"required\"/>\n              </xs:restriction>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:element name=\"Communication\" type=\"tCommunication\">\n          <xs:unique name=\"uniqueSubNetwork\">\n              <xs:selector xpath=\"./scl:SubNetwork\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:unique>\n      </xs:element>\n      <xs:annotation>\n          <xs:documentation xml:lang=\"en\">    COPYRIGHT (c) IEC, 2018. This version of this XSD is\n              part of IEC 61850-6:2009/AMD1:2018; see the IEC 61850-6:2009/AMD1:2018 for full legal\n              notices. In case of any differences between the here-below code and the IEC published\n              content, the here-below definition supersedes the IEC publication; it may contain\n              updates. See history files. The whole document has to be taken into account to have a\n              full description of this code component.    See www.iec.ch/CCv1 for copyright details.   </xs:documentation>\n          <xs:documentation xml:lang=\"en\">    SCL schema version \"2007\" revision \"B\" release 4,  for\n              IEC 61850-6 Ed. 2.1. 2018-01-22    Supersedes \"2007B3\".   </xs:documentation>\n      </xs:annotation>\n      <xs:attributeGroup name=\"agDATrgOp\">\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"qchg\" type=\"xs:boolean\"\n              use=\"optional\"/>\n          <xs:attribute default=\"false\" form=\"unqualified\" name=\"dupd\" type=\"xs:boolean\"\n              use=\"optional\"/>\n      </xs:attributeGroup>\n      <xs:complexType abstract=\"true\" name=\"tAbstractDataAttribute\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"Val\"\n                          type=\"tVal\"/>\n                  </xs:sequence>\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tAttributeNameEnum\"\n                      use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"sAddr\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"bType\" type=\"tBasicTypeEnum\" use=\"required\"/>\n                  <xs:attribute default=\"Set\" form=\"unqualified\" name=\"valKind\" type=\"tValKindEnum\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tAnyName\" use=\"optional\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"count\" type=\"tDACount\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"valImport\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tLNodeType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"DO\" type=\"tDO\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"lnClass\" type=\"tLNClassEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDO\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tDataName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"accessControl\" type=\"xs:normalizedString\"\n                      use=\"optional\"/>\n                  <xs:attribute default=\"false\" form=\"unqualified\" name=\"transient\" type=\"xs:boolean\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDOType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:choice maxOccurs=\"unbounded\" minOccurs=\"0\">\n                      <xs:element form=\"qualified\" name=\"SDO\" type=\"tSDO\"/>\n                      <xs:element form=\"qualified\" name=\"DA\" type=\"tDA\">\n                          <xs:unique name=\"uniqueProtNsInDA\">\n                              <xs:selector xpath=\"scl:ProtNs\"/>\n                              <xs:field xpath=\"@type\"/>\n                              <xs:field xpath=\".\"/>\n                          </xs:unique>\n                      </xs:element>\n                  </xs:choice>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n                  <xs:attribute form=\"unqualified\" name=\"cdc\" type=\"tCDCEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tSDO\">\n          <xs:complexContent>\n              <xs:extension base=\"tUnNaming\">\n                  <xs:attribute form=\"unqualified\" name=\"name\" type=\"tSubDataName\" use=\"required\"/>\n                  <xs:attribute form=\"unqualified\" name=\"type\" type=\"tName\" use=\"required\"/>\n                  <xs:attribute default=\"0\" form=\"unqualified\" name=\"count\" type=\"tSDOCount\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDA\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractDataAttribute\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"ProtNs\"\n                          type=\"tProtNs\"/>\n                  </xs:sequence>\n                  <xs:attributeGroup ref=\"agDATrgOp\"/>\n                  <xs:attribute form=\"unqualified\" name=\"fc\" type=\"tFCEnum\" use=\"required\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDAType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"BDA\" type=\"tBDA\"/>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"ProtNs\"\n                          type=\"tProtNs\"/>\n                  </xs:sequence>\n                  <xs:attribute default=\"\" form=\"unqualified\" name=\"iedType\" type=\"tAnyName\"\n                      use=\"optional\"/>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tBDA\">\n          <xs:complexContent>\n              <xs:extension base=\"tAbstractDataAttribute\"/>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEnumType\">\n          <xs:complexContent>\n              <xs:extension base=\"tIDNaming\">\n                  <xs:sequence>\n                      <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"EnumVal\"\n                          type=\"tEnumVal\"/>\n                  </xs:sequence>\n              </xs:extension>\n          </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"tProtNs\">\n          <xs:simpleContent>\n              <xs:extension base=\"tNamespaceName\">\n                  <xs:attribute default=\"8-MMS\" form=\"unqualified\" name=\"type\" use=\"optional\">\n                      <xs:simpleType>\n                          <xs:restriction base=\"xs:normalizedString\">\n                              <xs:minLength value=\"1\"/>\n                          </xs:restriction>\n                      </xs:simpleType>\n                  </xs:attribute>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tEnumVal\">\n          <xs:simpleContent>\n              <xs:extension base=\"tEnumStringValue\">\n                  <xs:attribute form=\"unqualified\" name=\"ord\" type=\"xs:int\" use=\"required\"/>\n                  <xs:attributeGroup ref=\"agDesc\"/>\n              </xs:extension>\n          </xs:simpleContent>\n      </xs:complexType>\n      <xs:complexType name=\"tDataTypeTemplates\">\n          <xs:sequence>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"LNodeType\" type=\"tLNodeType\">\n                  <xs:unique name=\"uniqueDOInLNodeType\">\n                      <xs:selector xpath=\"scl:DO\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" name=\"DOType\" type=\"tDOType\">\n                  <xs:unique name=\"uniqueDAorSDOInDOType\">\n                      <xs:selector xpath=\"./*\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"DAType\"\n                  type=\"tDAType\">\n                  <xs:unique name=\"uniqueBDAInDAType\">\n                      <xs:selector xpath=\"scl:BDA\"/>\n                      <xs:field xpath=\"@name\"/>\n                  </xs:unique>\n                  <xs:unique name=\"uniqueProtNs\">\n                      <xs:selector xpath=\"scl:ProtNs\"/>\n                      <xs:field xpath=\"@type\"/>\n                      <xs:field xpath=\".\"/>\n                  </xs:unique>\n              </xs:element>\n              <xs:element form=\"qualified\" maxOccurs=\"unbounded\" minOccurs=\"0\" name=\"EnumType\"\n                  type=\"tEnumType\">\n                  <xs:unique name=\"uniqueOrdInEnumType\">\n                      <xs:selector xpath=\"scl:EnumVal\"/>\n                      <xs:field xpath=\"@ord\"/>\n                  </xs:unique>\n                  <xs:unique name=\"uniqueEnumValue\">\n                      <xs:selector xpath=\"scl:EnumVal\"/>\n                      <xs:field xpath=\".\"/>\n                  </xs:unique>\n              </xs:element>\n          </xs:sequence>\n      </xs:complexType>\n      <xs:element name=\"DataTypeTemplates\" type=\"tDataTypeTemplates\">\n          <xs:key name=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:DOType\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2DOType\" refer=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:LNodeType/scl:DO\"/>\n              <xs:field xpath=\"@type\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2DOTypeForSDO\" refer=\"DOTypeKey\">\n              <xs:selector xpath=\"scl:DOType/scl:SDO\"/>\n              <xs:field xpath=\"@type\"/>\n          </xs:keyref>\n          <xs:unique name=\"uniqueDTT_ID\">\n              <xs:selector xpath=\"*\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:unique>\n          <xs:key name=\"EnumTypeDATypeKey\">\n              <xs:selector xpath=\"scl:DAType | scl:EnumType\"/>\n              <xs:field xpath=\"@id\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2EnumTypeDAType\" refer=\"scl:EnumTypeDATypeKey\">\n              <xs:selector xpath=\"scl:DOType/scl:DA | scl:DAType/scl:BDA\"/>\n              <xs:field xpath=\"@type\"/>\n          </xs:keyref>\n      </xs:element>\n      <xs:element name=\"SCL\">\n          <xs:complexType>\n              <xs:complexContent>\n                  <xs:extension base=\"tBaseElement\">\n                      <xs:sequence>\n                          <xs:element name=\"Header\" type=\"tHeader\">\n                              <xs:unique name=\"uniqueHitem\">\n                                  <xs:selector xpath=\"./scl:History/scl:Hitem\"/>\n                                  <xs:field xpath=\"@version\"/>\n                                  <xs:field xpath=\"@revision\"/>\n                              </xs:unique>\n                          </xs:element>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"Substation\"/>\n                          <xs:element minOccurs=\"0\" ref=\"Communication\"/>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"IED\"/>\n                          <xs:element minOccurs=\"0\" ref=\"DataTypeTemplates\"/>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"Line\"/>\n                          <xs:element maxOccurs=\"unbounded\" minOccurs=\"0\" ref=\"Process\"/>\n                      </xs:sequence>\n                      <xs:attribute fixed=\"2007\" name=\"version\" type=\"tSclVersion\" use=\"required\"/>\n                      <xs:attribute fixed=\"B\" name=\"revision\" type=\"tSclRevision\" use=\"required\"/>\n                      <xs:attribute fixed=\"4\" name=\"release\" type=\"tSclRelease\" use=\"required\"/>\n                  </xs:extension>\n              </xs:complexContent>\n          </xs:complexType>\n          <xs:key name=\"SubstationKey\">\n              <xs:selector xpath=\"./scl:Substation | ./scl:Process | ./scl:Line\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:key name=\"IEDKey\">\n              <xs:selector xpath=\"./scl:IED\"/>\n              <xs:field xpath=\"@name\"/>\n          </xs:key>\n          <xs:key name=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:DataTypeTemplates/scl:LNodeType\"/>\n              <xs:field xpath=\"@id\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:key>\n          <xs:keyref name=\"ref2LNodeTypeDomain1\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:LN\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2LNodeTypeDomain2\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2LNodeTypeLLN0\" refer=\"LNodeTypeKey\">\n              <xs:selector xpath=\"./scl:IED/scl:AccessPoint/scl:Server/scl:LDevice/scl:LN0\"/>\n              <xs:field xpath=\"@lnType\"/>\n              <xs:field xpath=\"@lnClass\"/>\n          </xs:keyref>\n          <xs:keyref name=\"refConnectedAP2IED\" refer=\"IEDKey\">\n              <xs:selector xpath=\"./scl:Communication/scl:SubNetwork/scl:ConnectedAP\"/>\n              <xs:field xpath=\"@iedName\"/>\n          </xs:keyref>\n          <xs:keyref name=\"ref2SubstationFromTerminal\" refer=\"scl:SubstationKey\">\n              <xs:selector xpath=\".//scl:Terminal\"/>\n              <xs:field xpath=\"@substationName\"/>\n          </xs:keyref>\n          <xs:key name=\"ConnectivityNodeKey\">\n              <xs:selector xpath=\".//scl:ConnectivityNode\"/>\n              <xs:field xpath=\"@pathName\"/>\n          </xs:key>\n      </xs:element>\n  </xs:schema>\n  `,\n};\n\nexport type SupportedVersion = keyof typeof schemas;\nexport function isSupported(version: string): version is SupportedVersion {\n  return Object.keys(schemas).includes(version);\n}\n\nconst versionToSchema: Partial<Record<string, SupportedVersion>> = {\n  '': '2003',\n  '2007': '2007B',\n  '2007A': '2007B',\n  '2007B': '2007B',\n  '2007B1': '2007B',\n  '2007B2': '2007B4',\n  '2007B3': '2007B4',\n  '2007B4': '2007B4',\n};\nexport function getSchema(\n  version: string,\n  revision: string,\n  release: string\n): string {\n  const schemaVersion = versionToSchema[version + revision + release];\n  return schemas[schemaVersion ?? '2007B'];\n}\n\nexport type SchemaAttributes =\n  | { version: ''; revision: ''; release: '' }\n  | { version: '2007'; revision: 'B'; release: '' }\n  | { version: '2007'; revision: 'B'; release: '4' };\nexport const supportedAttributes: Record<SupportedVersion, SchemaAttributes> = {\n  '2003': { version: '', revision: '', release: '' },\n  '2007B': { version: '2007', revision: 'B', release: '' },\n  '2007B4': { version: '2007', revision: 'B', release: '4' },\n};\n","import {\n  IssueDetail,\n  ValidationResult,\n  Validator,\n  WorkerMessage,\n  isLoadSchemaResult,\n  isValidationError,\n  isValidationResult,\n} from '../foundation/utils.js';\nimport { getSchema } from '../foundation/schemas.js';\n\nconst validators: Partial<Record<string, Validator>> = {};\n\nexport async function validateSchema(\n  doc: XMLDocument,\n  docName: string\n): Promise<IssueDetail[]> {\n  const issues: IssueDetail[] = [];\n\n  const fileName = docName;\n  let version = '2007';\n  let revision = 'B';\n  let release = '1';\n\n  if (doc.documentElement)\n    [version, revision, release] = [\n      doc.documentElement.getAttribute('version') ?? '',\n      doc.documentElement.getAttribute('revision') ?? '',\n      doc.documentElement.getAttribute('release') ?? '',\n    ];\n\n  async function getValidator(\n    xsd: string,\n    xsdName: string\n  ): Promise<Validator> {\n    if (!window.Worker) throw new Error('Invalid schema');\n    if (validators[xsdName]) return validators[xsdName]!;\n\n    const worker: Worker = new Worker('/public/worker.js');\n\n    async function validate(\n      xml: string,\n      xmlName: string\n    ): Promise<ValidationResult> {\n      return new Promise(resolve => {\n        worker.addEventListener('message', (e: MessageEvent<WorkerMessage>) => {\n          if (isValidationResult(e.data) && e.data.file === xmlName)\n            resolve(e.data);\n          else if (isValidationError(e.data)) {\n            const parts = e.data.message.split(': ', 2);\n            const description = parts[1] ? parts[1] : parts[0];\n            const qualifiedTag = parts[1] ? ` (${parts[0]})` : '';\n            issues.push({\n              title: description,\n              message: `${e.data.file}:${e.data.line} ${e.data.node} ${e.data.part}${qualifiedTag}`,\n            });\n          }\n        });\n        worker.postMessage({ content: xml, name: xmlName });\n      });\n    }\n\n    validators[xsdName] = validate;\n\n    return new Promise((resolve, reject) => {\n      worker.addEventListener('message', (e: MessageEvent<WorkerMessage>) => {\n        if (isLoadSchemaResult(e.data)) {\n          if (e.data.loaded) resolve(validate);\n          // eslint-disable-next-line prefer-promise-reject-errors\n          else reject('validator.schema.loadEror');\n        }\n      });\n      worker.postMessage({ content: xsd, name: xsdName });\n    });\n  }\n\n  const validate = await getValidator(\n    getSchema(version, revision, release),\n    `SCL${version}${revision}${release}.xsd`\n  );\n\n  const result = await validate(\n    new XMLSerializer().serializeToString(doc),\n    fileName\n  );\n\n  if (result.valid) issues.push({ title: 'Project is schema valid' });\n\n  return issues;\n}\n","/* eslint-disable no-promise-executor-return */\nimport { IssueDetail } from '../../foundation/utils.js';\nimport { getTypeChild, isTypeMissing } from './foundation.js';\n\nexport async function dAValidator(element: Element): Promise<IssueDetail[]> {\n  if (isTypeMissing(element))\n    return [\n      {\n        title: `validator.templates.missingAttribute, type, ${element.tagName}`,\n        message: `${element.tagName}`,\n      },\n    ];\n\n  const child = getTypeChild(element);\n  if (child === null)\n    return [\n      {\n        title: `validator.templates.missingReference, DO, ${element.getAttribute(\n          'name'\n        )}`,\n        message: `${element.tagName}`,\n      },\n    ];\n\n  return [];\n}\n","import { iec6185073, iec6185081, validateChildren } from './foundation.js';\nimport { IssueDetail } from '../../foundation/utils.js';\n\nasync function getChildren(\n  cdc: string | null | undefined,\n  daName: string | null | undefined\n): Promise<Element[]> {\n  const nsd73 = await iec6185073;\n\n  const dataAttribute = nsd73\n    .querySelector(`CDC[name=\"${cdc}\"] > DataAttribute[name=\"${daName}\"]`)\n    ?.getAttribute('type');\n\n  return Array.from(\n    nsd73.querySelectorAll(\n      `ConstructedAttributes > ConstructedAttribute[name=\"${dataAttribute}\"] > SubDataAttribute[presCond=\"M\"]`\n    )\n  );\n}\n\nasync function getServiceChildren(\n  daName: string | null | undefined\n): Promise<Element[]> {\n  const nsd81 = await iec6185081;\n\n  return Array.from(\n    nsd81.querySelectorAll(\n      `ServiceConstructedAttributes > ServiceConstructedAttribute[name=\"${daName}\"] > ` +\n        ` SubDataAttribute[presCond=\"M\"]`\n    )\n  );\n}\n\nasync function getMandatoryChildren(datype: Element): Promise<Element[]> {\n  const id = datype.getAttribute('id');\n  if (!id) return [];\n\n  const dataAttribute = datype\n    .closest('DataTypeTemplates')\n    ?.querySelector(`DOType > DA[type=\"${id}\"]`);\n  const daName = dataAttribute?.getAttribute('name');\n\n  if (daName && ['Oper', 'SBOw', 'SBO', 'Cancel'].includes(daName))\n    return getServiceChildren(daName);\n\n  const cdc = dataAttribute?.parentElement?.getAttribute('cdc');\n  return getChildren(cdc, daName);\n}\n\nasync function missingMandatoryChildren(\n  datype: Element\n): Promise<IssueDetail[]> {\n  const mandatoryChildren = await getMandatoryChildren(datype);\n  const mandatoryChildNames = mandatoryChildren.map(\n    DA => DA.getAttribute('name')!\n  );\n  const missingDaNames = mandatoryChildNames.filter(\n    da => !datype.querySelector(`BDA[name=\"${da}\"]`)\n  );\n\n  return missingDaNames.map(missingDa => ({\n    validatorId: 'Template Validator',\n    title: `validator.templates.mandatoryChild, DAType, ${datype.getAttribute(\n      'id'\n    )!}, BDA, ${missingDa}`,\n    message: `${datype.getAttribute('id')}`,\n  }));\n}\n\nexport async function dATypeValidator(datype: Element): Promise<IssueDetail[]> {\n  const errors: IssueDetail[] = [];\n\n  if (datype.tagName !== 'DAType') return [];\n\n  const missingChildren = await missingMandatoryChildren(datype);\n  const issuesChildren = await validateChildren(datype);\n\n  return errors.concat(missingChildren, issuesChildren);\n}\n","/* eslint-disable no-promise-executor-return */\nimport { IssueDetail } from '../../foundation/utils.js';\nimport { getTypeChild, isTypeMissing } from './foundation.js';\n\nexport async function dOValidator(element: Element): Promise<IssueDetail[]> {\n  if (isTypeMissing(element))\n    return [\n      {\n        title: `validator.templates.missingAttribute, type, ${element.tagName}`,\n        message: `${element.tagName}`,\n      },\n    ];\n\n  const child = getTypeChild(element);\n  if (child === null)\n    return [\n      {\n        title: `validator.templates.missingReference, DO, ${element.getAttribute(\n          'name'\n        )}`,\n        message: `${element.tagName}`,\n      },\n    ];\n\n  return [];\n}\n","/* eslint-disable no-promise-executor-return */\nimport {\n  getAdjacentClass,\n  iec6185073,\n  iec6185074,\n  iec6185081,\n  validateChildren,\n} from './foundation.js';\n\nimport { IssueDetail } from '../../foundation/utils.js';\n\nasync function getSpecificDataObject(\n  lnClass: string | null | undefined,\n  doName: string | null | undefined\n): Promise<Element | null> {\n  if (!lnClass || !doName) return null;\n\n  const lnodeclasses = getAdjacentClass(await iec6185074, lnClass!);\n\n  return (\n    lnodeclasses\n      .flatMap(lnodeclass =>\n        Array.from(lnodeclass.querySelectorAll(`DataObject`))\n      )\n      .find(dataObject => dataObject.getAttribute('name') === doName) ?? null\n  );\n}\n\nasync function getNsdReference(element: Element): Promise<Element | null> {\n  const id = element.getAttribute('id');\n\n  if (!id) return null;\n\n  const doorsdo = element\n    .closest('DataTypeTemplates')\n    ?.querySelector(\n      `LNodeType > DO[type=\"${id}\"], LNodeType > SDO[type=\"${id}\"]`\n    );\n  const doName = doorsdo?.getAttribute('name');\n\n  const lNodeType = doorsdo?.parentElement;\n  const lnClass = lNodeType?.getAttribute('lnClass');\n\n  return getSpecificDataObject(lnClass, doName);\n}\n\nfunction getControlServicePresConditions(\n  ctlModel: string | null | undefined\n): string[] {\n  if (!ctlModel || ctlModel === 'status-only') return [];\n\n  if (ctlModel.includes('direct')) return ['MOctrl'];\n\n  if (ctlModel.includes('normal')) return ['MOctrl', 'MOsbo', 'MOsboNormal'];\n\n  if (ctlModel.includes('enhanced'))\n    return ['MOctrl', 'MOsbo', 'MOsboEnhanced'];\n\n  return [];\n}\n\nasync function getMandatoryDataAttribute(\n  dotype: Element,\n  cdc: string\n): Promise<Element[]> {\n  const nsd73 = await iec6185073;\n  const nsd81 = await iec6185081;\n\n  const dataAttributes = Array.from(\n    nsd73.querySelectorAll(`CDC[name=\"${cdc}\"] > DataAttribute[presCond=\"M\"]`)\n  );\n\n  const servicePresConds = getControlServicePresConditions(\n    dotype.querySelector('DA[name=\"ctlModel\"] > Val')?.textContent?.trim()\n  );\n  const serviceDataAttribute = Array.from(\n    nsd81.querySelectorAll(`ServiceCDC[cdc=\"${cdc}\"] > ServiceDataAttribute`)\n  ).filter(da => servicePresConds.includes(da.getAttribute('presCond')!));\n\n  return dataAttributes.concat(serviceDataAttribute);\n}\n\nasync function validateAttributes(\n  dotype: Element,\n  cdc: string\n): Promise<IssueDetail[]> {\n  const reference = await getNsdReference(dotype);\n\n  if (reference && cdc !== reference.getAttribute('type'))\n    return [\n      {\n        title: `validator.templates.incorrectAttribute , cdc, DOType`,\n        message: `${dotype.getAttribute('id')}`,\n      },\n    ];\n\n  return [];\n}\n\nasync function missingMandatoryChildren(\n  dotype: Element,\n  cdc: string\n): Promise<IssueDetail[]> {\n  const errors: IssueDetail[] = [];\n\n  const mandatorydas = (await getMandatoryDataAttribute(dotype, cdc)).map(\n    DA => DA.getAttribute('name')!\n  );\n\n  mandatorydas.forEach(mandatoryda => {\n    if (!dotype.querySelector(`DA[name=\"${mandatoryda}\"]`))\n      errors.push({\n        title: `validator.templates.mandatoryChild', Common Data Class, ${cdc}, DA, ${mandatoryda}`,\n        message: `${dotype.getAttribute('id')}`,\n      });\n  });\n\n  return errors;\n}\n\nexport async function dOTypeValidator(dotype: Element): Promise<IssueDetail[]> {\n  const errors: IssueDetail[] = [];\n\n  if (dotype.tagName !== 'DOType') return [];\n\n  const cdc = dotype.getAttribute('cdc');\n  if (!cdc)\n    return [\n      {\n        title: `validator.templates.missingAttribute, cdc, ${dotype.tagName}`,\n        message: `${dotype.getAttribute('id')}`,\n      },\n    ];\n\n  const incorrectAttributes = await validateAttributes(dotype, cdc);\n  const missingChildren = await missingMandatoryChildren(dotype, cdc);\n  const issuesChildren = await validateChildren(dotype);\n\n  return errors.concat(missingChildren, issuesChildren, incorrectAttributes);\n}\n","/* eslint-disable no-promise-executor-return */\nimport { IssueDetail } from '../../foundation/utils.js';\n\nimport {\n  getAdjacentClass,\n  iec6185074,\n  validateChildren,\n} from './foundation.js';\n\nasync function getMandatoryDataObject(base: string): Promise<Element[]> {\n  const lnodeclasses = getAdjacentClass(await iec6185074, base);\n\n  return lnodeclasses.flatMap(lnodeclass =>\n    Array.from(lnodeclass.querySelectorAll('DataObject[presCond=\"M\"]'))\n  );\n}\n\nasync function missingMandatoryChildren(\n  lnodetype: Element,\n  lnClass: string\n): Promise<IssueDetail[]> {\n  const errors: IssueDetail[] = [];\n\n  const mandatorydos = await (\n    await getMandatoryDataObject(lnClass)\n  ).map(DO => DO.getAttribute('name')!);\n\n  mandatorydos.forEach(mandatorydo => {\n    if (!lnodetype.querySelector(`DO[name=\"${mandatorydo}\"]`))\n      errors.push({\n        title: `validator.templates.mandatoryChild ${lnClass}, ${lnClass}, DO, ${mandatorydo}`,\n        message: `${lnClass} > ${mandatorydo}`,\n      });\n  });\n\n  return errors;\n}\n\nexport async function lNodeTypeValidator(\n  element: Element\n): Promise<IssueDetail[]> {\n  const errors: IssueDetail[] = [];\n\n  const lnClass = element.getAttribute('lnClass');\n  if (!lnClass)\n    return [\n      {\n        title: `validator.templates.missingAttribute, ${lnClass}, ${element.tagName}`,\n        message: `${lnClass}`,\n      },\n    ];\n\n  const missingChildren = await missingMandatoryChildren(element, lnClass);\n  const issuesChildren = await validateChildren(element);\n\n  return errors.concat(missingChildren, issuesChildren);\n}\n","/* eslint-disable no-await-in-loop */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-shadow */\n/* eslint-disable no-continue */\n/* eslint-disable no-use-before-define */\nimport { IssueDetail } from '../../foundation/utils.js';\nimport { dAValidator } from './dabda.js';\nimport { dATypeValidator } from './datype.js';\nimport { dOValidator } from './dosdo.js';\nimport { dOTypeValidator } from './dotype.js';\nimport { lNodeTypeValidator } from './lnodetype.js';\n\nexport const iec6185074 = fetch('/public/xml/IEC_61850-7-4_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185073 = fetch('/public/xml/IEC_61850-7-3_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185072 = fetch('/public/xml/IEC_61850-7-2_2007B3.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const iec6185081 = fetch('/public/xml/IEC_61850-8-1_2003A2.nsd')\n  .then(response => response.text())\n  .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\nexport const serviceCDCs = [\n  'SPC',\n  'DPC',\n  'INC',\n  'ENC',\n  'BSC',\n  'ISC',\n  'APC',\n  'BAC',\n];\n\nexport function isTypeMissing(element: Element): boolean {\n  const { tagName } = element;\n  const isTypeMandatory =\n    tagName === 'DO' ||\n    tagName === 'SDO' ||\n    ((tagName === 'DA' || tagName === 'BDA') &&\n      (element.getAttribute('bType') === 'Enum' ||\n        element.getAttribute('bType') === 'Struct'));\n\n  const isTypeMissing = !element.getAttribute('type');\n\n  return isTypeMandatory && isTypeMissing;\n}\n\nexport function getTypeChild(element: Element): Element | null | undefined {\n  const isStruct = element.getAttribute('bType') === 'Struct';\n  const isEnum = element.getAttribute('bType') === 'Enum';\n  const isDo = element.tagName === 'DO' || element.tagName === 'SDO';\n\n  const referenceTag = isDo\n    ? 'DOType'\n    : isStruct || isEnum\n    ? isStruct\n      ? 'DAType'\n      : 'EnumType'\n    : null;\n\n  if (!referenceTag) return undefined;\n\n  return (\n    element\n      .closest('DataTypeTemplates')\n      ?.querySelector(\n        `${referenceTag}[id=\"${element.getAttribute('type')}\"]`\n      ) ?? null\n  );\n}\n\nexport function getAdjacentClass(nsd: XMLDocument, base: string): Element[] {\n  if (base === '') return [];\n  const adjacents = getAdjacentClass(\n    nsd,\n    nsd\n      .querySelector(`LNClass[name=\"${base}\"], AbstractLNClass[name=\"${base}\"]`)\n      ?.getAttribute('base') ?? ''\n  );\n  return Array.from(\n    nsd.querySelectorAll(\n      `LNClass[name=\"${base}\"], AbstractLNClass[name=\"${base}\"]`\n    )\n  ).concat(adjacents);\n}\n\nexport async function validateChildren(\n  element: Element\n): Promise<IssueDetail[]> {\n  const issues: IssueDetail[] = [];\n\n  const children = Array.from(element.children);\n\n  for (const child of children) {\n    const validator = tagValidator[child.tagName];\n    if (!validator) continue;\n\n    const childIssues = await validator(child);\n    if (childIssues.length)\n      for (const childIssue of childIssues) issues.push(childIssue);\n  }\n\n  return issues;\n}\n\ntype ValidationFunction = (e: Element, r?: Element) => Promise<IssueDetail[]>;\n\nexport const tagValidator: Partial<Record<string, ValidationFunction>> = {\n  LNodeType: lNodeTypeValidator,\n  DOType: dOTypeValidator,\n  DAType: dATypeValidator,\n  DO: dOValidator,\n  SDO: dOValidator,\n  DA: dAValidator,\n  BDA: dAValidator,\n};\n","/* eslint-disable no-await-in-loop */\n/* eslint-disable no-continue */\n/* eslint-disable no-promise-executor-return */\nimport { IssueDetail } from '../foundation/utils.js';\nimport { tagValidator } from './templates/foundation.js';\n\nexport async function* validateTemplates(\n  doc: XMLDocument\n): AsyncGenerator<IssueDetail[], void, void> {\n  /*\n  const [version, revision, release] = [\n    doc.documentElement.getAttribute('version') ?? '',\n    doc.documentElement.getAttribute('revision') ?? '',\n    doc.documentElement.getAttribute('release') ?? '',\n  ]; */\n\n  /*\n  if (!(version === '2007' && revision === 'B' && Number(release) > 3)) {\n    dispatcher.dispatchEvent(\n      newIssueEvent({\n        validatorId: 'Template Validator',\n        title: 'diag.missingnsd',\n        message: '',\n      })\n    );\n    return;\n  } */\n\n  const data = doc.querySelector('DataTypeTemplates');\n  if (!data) return;\n\n  const children = Array.from(data.children);\n\n  for (const child of children) {\n    const validator = tagValidator[child.tagName];\n    if (!validator) continue;\n\n    const childIssues = validator(child);\n\n    yield childIssues;\n  }\n}\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { LitElement, TemplateResult, css, html } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport '@material/mwc-button';\nimport '@material/mwc-icon';\nimport '@material/mwc-list';\n\nimport { validateSchema } from './schema/validateSchema.js';\nimport { validateTemplates } from './schema/validateTemplates.js';\nimport { IssueDetail } from './foundation/utils.js';\n\n/** An editor [[`plugin`]] to configure validators and display their issue centrally */\nexport default class SclValidatingPlugin extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false })\n  doc!: XMLDocument;\n\n  /** The name of the document being edited */\n  @property()\n  docName!: string;\n\n  /** SCL change indicator */\n  @property({ type: Number })\n  editCount = 0;\n\n  @property()\n  schemaIssues: IssueDetail[] = [];\n\n  @property()\n  templateIssues: IssueDetail[] = [];\n\n  private async validateSchema(): Promise<void> {\n    this.schemaIssues.length = 0;\n    this.schemaIssues = await validateSchema(this.doc, this.docName);\n    this.requestUpdate('schemaIssues');\n  }\n\n  private async validateTemplates(): Promise<void> {\n    this.templateIssues.length = 0;\n    for await (const issue of validateTemplates(this.doc)) {\n      this.templateIssues.push(...issue);\n      this.requestUpdate('templateIssues');\n    }\n  }\n\n  async performUpdate() {\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise<void>(resolve => requestAnimationFrame(() => resolve()));\n    super.performUpdate();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private renderIssueEntry(issue: IssueDetail): TemplateResult {\n    return html` <abbr title=\"${`${issue.title}\\n${issue.message}`}\"\n      ><mwc-list-item ?twoline=${!!issue.message}>\n        <span> ${issue.title}</span>\n        <span slot=\"secondary\">${issue.message}</span>\n      </mwc-list-item></abbr\n    >`;\n  }\n\n  private renderValidatorsIssues(issues: IssueDetail[]): TemplateResult[] {\n    if (issues.length === 0) return [html``];\n    return [\n      html`<li divider padded role=\"separator\"></li>`,\n      ...issues.map(issue => this.renderIssueEntry(issue)),\n    ];\n  }\n\n  render(): TemplateResult {\n    return html`<section>\n      <div>\n        <mwc-button\n          label=\"validate schema\"\n          @click=\"${this.validateSchema}\"\n        ></mwc-button\n        ><mwc-list id=\"content\" wrapFocus\n          >${this.renderValidatorsIssues(this.schemaIssues)}</mwc-list\n        >\n      </div>\n      <div>\n        <mwc-button\n          label=\"validate templates\"\n          @click=\"${this.validateTemplates}\"\n        ></mwc-button\n        ><mwc-list id=\"content\" wrapFocus\n          >${this.renderValidatorsIssues(this.templateIssues)}</mwc-list\n        >\n      </div>\n    </section>`;\n  }\n\n  static styles = css`\n    section {\n      display: grid;\n      gap: 12px;\n      padding: 8px 12px 16px;\n      box-sizing: border-box;\n      grid-template-columns: repeat(auto-fit, minmax(316px, auto));\n    }\n  `;\n}\n"],"names":["t","e","s","n","o","r","i","S","c","h","a","l","d","styles","css","LitElement","html","customElement","cssClasses","strings","numbers","MDCRippleFoundation","classMap","styleMap","query","property","state","ifDefined","queryAsync","eventOptions","queryAssignedNodes","missingMandatoryChildren"],"mappings":"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CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,IAAI,OAAO,EAAE,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAACD,GAAC,CAACA,GAAC,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAM,MAA6D,CAAC,CAACI,GAAC,CAAC,uBAAuB,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAIN,GAAC,CAACM,GAAC,CAAC,eAAe,CAAC,EAAE,KAAK,CAAC,GAAGN,GAAC,CAACA,GAAC,CAACM,GAAC,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ACJ/rP;AACA;AACA;AACA;AACA,GAAG,IAAIK,GAAC,CAACP,GAAC,CAAW,MAAM,CAAC,SAASJ,GAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAACC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAC,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,EAAE,CAAC,OAAOK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAIK,GAAC,CAAC,UAAU,CAAC,wBAAwB,CAAC,EAAE,KAAK,CAAC,GAAGA,GAAC,EAAEA,GAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,MAAMR,GAAC,CAAC,UAAU,CAAC,yBAAyB,CAAC,IAAI,EAAEA,GAAC,EAAEA,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAsD,CAAC,IAAI,IAAIC,GAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,KAAK,CAAC,GAAGA,GAAC,CAACA,GAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;;ACL5gC;AACA;AACA;AACA;AACA;AACA,MAAMH,GAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;ACL5L;AACA;AACA;AACA;AACA;AACA,MAAMK,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,SAASL,GAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ACJra;AACA;AACA;AACA;AACA,GAAG,SAASN,GAAC,CAAC,CAAC,CAAC,CAAC,OAAOK,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;ACL1C;AACA;AACA;AACA;AACA;AACK,MAAmHD,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;;ACJtc;AACA;AACA;AACA;AACA,GAAG,SAASH,GAAC,CAAC,CAAC,CAAC,CAAC,OAAOI,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;ACJ9E;AACA;AACA;AACA;AACA,GAAG,SAASC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAOF,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;ACJza;AACA;AACA;AACA;AACA;AACA,SAASH,GAAC,CAAC,CAAC,CAAC,CAAC,OAAOI,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ACL9L;AACA;AACA;AACA;AACA,GAAG,IAAIF,GAAC,CAAC,MAAMF,GAAC,CAAC,IAAI,GAAG,IAAI,IAAIE,GAAC,CAAC,MAAM,CAAC,eAAe,CAAC,EAAE,KAAK,CAAC,GAAGA,GAAC,CAAC,KAAK,CAAC,CAACA,GAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,SAASQ,GAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAOP,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAACH,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ACJxf;AACA;AACA;AACA;AACA,GAAG,SAASG,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAACJ,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;ACLnX;AACA;AACA;AACA;AACA;AAEO,MAAMY,QAAM,GAAGC,GAAG,CAAC,CAAC,sYAAsY,CAAC;;ACNla;AACA;AACA;AACA;AACA;AAOA;AACA,IAAI,IAAI,GAAG,MAAM,IAAI,SAASC,CAAU,CAAC;AACzC;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAOC,CAAI,CAAC,CAAC,0BAA0B,CAAC,CAAC;AACjD,KAAK;AACL,CAAC,CAAC;AACF,IAAI,CAAC,MAAM,GAAG,CAACH,QAAM,CAAC,CAAC;AACvB,IAAI,GAAG,UAAU,CAAC;AAClB,IAAII,GAAa,CAAC,UAAU,CAAC;AAC7B,CAAC,EAAE,IAAI,CAAC;;ACrBR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBO,SAAS,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE;AAC3C,IAAI,IAAI,aAAa,GAAG,OAAO,CAAC,OAAO;AACvC,WAAW,OAAO,CAAC,qBAAqB;AACxC,WAAW,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACjD;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,CAAC,IAAI,KAAK;AACvC,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;AAC/C,CAAC,CAAC;AAaF,MAAM,EAAE,GAAG,MAAM,GAAG,CAAC;AACrB,MAAM,YAAY,GAAG;AACrB,IAAI,IAAI,OAAO,GAAG;AAElB,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,CAAC,CAAC;AACF,QAAQ,CAAC,gBAAgB,CAAC,GAAG,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;AACjD,QAAQ,CAAC,mBAAmB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAK/B,MAAM,qBAAqB,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,KAAK;AAChE,IAAI,IAAI,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;AAC1C,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC;AACpB,IAAI,IAAI,CAAC,aAAa,EAAE;AACxB,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,aAAa,EAAE;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACjC,QAAQ,IAAI,aAAa,CAAC,UAAU,EAAE;AACtC,YAAY,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC;AACnE,SAAS;AACT,aAAa;AACb,YAAY,MAAM;AAClB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACK,MAAM,uBAAuB,GAAG,CAAC,OAAO,KAAK;AACpD,IAAI,MAAM,UAAU,GAAG,qBAAqB,EAAE,CAAC;AAC/C,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AAC5B,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,iBAAiB,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAChE,IAAI,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACrF,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B,IAAI,MAAM,QAAQ,GAAG,CAAC,EAAE,KAAK;AAC7B,QAAQ,YAAY,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;AACzC,KAAK,CAAC;AACN,IAAI,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;AACjE,IAAI,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAI,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;AACpE,IAAI,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AAChD,CAAC;;ACxED;AACA;AACA;AACA;AACA;AAGA;AACO,MAAM,WAAW,SAASF,CAAU,CAAC;AAC5C,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACjC,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACjC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,KAAK,CAAC,KAAK,EAAE,CAAC;AACtB,KAAK;AACL;AACA;AACA;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;AAC9C,YAAY,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AACzC,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,YAAY,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AACnF,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AACtC,SAAS;AACT,KAAK;AACL,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChC,KAAK;AACL;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,kBAAkB,YAAY;AAC/C,IAAI,SAAS,aAAa,CAAC,OAAO,EAAE;AACpC,QAAQ,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,EAAE,CAAC,EAAE;AACjD,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,KAAK;AACL,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,EAAE;AACvD,QAAQ,GAAG,EAAE,YAAY;AACzB;AACA;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,SAAS,EAAE;AACpD,QAAQ,GAAG,EAAE,YAAY;AACzB;AACA;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,SAAS,EAAE;AACpD,QAAQ,GAAG,EAAE,YAAY;AACzB;AACA;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,gBAAgB,EAAE;AAC3D,QAAQ,GAAG,EAAE,YAAY;AACzB;AACA;AACA;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AAC/C;AACA,KAAK,CAAC;AACN,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AAClD;AACA,KAAK,CAAC;AACN,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC,EAAE,CAAC;;ACvEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAIG,YAAU,GAAG;AACxB;AACA;AACA;AACA,IAAI,UAAU,EAAE,yCAAyC;AACzD,IAAI,aAAa,EAAE,4CAA4C;AAC/D,IAAI,eAAe,EAAE,8CAA8C;AACnE,IAAI,IAAI,EAAE,qBAAqB;AAC/B,IAAI,SAAS,EAAE,gCAAgC;AAC/C,CAAC,CAAC;AACK,IAAIC,SAAO,GAAG;AACrB,IAAI,YAAY,EAAE,uBAAuB;AACzC,IAAI,WAAW,EAAE,sBAAsB;AACvC,IAAI,oBAAoB,EAAE,+BAA+B;AACzD,IAAI,sBAAsB,EAAE,iCAAiC;AAC7D,IAAI,QAAQ,EAAE,mBAAmB;AACjC,IAAI,OAAO,EAAE,kBAAkB;AAC/B,CAAC,CAAC;AACK,IAAIC,SAAO,GAAG;AACrB,IAAI,uBAAuB,EAAE,GAAG;AAChC,IAAI,kBAAkB,EAAE,GAAG;AAC3B,IAAI,oBAAoB,EAAE,GAAG;AAC7B,IAAI,OAAO,EAAE,EAAE;AACf,IAAI,YAAY,EAAE,GAAG;AACrB,CAAC;;AC9CD;AACA;AACA;AACA;AAyBO,SAAS,wBAAwB,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE;AACtE,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC9B,KAAK;AACL,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AAC3C,IAAI,IAAI,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC;AACxC,IAAI,IAAI,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;AACvC,IAAI,IAAI,WAAW,CAAC;AACpB,IAAI,IAAI,WAAW,CAAC;AACpB;AACA,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;AACnC,QAAQ,IAAI,UAAU,GAAG,GAAG,CAAC;AAC7B,QAAQ,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;AACrE,QAAQ,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;AACrE,KAAK;AACL,SAAS;AACT,QAAQ,IAAI,UAAU,GAAG,GAAG,CAAC;AAC7B,QAAQ,WAAW,GAAG,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;AACnD,QAAQ,WAAW,GAAG,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;AACnD,KAAK;AACL,IAAI,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC;AAC9C;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA,IAAI,sBAAsB,GAAG;AAC7B,IAAI,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS;AACvD,CAAC,CAAC;AACF;AACA,IAAI,gCAAgC,GAAG;AACvC,IAAI,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,aAAa;AACrD,CAAC,CAAC;AACF;AACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,IAAI,mBAAmB,kBAAkB,UAAU,MAAM,EAAE;AAC3D,IAAI,SAAS,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;AAC3C,IAAI,SAAS,mBAAmB,CAAC,OAAO,EAAE;AAC1C,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,mBAAmB,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC;AACnH,QAAQ,KAAK,CAAC,2BAA2B,GAAG,KAAK,CAAC;AAClD,QAAQ,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC;AAClC,QAAQ,KAAK,CAAC,0BAA0B,GAAG,CAAC,CAAC;AAC7C,QAAQ,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;AAC5B,QAAQ,KAAK,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAC9C,QAAQ,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;AAC9B,QAAQ,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;AAC9B,QAAQ,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5B,QAAQ,KAAK,CAAC,eAAe,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;AACpD,QAAQ,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,sBAAsB,EAAE,CAAC;AAC/D,QAAQ,KAAK,CAAC,uBAAuB,GAAG,YAAY;AACpD,YAAY,KAAK,CAAC,2BAA2B,GAAG,IAAI,CAAC;AACrD,YAAY,KAAK,CAAC,6BAA6B,EAAE,CAAC;AAClD,SAAS,CAAC;AACV,QAAQ,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,EAAE;AAC7C,YAAY,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAClC,SAAS,CAAC;AACV,QAAQ,KAAK,CAAC,iBAAiB,GAAG,YAAY;AAC9C,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;AACnC,SAAS,CAAC;AACV,QAAQ,KAAK,CAAC,YAAY,GAAG,YAAY;AACzC,YAAY,KAAK,CAAC,WAAW,EAAE,CAAC;AAChC,SAAS,CAAC;AACV,QAAQ,KAAK,CAAC,WAAW,GAAG,YAAY;AACxC,YAAY,KAAK,CAAC,UAAU,EAAE,CAAC;AAC/B,SAAS,CAAC;AACV,QAAQ,KAAK,CAAC,aAAa,GAAG,YAAY;AAC1C,YAAY,KAAK,CAAC,MAAM,EAAE,CAAC;AAC3B,SAAS,CAAC;AACV,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,CAAC,cAAc,CAAC,mBAAmB,EAAE,YAAY,EAAE;AAC7D,QAAQ,GAAG,EAAE,YAAY;AACzB,YAAY,OAAOF,YAAU,CAAC;AAC9B,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,mBAAmB,EAAE,SAAS,EAAE;AAC1D,QAAQ,GAAG,EAAE,YAAY;AACzB,YAAY,OAAOC,SAAO,CAAC;AAC3B,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,mBAAmB,EAAE,SAAS,EAAE;AAC1D,QAAQ,GAAG,EAAE,YAAY;AACzB,YAAY,OAAOC,SAAO,CAAC;AAC3B,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,cAAc,CAAC,mBAAmB,EAAE,gBAAgB,EAAE;AACjE,QAAQ,GAAG,EAAE,YAAY;AACzB,YAAY,OAAO;AACnB,gBAAgB,QAAQ,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AAC3D,gBAAgB,sBAAsB,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;AACpE,gBAAgB,mBAAmB,EAAE,YAAY;AACjD,oBAAoB,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3F,iBAAiB;AACjB,gBAAgB,mBAAmB,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;AACjE,gBAAgB,oCAAoC,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AACvF,gBAAgB,4BAA4B,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AAC/E,gBAAgB,uBAAuB,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AAC1E,gBAAgB,mBAAmB,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;AAC7E,gBAAgB,eAAe,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;AAC7D,gBAAgB,iBAAiB,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;AAC/D,gBAAgB,WAAW,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE;AACzD,gBAAgB,kCAAkC,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AACrF,gBAAgB,0BAA0B,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AAC7E,gBAAgB,qBAAqB,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AACxE,gBAAgB,WAAW,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AAC9D,gBAAgB,iBAAiB,EAAE,YAAY,EAAE,OAAO,SAAS,CAAC,EAAE;AACpE,aAAa,CAAC;AACd,SAAS;AACT,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,YAAY,EAAE,IAAI;AAC1B,KAAK,CAAC,CAAC;AACP,IAAI,mBAAmB,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;AACrD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC7D,QAAQ,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;AACvD,QAAQ,IAAI,mBAAmB,EAAE;AACjC,YAAY,IAAI,EAAE,GAAG,mBAAmB,CAAC,UAAU,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,WAAW,GAAG,EAAE,CAAC,SAAS,CAAC;AAClG,YAAY,qBAAqB,CAAC,YAAY;AAC9C,gBAAgB,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC/C,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AACjD,oBAAoB,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACxD;AACA,oBAAoB,KAAK,CAAC,cAAc,EAAE,CAAC;AAC3C,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;AACxD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACxC,YAAY,IAAI,IAAI,CAAC,eAAe,EAAE;AACtC,gBAAgB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACnD,gBAAgB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AACzC,gBAAgB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACvF,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,0BAA0B,EAAE;AACjD,gBAAgB,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;AAC9D,gBAAgB,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;AACpD,gBAAgB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AACzF,aAAa;AACb,YAAY,IAAI,EAAE,GAAG,mBAAmB,CAAC,UAAU,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,WAAW,GAAG,EAAE,CAAC,SAAS,CAAC;AAClG,YAAY,qBAAqB,CAAC,YAAY;AAC9C,gBAAgB,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAClD,gBAAgB,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACvD,gBAAgB,KAAK,CAAC,aAAa,EAAE,CAAC;AACtC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACtC,QAAQ,IAAI,CAAC,8BAA8B,EAAE,CAAC;AAC9C,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE;AAC5D,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC/B,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AAC3D,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;AACvD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnD,SAAS;AACT,QAAQ,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,YAAY;AAC7D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;AACnC,YAAY,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;AAClC,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,SAAS,EAAE;AACtE,QAAQ,IAAI,SAAS,GAAG,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAAC;AACjE,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC7C,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAChD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,WAAW,GAAG,YAAY;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,qBAAqB,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;AACzH,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;AAC3D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,qBAAqB,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5H,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAY;AACpE,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;AACrD,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,GAAG,YAAY;AACvE,QAAQ,OAAO;AACf,YAAY,eAAe,EAAE,SAAS;AACtC,YAAY,oBAAoB,EAAE,KAAK;AACvC,YAAY,WAAW,EAAE,KAAK;AAC9B,YAAY,cAAc,EAAE,KAAK;AACjC,YAAY,qBAAqB,EAAE,KAAK;AACxC,YAAY,oBAAoB,EAAE,KAAK;AACvC,SAAS,CAAC;AACV,KAAK,CAAC;AACN;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,mBAAmB,EAAE;AACxF,QAAQ,IAAI,GAAG,EAAE,EAAE,CAAC;AACpB,QAAQ,IAAI,mBAAmB,EAAE;AACjC,YAAY,IAAI;AAChB,gBAAgB,KAAK,IAAI,wBAAwB,GAAG,QAAQ,CAAC,sBAAsB,CAAC,EAAE,0BAA0B,GAAG,wBAAwB,CAAC,IAAI,EAAE,EAAE,CAAC,0BAA0B,CAAC,IAAI,EAAE,0BAA0B,GAAG,wBAAwB,CAAC,IAAI,EAAE,EAAE;AACpP,oBAAoB,IAAI,OAAO,GAAG,0BAA0B,CAAC,KAAK,CAAC;AACnE,oBAAoB,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AAC3F,iBAAiB;AACjB,aAAa;AACb,YAAY,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;AACrD,oBAAoB;AACpB,gBAAgB,IAAI;AACpB,oBAAoB,IAAI,0BAA0B,IAAI,CAAC,0BAA0B,CAAC,IAAI,KAAK,EAAE,GAAG,wBAAwB,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACpK,iBAAiB;AACjB,wBAAwB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACrD,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AAC5C,gBAAgB,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACvE,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC5E,QAAQ,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1E,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,4BAA4B,GAAG,UAAU,GAAG,EAAE;AAChF,QAAQ,IAAI,GAAG,EAAE,EAAE,CAAC;AACpB,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE;AACpC,YAAY,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrF,SAAS;AACT,aAAa;AACb,YAAY,IAAI;AAChB,gBAAgB,KAAK,IAAI,kCAAkC,GAAG,QAAQ,CAAC,gCAAgC,CAAC,EAAE,oCAAoC,GAAG,kCAAkC,CAAC,IAAI,EAAE,EAAE,CAAC,oCAAoC,CAAC,IAAI,EAAE,oCAAoC,GAAG,kCAAkC,CAAC,IAAI,EAAE,EAAE;AAC1T,oBAAoB,IAAI,OAAO,GAAG,oCAAoC,CAAC,KAAK,CAAC;AAC7E,oBAAoB,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrG,iBAAiB;AACjB,aAAa;AACb,YAAY,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;AACrD,oBAAoB;AACpB,gBAAgB,IAAI;AACpB,oBAAoB,IAAI,oCAAoC,IAAI,CAAC,oCAAoC,CAAC,IAAI,KAAK,EAAE,GAAG,kCAAkC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;AAC5M,iBAAiB;AACjB,wBAAwB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACrD,aAAa;AACb,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,GAAG,YAAY;AACvE,QAAQ,IAAI,GAAG,EAAE,EAAE,CAAC;AACpB,QAAQ,IAAI;AACZ,YAAY,KAAK,IAAI,wBAAwB,GAAG,QAAQ,CAAC,sBAAsB,CAAC,EAAE,0BAA0B,GAAG,wBAAwB,CAAC,IAAI,EAAE,EAAE,CAAC,0BAA0B,CAAC,IAAI,EAAE,0BAA0B,GAAG,wBAAwB,CAAC,IAAI,EAAE,EAAE;AAChP,gBAAgB,IAAI,OAAO,GAAG,0BAA0B,CAAC,KAAK,CAAC;AAC/D,gBAAgB,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACzF,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;AACjD,gBAAgB;AAChB,YAAY,IAAI;AAChB,gBAAgB,IAAI,0BAA0B,IAAI,CAAC,0BAA0B,CAAC,IAAI,KAAK,EAAE,GAAG,wBAAwB,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;AAChK,aAAa;AACb,oBAAoB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACjD,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9E,QAAQ,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5E,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AACxC,YAAY,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACrE,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,8BAA8B,GAAG,YAAY;AAC/E,QAAQ,IAAI,GAAG,EAAE,EAAE,CAAC;AACpB,QAAQ,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACnF,QAAQ,IAAI;AACZ,YAAY,KAAK,IAAI,kCAAkC,GAAG,QAAQ,CAAC,gCAAgC,CAAC,EAAE,oCAAoC,GAAG,kCAAkC,CAAC,IAAI,EAAE,EAAE,CAAC,oCAAoC,CAAC,IAAI,EAAE,oCAAoC,GAAG,kCAAkC,CAAC,IAAI,EAAE,EAAE;AACtT,gBAAgB,IAAI,OAAO,GAAG,oCAAoC,CAAC,KAAK,CAAC;AACzE,gBAAgB,IAAI,CAAC,OAAO,CAAC,oCAAoC,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACnG,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,KAAK,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;AACjD,gBAAgB;AAChB,YAAY,IAAI;AAChB,gBAAgB,IAAI,oCAAoC,IAAI,CAAC,oCAAoC,CAAC,IAAI,KAAK,EAAE,GAAG,kCAAkC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;AACxM,aAAa;AACb,oBAAoB,EAAE,IAAI,GAAG,EAAE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;AACjD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;AAC9D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,aAAa,GAAG,mBAAmB,CAAC,OAAO,CAAC;AACxD,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACpC,YAAY,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AAC3C,gBAAgB,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1E,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE;AAChE,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;AAC9C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AACnD,QAAQ,IAAI,eAAe,CAAC,WAAW,EAAE;AACzC,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQ,IAAI,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;AACnE,QAAQ,IAAI,iBAAiB,GAAG,uBAAuB,IAAI,GAAG,KAAK,SAAS,IAAI,uBAAuB,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;AAC1H,QAAQ,IAAI,iBAAiB,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC;AAC3C,QAAQ,eAAe,CAAC,cAAc,GAAG,GAAG,KAAK,SAAS,CAAC;AAC3D,QAAQ,eAAe,CAAC,eAAe,GAAG,GAAG,CAAC;AAC9C,QAAQ,eAAe,CAAC,qBAAqB,GAAG,eAAe,CAAC,cAAc,GAAG,KAAK,GAAG,GAAG,KAAK,SAAS,KAAK,GAAG,CAAC,IAAI,KAAK,WAAW,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;AACpM,QAAQ,IAAI,iBAAiB,GAAG,GAAG,KAAK,SAAS;AACjD,YAAY,gBAAgB,CAAC,MAAM,GAAG,CAAC;AACvC,YAAY,gBAAgB,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3G,QAAQ,IAAI,iBAAiB,EAAE;AAC/B;AACA,YAAY,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACxC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,GAAG,KAAK,SAAS,EAAE;AAC/B,YAAY,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9C,YAAY,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC;AACnD,SAAS;AACT,QAAQ,eAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;AAChF,QAAQ,IAAI,eAAe,CAAC,oBAAoB,EAAE;AAClD,YAAY,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACrC,SAAS;AACT,QAAQ,qBAAqB,CAAC,YAAY;AAC1C;AACA,YAAY,gBAAgB,GAAG,EAAE,CAAC;AAClC,YAAY,IAAI,CAAC,eAAe,CAAC,oBAAoB;AACrD,mBAAmB,GAAG,KAAK,SAAS;AACpC,oBAAoB,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,EAAE,CAAC,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe,CAAC,oBAAoB,GAAG,KAAK,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;AACzF,gBAAgB,IAAI,eAAe,CAAC,oBAAoB,EAAE;AAC1D,oBAAoB,KAAK,CAAC,iBAAiB,EAAE,CAAC;AAC9C,iBAAiB;AACjB,aAAa;AACb,YAAY,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE;AACvD;AACA,gBAAgB,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,sBAAsB,EAAE,CAAC;AACvE,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,GAAG,UAAU,GAAG,EAAE;AAC1E,QAAQ,OAAO,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS;AAC3D,YAAY,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;AAC1C,YAAY,IAAI,CAAC;AACjB,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,iBAAiB,GAAG,YAAY;AAClE,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,EAAE,GAAG,mBAAmB,CAAC,OAAO,EAAE,sBAAsB,GAAG,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,GAAG,EAAE,CAAC,oBAAoB,CAAC;AACjJ,QAAQ,IAAI,EAAE,GAAG,mBAAmB,CAAC,UAAU,EAAE,eAAe,GAAG,EAAE,CAAC,eAAe,EAAE,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;AACxH,QAAQ,IAAI,uBAAuB,GAAG,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC;AAC1F,QAAQ,IAAI,CAAC,cAAc,EAAE,CAAC;AAC9B,QAAQ,IAAI,cAAc,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AACzC,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,2BAA2B,EAAE,EAAE,UAAU,GAAG,EAAE,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;AAC5G,YAAY,cAAc,GAAG,UAAU,CAAC,CAAC,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC;AACzE,YAAY,YAAY,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC;AACnE,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,cAAc,CAAC,CAAC;AAC/E,QAAQ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC;AAC3E;AACA,QAAQ,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC3C,QAAQ,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;AACtD,QAAQ,IAAI,CAAC,0BAA0B,EAAE,CAAC;AAC1C,QAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AAClD;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;AAC3C,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,YAAY;AACtD,YAAY,KAAK,CAAC,uBAAuB,EAAE,CAAC;AAC5C,SAAS,EAAE,uBAAuB,CAAC,CAAC;AACpC,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,2BAA2B,GAAG,YAAY;AAC5E,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,eAAe,GAAG,EAAE,CAAC,eAAe,EAAE,qBAAqB,GAAG,EAAE,CAAC,qBAAqB,CAAC;AAC9H,QAAQ,IAAI,UAAU,CAAC;AACvB,QAAQ,IAAI,qBAAqB,EAAE;AACnC,YAAY,UAAU,GAAG,wBAAwB,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,CAAC;AAC3I,SAAS;AACT,aAAa;AACb,YAAY,UAAU,GAAG;AACzB,gBAAgB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;AACvC,gBAAgB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AACxC,aAAa,CAAC;AACd,SAAS;AACT;AACA,QAAQ,UAAU,GAAG;AACrB,YAAY,CAAC,EAAE,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACpD,YAAY,CAAC,EAAE,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACpD,SAAS,CAAC;AACV,QAAQ,IAAI,QAAQ,GAAG;AACvB,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC9D,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC/D,SAAS,CAAC;AACV,QAAQ,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;AAC9D,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,6BAA6B,GAAG,YAAY;AAC9E,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB;AACA;AACA,QAAQ,IAAI,eAAe,GAAG,mBAAmB,CAAC,UAAU,CAAC,eAAe,CAAC;AAC7E,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,oBAAoB,GAAG,EAAE,CAAC,oBAAoB,EAAE,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC;AACpH,QAAQ,IAAI,kBAAkB,GAAG,oBAAoB,IAAI,CAAC,WAAW,CAAC;AACtE,QAAQ,IAAI,kBAAkB,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACpE,YAAY,IAAI,CAAC,0BAA0B,EAAE,CAAC;AAC9C,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,YAAY;AACrE,gBAAgB,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AAC3D,aAAa,EAAEA,SAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,0BAA0B,GAAG,YAAY;AAC3E,QAAQ,IAAI,aAAa,GAAG,mBAAmB,CAAC,UAAU,CAAC,aAAa,CAAC;AACzE,QAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;AAChD,QAAQ,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;AACjD,QAAQ,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;AAC3C,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,oBAAoB,GAAG,YAAY;AACrE,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;AAC5E,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC7D;AACA;AACA,QAAQ,UAAU,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,uBAAuB,GAAG,SAAS,CAAC,EAAE,EAAE,mBAAmB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAChI,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC/D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AACnD;AACA,QAAQ,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;AAC1C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;AAClD,QAAQ,IAAI,eAAe,CAAC,cAAc,EAAE;AAC5C,YAAY,qBAAqB,CAAC,YAAY;AAC9C,gBAAgB,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACjD,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACxC,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,8BAA8B,EAAE,CAAC;AAClD,YAAY,qBAAqB,CAAC,YAAY;AAC9C,gBAAgB,KAAK,CAAC,eAAe,CAAC,oBAAoB,GAAG,IAAI,CAAC;AAClE,gBAAgB,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACjD,gBAAgB,KAAK,CAAC,oBAAoB,EAAE,CAAC;AAC7C,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,EAAE,EAAE;AACtE,QAAQ,IAAI,qBAAqB,GAAG,EAAE,CAAC,qBAAqB,EAAE,oBAAoB,GAAG,EAAE,CAAC,oBAAoB,CAAC;AAC7G,QAAQ,IAAI,qBAAqB,IAAI,oBAAoB,EAAE;AAC3D,YAAY,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACjD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,cAAc,GAAG,YAAY;AAC/D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;AACxD,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,gBAAgB,GAAG,YAAY;AAC3C,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AACzG,YAAY,OAAO,UAAU,GAAG,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC;AACpE,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,MAAM,GAAG,gBAAgB,EAAE,CAAC;AAClF;AACA,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,mBAAmB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAChG;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,WAAW,GAAG,CAAC,KAAK,CAAC,EAAE;AACjE,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC;AAC/C,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC3C,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AAC9D,QAAQ,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACnC,KAAK,CAAC;AACN,IAAI,mBAAmB,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAY;AACpE,QAAQ,IAAI,EAAE,GAAG,mBAAmB,CAAC,OAAO,EAAE,WAAW,GAAG,EAAE,CAAC,WAAW,EAAE,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,EAAE,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;AACzJ,QAAQ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;AAC7E,QAAQ,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACnE,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AACxC,YAAY,IAAI,CAAC,eAAe,GAAG;AACnC,gBAAgB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACjF,gBAAgB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACjF,aAAa,CAAC;AACd,YAAY,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AACvF,YAAY,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AACrF,SAAS;AACT,KAAK,CAAC;AACN,IAAI,OAAO,mBAAmB,CAAC;AAC/B,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;AAElB;AACA,4BAAe,mBAAmB;;AC1gBlC;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAMd,GAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;;ACJ3S;AACA;AACA;AACA;AACA,GAAG,MAAMF,GAAC,CAACE,CAAC,CAAC,cAAcJ,GAAC,CAAC,WAAW,CAACF,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAACA,GAAC,CAAC,CAACA,GAAC,CAAC,IAAI,GAAGK,CAAC,CAAC,SAAS,EAAE,OAAO,GAAGL,GAAC,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAACA,GAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,oGAAoG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAOA,CAAC,CAAC,CAAC,CAAC;;ACJj2B;AACA;AACA;AACA;AACA,GAAG,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAcK,GAAC,CAAC,WAAW,CAACL,GAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAACA,GAAC,CAAC,CAACA,GAAC,CAAC,IAAI,GAAGE,CAAC,CAAC,SAAS,EAAE,OAAO,GAAGF,GAAC,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,CAACA,GAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,4GAA4G,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAOA,CAAC,CAAC,CAAC,CAAC;;ACL/3B;AACA;AACA;AACA;AACA;AAWA;AACO,MAAM,UAAU,SAAS,WAAW,CAAC;AAC5C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,qCAAqC,GAAG,KAAK,CAAC;AAC3D,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpC,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AACjC,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,CAAC,kBAAkB,GAAGqB,qBAAmB,CAAC;AACtD,KAAK;AACL,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,SAAS,CAAC,CAAC;AAC9D,KAAK;AACL,IAAI,aAAa,GAAG;AACpB,QAAQ,OAAO;AACf,YAAY,sBAAsB,EAAE,MAAM,IAAI;AAC9C,YAAY,WAAW,EAAE,MAAM,IAAI,CAAC,SAAS;AAC7C,YAAY,eAAe,EAAE,MAAM,IAAI,CAAC,QAAQ;AAChD,YAAY,iBAAiB,EAAE,MAAM,IAAI,CAAC,QAAQ;AAClD,YAAY,QAAQ,EAAE,CAAC,SAAS,KAAK;AACrC,gBAAgB,QAAQ,SAAS;AACjC,oBAAoB,KAAK,yCAAyC;AAClE,wBAAwB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9C,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,4CAA4C;AACrE,wBAAwB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACjD,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,8CAA8C;AACvE,wBAAwB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnD,wBAAwB,MAAM;AAG9B,iBAAiB;AACjB,aAAa;AACb,YAAY,WAAW,EAAE,CAAC,SAAS,KAAK;AACxC,gBAAgB,QAAQ,SAAS;AACjC,oBAAoB,KAAK,yCAAyC;AAClE,wBAAwB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/C,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,4CAA4C;AACrE,wBAAwB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClD,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,8CAA8C;AACvE,wBAAwB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpD,wBAAwB,MAAM;AAG9B,iBAAiB;AACjB,aAAa;AACb,YAAY,mBAAmB,EAAE,MAAM,IAAI;AAC3C,YAAY,0BAA0B,EAAE,MAAM,SAAS;AACvD,YAAY,4BAA4B,EAAE,MAAM,SAAS;AACzD,YAAY,kCAAkC,EAAE,MAAM,SAAS;AAC/D,YAAY,oCAAoC,EAAE,MAAM,SAAS;AACjE,YAAY,qBAAqB,EAAE,MAAM,SAAS;AAClD,YAAY,uBAAuB,EAAE,MAAM,SAAS;AACpD,YAAY,iBAAiB,EAAE,CAAC,OAAO,EAAE,KAAK,KAAK;AACnD,gBAAgB,QAAQ,OAAO;AAC/B,oBAAoB,KAAK,uBAAuB;AAChD,wBAAwB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7C,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,sBAAsB;AAC/C,wBAAwB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5C,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,+BAA+B;AACxD,wBAAwB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClD,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,iCAAiC;AAC1D,wBAAwB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpD,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,mBAAmB;AAC5C,wBAAwB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7C,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,kBAAkB;AAC3C,wBAAwB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5C,wBAAwB,MAAM;AAG9B,iBAAiB;AACjB,aAAa;AACb,YAAY,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,qBAAqB,EAAE;AAC3F,YAAY,mBAAmB,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC;AACzF,SAAS,CAAC;AACV,KAAK;AACL,IAAI,UAAU,CAAC,EAAE,EAAE;AACnB,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM;AACrC,YAAY,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM;AACrC,YAAY,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;AAC5C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM;AACrC,YAAY,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AAC7C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM;AACrC,YAAY,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;AAC5C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,KAAK;AACL,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,EAAE,EAAE;AAC1B,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,EAAE,EAAE,CAAC;AACjB,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,SAAS;AACT,KAAK;AACL,IAAI,MAAM,CAAC,iBAAiB,EAAE;AAC9B,QAAQ,IAAI,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAC/C;AACA;AACA;AACA,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC/B,gBAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChC,aAAa;AACb,SAAS;AACT,QAAQ,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACxC,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,uBAAuB,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzF,QAAQ,MAAM,qBAAqB,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtF;AACA,QAAQ,MAAM,OAAO,GAAG;AACxB,YAAY,4BAA4B,EAAE,IAAI,CAAC,MAAM;AACrD,YAAY,wCAAwC,EAAE,uBAAuB;AAC7E,YAAY,uCAAuC,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS;AAClF,YAAY,uCAAuC,EAAE,qBAAqB;AAC1E,YAAY,sCAAsC,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ;AAChF,YAAY,8BAA8B,EAAE,IAAI,CAAC,QAAQ;AACzD,YAAY,2BAA2B,EAAE,IAAI,CAAC,QAAQ;AACtD,YAAY,6BAA6B,EAAE,IAAI,CAAC,OAAO;AACvD,YAAY,8BAA8B,EAAE,IAAI,CAAC,QAAQ;AACzD,YAAY,yCAAyC,EAAE,IAAI,CAAC,SAAS;AACrE,YAAY,4CAA4C,EAAE,IAAI,CAAC,YAAY;AAC3E,YAAY,8CAA8C,EAAE,IAAI,CAAC,cAAc;AAC/E,YAAY,gCAAgC,EAAE,IAAI,CAAC,SAAS;AAC5D,YAAY,gEAAgE,EAAE,IAAI,CAAC,qCAAqC;AACxH,SAAS,CAAC;AACV,QAAQ,OAAOL,CAAI,CAAC,CAAC;AACrB,2DAA2D,EAAEM,GAAQ,CAAC,OAAO,CAAC,CAAC;AAC/E,iBAAiB,EAAEC,CAAQ,CAAC;AAC5B,YAAY,uBAAuB,EAAE,IAAI,CAAC,OAAO;AACjD,YAAY,sBAAsB,EAAE,IAAI,CAAC,MAAM;AAC/C,YAAY,+BAA+B,EAAE,IAAI,CAAC,YAAY;AAC9D,YAAY,iCAAiC,EAAE,IAAI,CAAC,cAAc;AAClE,YAAY,mBAAmB,EAAE,IAAI,CAAC,OAAO;AAC7C,YAAY,kBAAkB,EAAE,IAAI,CAAC,MAAM;AAC3C,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD,UAAU,CAAC;AACX,IAAIC,GAAK,CAAC,qBAAqB,CAAC;AAChC,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIC,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,uCAAuC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1E,UAAU,CAAC;AACX,IAAIC,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;;ACtP1C;AACA;AACA;AACA;AACA;AAEO,MAAMb,QAAM,GAAGC,GAAG,CAAC,CAAC,shXAAshX,CAAC;;ACNljX;AACA;AACA;AACA;AACA;AAOA;AACA,IAAI,MAAM,GAAG,MAAM,MAAM,SAAS,UAAU,CAAC;AAC7C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,GAAG,CAACD,QAAM,CAAC,CAAC;AACzB,MAAM,GAAG,UAAU,CAAC;AACpB,IAAII,GAAa,CAAC,YAAY,CAAC;AAC/B,CAAC,EAAE,MAAM,CAAC;;ACjBV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE;AAClD,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAC9C,IAAI,IAAI,CAAC,UAAU,EAAE;AACrB;AACA;AACA;AACA;AACA,QAAQ,MAAM,sBAAsB,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AACnD,QAAQ,UAAU;AAClB,YAAY,WAAW,CAAC,qBAAqB,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;AAC5E,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,YAAY,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;AACtF,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,cAAc,GAAG,UAAU,CAAC;AACtC,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC;AACvB,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;AAC7B,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACvE,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,SAAS,CAAC,gBAAgB,EAAE;AACpC,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL,IAAI,MAAM,iBAAiB,GAAG;AAC9B,QAAQ,YAAY,EAAE,IAAI;AAC1B,QAAQ,UAAU,EAAE,IAAI;AACxB,QAAQ,GAAG,CAAC,KAAK,EAAE;AACnB,YAAY,IAAI,SAAS,KAAK,EAAE,EAAE;AAClC,gBAAgB,MAAM,OAAO,GAAG,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AACrE;AACA,gBAAgB,SAAS;AACzB,oBAAoB,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACrF,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;AAC9C,gBAAgB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;AAChD,aAAa;AACb,YAAY,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,IAAI,cAAc,CAAC,GAAG,EAAE;AAC5B,QAAQ,iBAAiB,CAAC,GAAG,GAAG,YAAY;AAC5C,YAAY,OAAO,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,SAAS,CAAC;AACV,KAAK;AACL,IAAI,OAAO,iBAAiB,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,iBAAiB,EAAE,IAAI;AACpD;AACA,UAAU,EAAE;AACZ,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;AAC5B,QAAQ,OAAO,WAAW,CAAC,iBAAiB,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAChE,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;AAC7E,KAAK;AACL;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,CAAC;AAC5B,IAAI,WAAW;AACf;AACA,IAAI,QAAQ,EAAE;AACd,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,KAAK;AAClC,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACtC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;AAC9B,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM;AAChC,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;AACpC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;AAC9B,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM;AAChC,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;AACpC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;AAC9B,YAAY,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;AACnC,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AAClC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV,KAAK;AACL;;AC9DA;AACA;AACA;AACA;AACA,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAACjB,CAAC;;ACLzB;AACA;AACA;AACA;AACA;AAYA;AACO,MAAM,UAAU,SAASe,CAAU,CAAC;AAC3C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACvB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACxB,QAAQ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,MAAM;AACvD,YAAY,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC3C,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;AAC/B,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,aAAa,GAAG;AACpB,QAAQ,OAAOC,CAAI,CAAC,CAAC,CAAC,CAAC;AACvB,KAAK;AACL;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC;AACtD,QAAQ,OAAO,IAAI,CAAC,kBAAkB;AACtC,YAAYA,CAAI,CAAC,CAAC,qCAAqC,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;AAC9G,YAAY,EAAE,CAAC;AACf,KAAK;AACL,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACjD,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AAC7C,YAAY,aAAa,CAAC,KAAK,EAAE,CAAC;AAClC,SAAS;AACT,KAAK;AACL,IAAI,IAAI,GAAG;AACX,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACjD,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AAC3C,YAAY,aAAa,CAAC,IAAI,EAAE,CAAC;AACjC,SAAS;AACT,KAAK;AACL;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,OAAO;AACf,YAAY,oBAAoB,EAAE,IAAI,CAAC,MAAM;AAC7C,YAAY,wBAAwB,EAAE,IAAI,CAAC,UAAU;AACrD,YAAY,sBAAsB,EAAE,IAAI,CAAC,QAAQ;AACjD,YAAY,mBAAmB,EAAE,IAAI,CAAC,KAAK;AAC3C,SAAS,CAAC;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAOA,CAAI,CAAC,CAAC;AACrB;AACA;AACA,4BAA4B,EAAEM,GAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;AAChE,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC;AACrC,sBAAsB,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AAChD,yBAAyB,EAAEK,CAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxD,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC;AAC3C,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC;AACzC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,CAAC;AAClD,uBAAuB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AACrD,uBAAuB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AACrD,uBAAuB,EAAE,IAAI,CAAC,oBAAoB,CAAC;AACnD,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AACnD,wBAAwB,EAAE,IAAI,CAAC,sBAAsB,CAAC;AACtD,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;AAC/B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAC9B;AACA;AACA,YAAY,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC;AACvE;AACA;AACA,wCAAwC,EAAE,IAAI,CAAC,KAAK,CAAC;AACrD,oCAAoC,EAAEL,GAAQ,CAAC;AAC/C,YAAY,IAAI,EAAE,IAAI,CAAC,aAAa;AACpC,SAAS,CAAC,CAAC;AACX;AACA;AACA;AACA;AACA,YAAY,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC;AACtE;AACA;AACA,eAAe,CAAC,CAAC;AACjB,KAAK;AACL;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,OAAON,CAAI,CAAC,CAAC;AACrB;AACA,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AAClB,eAAe,CAAC,CAAC;AACjB,KAAK;AACL,IAAI,oBAAoB,CAAC,GAAG,EAAE;AAC9B,QAAQ,MAAM,IAAI,GAAG,MAAM;AAC3B,YAAY,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACxD,YAAY,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC1C,SAAS,CAAC;AACV,QAAQ,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,sBAAsB,GAAG;AAC7B,QAAQ,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACvC,KAAK;AACL,IAAI,sBAAsB,GAAG;AAC7B,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AACzC,KAAK;AACL,IAAI,sBAAsB,GAAG;AAC7B,QAAQ,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACvC,KAAK;AACL,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;AACzC,KAAK;AACL,IAAI,gBAAgB,GAAG;AACvB,QAAQ,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACvC,KAAK;AACL,CAAC;AACD,UAAU,CAAC,iBAAiB,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;AACtE,UAAU,CAAC;AACX,IAAI,YAAY;AAChB,IAAIS,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AAC1D,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;AAC1D,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AACzC,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;AACX,IAAID,GAAK,CAAC,SAAS,CAAC;AACpB,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;AACX,IAAII,GAAU,CAAC,YAAY,CAAC;AAC5B,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,UAAU,CAAC;AACX,IAAIF,GAAK,EAAE;AACX,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;AACvD,UAAU,CAAC;AACX,IAAIG,GAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACnC,CAAC,EAAE,UAAU,CAAC,SAAS,EAAE,sBAAsB,EAAE,IAAI,CAAC;;AC5LtD;AACA;AACA;AACA;AACA;AAEO,MAAMhB,QAAM,GAAGC,GAAG,CAAC,CAAC,wqXAAwqX,CAAC;;ACNpsX;AACA;AACA;AACA;AACA;AAOA;AACA,IAAI,MAAM,GAAG,MAAM,MAAM,SAAS,UAAU,CAAC;AAC7C,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,GAAG,CAACD,QAAM,CAAC,CAAC;AACzB,MAAM,GAAG,UAAU,CAAC;AACpB,IAAII,GAAa,CAAC,YAAY,CAAC;AAC/B,CAAC,EAAE,MAAM,CAAC;;ACjBV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,CAAC,QAAQ;AACjC;AACA,CAAC,KAAK,EAAE,QAAQ,KAAK;AACrB;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW;AAC1B,SAAS,UAAU,EAAE;AACrB,QAAQ,KAAK,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACjD,QAAQ,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;AAC1C,QAAQ,KAAK,CAAC,OAAO,GAAG,UAAU,iBAAiB,EAAE;AACrD,YAAY,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;AACtD,YAAY,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAChD,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW;AAClD,qBAAqB,UAAU,CAAC;AAChC,gBAAgB,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,QAAQ,KAAK,SAAS,EAAE;AAC5C;AACA,oBAAoB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC;AACV;AACA;AACA,KAAK;AACL,SAAS,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC9D,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC;AACvD,QAAQ,KAAK,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACjD,QAAQ,SAAS,CAAC,OAAO;AACzB;AACA,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC1D,KAAK;AACL;AACA,IAAI,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACzD,CAAC;;ACzCD;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACO,MAAM,YAAY,SAASF,CAAU,CAAC;AAC7C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACtC,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpC,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpD,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACtC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,MAAM;AACvD,YAAY,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC3C,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;AAC/B,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,SAAS,GAAG;AACzB,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,OAAO,CAAC;AACrC,gBAAgB,EAAE,EAAE,MAAM;AAC1B,oBAAoB,IAAI,CAAC,OAAO,EAAE,CAAC;AACnC,iBAAiB;AACjB,aAAa;AACb,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,YAAY,CAAC;AAC1C,gBAAgB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU;AAClD,aAAa;AACb,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,YAAY,CAAC;AAC1C,gBAAgB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ;AAChD,aAAa;AACb,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,OAAO,CAAC;AACrC,gBAAgB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU;AAClD,aAAa;AACb,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,MAAM,CAAC;AACpC,gBAAgB,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ;AAChD,aAAa;AACb,YAAY;AACZ,gBAAgB,MAAM,EAAE,IAAI;AAC5B,gBAAgB,UAAU,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;AACvD,gBAAgB,EAAE,EAAE,CAAC,CAAC,KAAK;AAC3B,oBAAoB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACxC,oBAAoB,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,WAAW,GAAG,SAAS,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;AAClF,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV,KAAK;AACL,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AAC7C,QAAQ,OAAO,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;AACrD,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACvC,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,GAAGC,CAAI,CAAC,CAAC,CAAC,CAAC;AACtE,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,GAAGA,CAAI,CAAC,CAAC,CAAC,CAAC;AAChE,QAAQ,OAAOA,CAAI,CAAC,CAAC;AACrB,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,MAAM,EAAE,OAAO,CAAC;AAChB,MAAM,EAAE,IAAI,CAAC;AACb,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;AACf,KAAK;AACL,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,YAAY,OAAOA,CAAI,CAAC,CAAC;AACzB;AACA,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC;AACpC,mBAAmB,CAAC,CAAC;AACrB,SAAS;AACT,aAAa,IAAI,IAAI,CAAC,SAAS,EAAE;AACjC,YAAY,OAAOA,CAAI,CAAC,CAAC,yCAAyC,CAAC,CAAC;AACpE,SAAS;AACT,aAAa;AACb,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,KAAK;AACL,IAAI,aAAa,GAAG;AACpB,QAAQ,MAAM,cAAc,GAAG;AAC/B,YAAY,KAAK,EAAE,IAAI,CAAC,gBAAgB;AACxC,SAAS,CAAC;AACV,QAAQ,OAAOA,CAAI,CAAC,CAAC;AACrB,oEAAoE,EAAEM,GAAQ,CAAC,cAAc,CAAC,CAAC;AAC/F;AACA,aAAa,CAAC,CAAC;AACf,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,OAAON,CAAI,CAAC,CAAC;AACrB;AACA;AACA,aAAa,CAAC,CAAC;AACf,KAAK;AACL,IAAI,UAAU,GAAG;AACjB,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACpF,QAAQ,OAAOA,CAAI,CAAC,CAAC;AACrB;AACA,QAAQ,EAAE,KAAK,CAAC;AAChB,aAAa,CAAC,CAAC;AACf,KAAK;AACL,IAAI,gBAAgB,GAAG;AACvB,QAAQ,OAAOA,CAAI,CAAC,CAAC,aAAa,CAAC,CAAC;AACpC,KAAK;AACL,IAAI,aAAa,GAAG;AACpB,QAAQ,OAAOA,CAAI,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,CAAC;AACN,KAAK;AACL,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxB,QAAQ,MAAM,IAAI,GAAG,MAAM;AAC3B,YAAY,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrD,YAAY,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AAC3C,SAAS,CAAC;AACV,QAAQ,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE;AAC1C,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;AACjC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,IAAI,WAAW,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC9H,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK;AACL,IAAI,iBAAiB,GAAG;AACxB,QAAQ,KAAK,CAAC,iBAAiB,EAAE,CAAC;AAClC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AAClC,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AACnD,SAAS;AACT,QAAQ,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC/C,YAAY,KAAK,MAAM,SAAS,IAAI,QAAQ,CAAC,UAAU,EAAE;AACzD,gBAAgB,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5F,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,oBAAoB,GAAG;AAC3B,QAAQ,KAAK,CAAC,oBAAoB,EAAE,CAAC;AACrC,QAAQ,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC/C,YAAY,KAAK,MAAM,SAAS,IAAI,QAAQ,CAAC,UAAU,EAAE;AACzD,gBAAgB,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC5E,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,aAAa,CAAC,eAAe;AAC9C,gBAAgB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC;AACxD,gBAAgB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChD,SAAS;AACT,KAAK;AACL;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,oBAAoB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACtF,QAAQ,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAC/B,KAAK;AACL,CAAC;AACD,UAAU,CAAC;AACX,IAAIQ,GAAK,CAAC,MAAM,CAAC;AACjB,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAClD,UAAU,CAAC;AACX,IAAII,GAAU,CAAC,YAAY,CAAC;AAC5B,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,UAAU,CAAC;AACX,IAAIH,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7C,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7C,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AACvD,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7C,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACvD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;AACjD,YAAY,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;AAClD,YAAY,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAClC,YAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC/B,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;AACnD,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACrD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC/C,QAAQ,MAAM,gBAAgB,GAAG,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,QAAQ;AACzE,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,CAAC;AAC7C,QAAQ,IAAI,gBAAgB,IAAI,KAAK,EAAE;AACvC,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AACvD,SAAS;AACT,aAAa,IAAI,gBAAgB,EAAE;AACnC,YAAY,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACvC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACnC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACpD,KAAK,CAAC;AACN,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAIC,GAAK,EAAE;AACX,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;AACzD,UAAU,CAAC;AACX,IAAIA,GAAK,EAAE;AACX,CAAC,EAAE,YAAY,CAAC,SAAS,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;;ACjRnD;AACA;AACA;AACA;AACA;AAEO,MAAMb,QAAM,GAAGC,GAAG,CAAC,CAAC,qpSAAqpS,CAAC;;ACNjrS;AACA;AACA;AACA;AACA;AAOA,IAAI,QAAQ,GAAG,MAAM,QAAQ,SAAS,YAAY,CAAC;AACnD,CAAC,CAAC;AACF,QAAQ,CAAC,MAAM,GAAG,CAACD,QAAM,CAAC,CAAC;AAC3B,QAAQ,GAAG,UAAU,CAAC;AACtB,IAAII,GAAa,CAAC,eAAe,CAAC;AAClC,CAAC,EAAE,QAAQ,CAAC;;AChBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAI,GAAG,GAAG;AACjB,IAAI,OAAO,EAAE,SAAS;AACtB,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,KAAK,EAAE,OAAO;AAClB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,OAAO,EAAE,QAAQ;AACrB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,UAAU,EAAE,WAAW;AAC3B,IAAI,QAAQ,EAAE,SAAS;AACvB,IAAI,WAAW,EAAE,YAAY;AAC7B,IAAI,UAAU,EAAE,WAAW;AAC3B,IAAI,MAAM,EAAE,QAAQ;AACpB,IAAI,MAAM,EAAE,QAAQ;AACpB,IAAI,GAAG,EAAE,KAAK;AACd,CAAC,CAAC;AACF,IAAI,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B;AACA;AACA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAChC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACpC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,IAAI,QAAQ,GAAG;AACf,IAAI,SAAS,EAAE,CAAC;AAChB,IAAI,KAAK,EAAE,EAAE;AACb,IAAI,QAAQ,EAAE,EAAE;AAChB,IAAI,OAAO,EAAE,EAAE;AACf,IAAI,SAAS,EAAE,EAAE;AACjB,IAAI,GAAG,EAAE,EAAE;AACX,IAAI,IAAI,EAAE,EAAE;AACZ,IAAI,UAAU,EAAE,EAAE;AAClB,IAAI,QAAQ,EAAE,EAAE;AAChB,IAAI,WAAW,EAAE,EAAE;AACnB,IAAI,UAAU,EAAE,EAAE;AAClB,IAAI,MAAM,EAAE,EAAE;AACd,IAAI,MAAM,EAAE,EAAE;AACd,IAAI,GAAG,EAAE,CAAC;AACV,CAAC,CAAC;AACF,IAAI,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B;AACA;AACA,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;AACtD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9C,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAClD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;AACtD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC5C,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;AACxD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;AAC1D,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;AACxD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAChD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAChD,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C,IAAI,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B;AACA;AACA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAChC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACpC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACnC;AACA;AACA;AACO,SAAS,YAAY,CAAC,GAAG,EAAE;AAClC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACtB;AACA,IAAI,IAAI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACjC,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL;AACA,IAAI,IAAI,SAAS,GAAG,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACpD,IAAI,IAAI,SAAS,EAAE;AACnB,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC;AACvB;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,EAAE,EAAE,CAAC;AACX,IAAI,UAAU,GAAG;AACjB,IAAI,yBAAyB,EAAE,0BAA0B;AACzD,IAAI,eAAe,EAAE,eAAe;AACpC,IAAI,wBAAwB,EAAE,yBAAyB;AACvD,IAAI,wBAAwB,EAAE,yBAAyB;AACvD,IAAI,oBAAoB,EAAE,qBAAqB;AAC/C,IAAI,4BAA4B,EAAE,6BAA6B;AAC/D,IAAI,IAAI,EAAE,UAAU;AACpB,CAAC,CAAC;AAC0B,CAAC,EAAE,GAAG,EAAE;AACpC,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,yBAAyB,CAAC,GAAG,0BAA0B;AAC9E,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,eAAe,CAAC,GAAG,eAAe;AACzD,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,wBAAwB,CAAC,GAAG,yBAAyB;AAC5E,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,wBAAwB,CAAC,GAAG,yBAAyB;AAC5E,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,4BAA4B,CAAC,GAAG,6BAA6B;AACpF,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU;AACzC,IAAI,EAAE,EAAE;AACR,IAAI,sBAAsB,IAAI,EAAE,GAAG,EAAE;AACrC,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,yBAAyB,CAAC,GAAG,qCAAqC;AACzF,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,eAAe,CAAC,GAAG,0BAA0B;AACpE,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,wBAAwB,CAAC,GAAG,oCAAoC;AACvF,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,wBAAwB,CAAC,GAAG,oCAAoC;AACvF,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,oBAAoB,CAAC,GAAG,gCAAgC;AAC/E,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,4BAA4B,CAAC,GAAG,wCAAwC;AAC/F,IAAI,EAAE,CAAC,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,qBAAqB;AACpD,IAAI,EAAE,CAAC,CAAC;AACR,IAAI,OAAO,GAAG;AACd,IAAI,YAAY,EAAE,gBAAgB;AAClC,IAAI,sBAAsB,EAAE,yBAAyB;AACrD,IAAI,YAAY,EAAE,cAAc;AAChC,IAAI,8BAA8B,EAAE,wCAAwC;AAC5E,IAAI,2BAA2B,EAAE,qCAAqC;AACtE,IAAI,YAAY,EAAE,cAAc;AAChC,IAAI,aAAa,EAAE,eAAe;AAClC,IAAI,gBAAgB,EAAE,kBAAkB;AACxC,IAAI,2BAA2B,EAAE,YAAY;AAC7C,IAAI,2BAA2B,EAAE,mBAAmB;AACpD,IAAI,aAAa,EAAE,eAAe;AAClC,IAAI,+BAA+B,EAAE,iCAAiC;AACtE,IAAI,8BAA8B,EAAE,+BAA+B;AACnE,IAAI,uBAAuB,EAAE,6CAA6C;AAC1E,IAAI,iBAAiB,EAAE,wBAAwB;AAC/C,IAAI,iCAAiC,EAAE,SAAS,GAAG,UAAU,CAAC,eAAe,GAAG,gCAAgC,GAAG,UAAU,CAAC,eAAe,GAAG,YAAY,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,gCAAgC,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,QAAQ;AACpT,IAAI,mBAAmB,EAAE,sBAAsB;AAC/C,IAAI,wBAAwB,EAAE,SAAS,GAAG,UAAU,CAAC,eAAe,GAAG,gCAAgC,GAAG,UAAU,CAAC,eAAe,GAAG,YAAY,GAAG,UAAU,CAAC,eAAe,GAAG,+CAA+C,GAAG,UAAU,CAAC,eAAe,GAAG,kDAAkD,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,gCAAgC,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,YAAY,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,+CAA+C,GAAG,sBAAsB,CAAC,UAAU,CAAC,eAAe,CAAC,GAAG,8CAA8C;AAC7pB,IAAI,cAAc,EAAE,qBAAqB;AACzC,IAAI,sBAAsB,EAAE,+CAA+C;AAC3E,CAAC,CAAC;AACF,IAAI,OAAO,GAAG;AACd,IAAI,WAAW,EAAE,CAAC,CAAC;AACnB,IAAI,iCAAiC,EAAE,GAAG;AAC1C,CAAC;;AC1ED;AACA;AACA;AACA;AACA;AAMA,MAAM,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;AACjB,CAAC,CAAC;AACF,MAAM,aAAa,GAAG,CAAC,MAAM,EAAE,MAAM,KAAK;AAC1C,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,IAAI,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,IAAI,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAC5C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC/C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC/C,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,OAAO,CAAC,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE;AACzD,QAAQ,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC,QAAQ,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACpC,QAAQ,IAAI,MAAM,KAAK,MAAM,EAAE;AAC/B,YAAY,CAAC,EAAE,CAAC;AAChB,YAAY,CAAC,EAAE,CAAC;AAChB,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,IAAI,MAAM,KAAK,SAAS,KAAK,MAAM,KAAK,SAAS,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE;AAC/E,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE,CAAC;AAChB,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,IAAI,MAAM,KAAK,SAAS,KAAK,MAAM,KAAK,SAAS,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE;AAC/E,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,YAAY,CAAC,EAAE,CAAC;AAChB,YAAY,SAAS;AACrB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnE,SAAS,UAAU,CAAC,aAAa,EAAE;AAC1C,IAAI,OAAO,aAAa,YAAY,GAAG,CAAC;AACxC,CAAC;AAIM,MAAM,kBAAkB,GAAG,CAAC,KAAK,KAAK;AAC7C,IAAI,MAAM,KAAK,GAAG,KAAK,KAAK,OAAO,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;AACpE,IAAI,OAAO,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC;AACK,MAAM,iBAAiB,SAAS,aAAa,CAAC;AACrD,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,iBAAiB,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AAC3F,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,QAAQ,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC;AAClD,QAAQ,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,WAAW,CAAC;AACrD,QAAQ,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAC1C,KAAK;AACL,IAAI,WAAW,OAAO,GAAG;AACzB,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IAAI,WAAW,OAAO,GAAG;AACzB,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IAAI,WAAW,cAAc,GAAG;AAChC,QAAQ,OAAO;AACf,YAAY,gBAAgB,EAAE,MAAM,SAAS;AAC7C,YAAY,sBAAsB,EAAE,MAAM,CAAC;AAC3C,YAAY,gBAAgB,EAAE,MAAM,CAAC;AACrC,YAAY,iBAAiB,EAAE,MAAM,KAAK;AAC1C,YAAY,aAAa,EAAE,MAAM,KAAK;AACtC,YAAY,YAAY,EAAE,MAAM,SAAS;AACzC,YAAY,cAAc,EAAE,MAAM,SAAS;AAC3C,YAAY,+BAA+B,EAAE,MAAM,KAAK;AACxD,YAAY,+BAA+B,EAAE,MAAM,SAAS;AAC5D,YAAY,+BAA+B,EAAE,MAAM,KAAK;AACxD,YAAY,+BAA+B,EAAE,MAAM,SAAS;AAC5D,YAAY,gCAAgC,EAAE,MAAM,SAAS;AAC7D,YAAY,0BAA0B,EAAE,MAAM,SAAS;AACvD,YAAY,2BAA2B,EAAE,MAAM,SAAS;AACxD,YAAY,2BAA2B,EAAE,MAAM,IAAI;AACnD,SAAS,CAAC;AACV,KAAK;AACL;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,KAAK;AACL;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;AACjD,QAAQ,IAAI,KAAK,EAAE;AACnB;AACA,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;AAC3C,gBAAgB,MAAM,OAAO,GAAG,YAAY,KAAK,OAAO,CAAC,WAAW,CAAC;AACrE,gBAAgB,IAAI,CAAC,cAAc,GAAG,OAAO,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACpF,aAAa;AACb,SAAS;AACT,aAAa;AACb;AACA,YAAY,IAAI,UAAU,CAAC,YAAY,CAAC,EAAE;AAC1C,gBAAgB,IAAI,YAAY,CAAC,IAAI,EAAE;AACvC,oBAAoB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5E,oBAAoB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC;AAC9D,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,sBAAsB,CAAC,KAAK,EAAE;AAClC,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA,IAAI,oBAAoB,CAAC,YAAY,EAAE;AACvC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;AAC/C,KAAK;AACL,IAAI,gBAAgB,GAAG;AACvB,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC;AACnC,KAAK;AACL,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;AACxC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;AACtE,SAAS;AACT,aAAa;AACb,YAAY,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;AACnD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,aAAa,CAAC,CAAC,EAAE,aAAa,EAAE;AACpC,QAAQ,IAAI,aAAa,IAAI,CAAC,EAAE;AAChC,YAAY,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACtE,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,cAAc,CAAC,CAAC,EAAE,aAAa,EAAE;AACrC,QAAQ,IAAI,aAAa,IAAI,CAAC,EAAE;AAChC,YAAY,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,UAAU,CAAC,MAAM;AACzB,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;AACnD,gBAAgB,IAAI,CAAC,+BAA+B,EAAE,CAAC;AACvD,aAAa;AACb,SAAS,EAAE,CAAC,CAAC,CAAC;AACd,KAAK;AACL;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,EAAE,cAAc,EAAE,aAAa,EAAE;AACxD,QAAQ,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,WAAW,CAAC;AAChE,QAAQ,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC;AAC5D,QAAQ,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,YAAY,CAAC;AAClE,QAAQ,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,WAAW,CAAC;AAChE,QAAQ,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC;AACtD,QAAQ,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACpD,QAAQ,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC;AACxD,QAAQ,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,UAAU,CAAC;AAC3D,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE;AAC1C,YAAY,IAAI,SAAS,IAAI,KAAK,EAAE;AACpC,gBAAgB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvC,gBAAgB,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxC,aAAa;AACb,iBAAiB,IAAI,WAAW,IAAI,MAAM,EAAE;AAC5C,gBAAgB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvC,gBAAgB,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzC,aAAa;AACb,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;AACjE,QAAQ,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;AACjC,YAAY,YAAY,GAAG,aAAa,CAAC;AACzC,YAAY,IAAI,YAAY,GAAG,CAAC,EAAE;AAClC;AACA;AACA,gBAAgB,OAAO;AACvB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,SAAS,CAAC;AACtB,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW;AAC5C,aAAa,CAAC,IAAI,CAAC,WAAW,IAAI,YAAY,CAAC,EAAE;AACjD,YAAY,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAC5D,SAAS;AACT,aAAa,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,SAAS,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,EAAE;AACxF,YAAY,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAC5D,SAAS;AACT,aAAa,IAAI,MAAM,EAAE;AACzB,YAAY,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,SAAS,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAChD,SAAS;AACT,aAAa,IAAI,OAAO,IAAI,OAAO,EAAE;AACrC,YAAY,IAAI,cAAc,EAAE;AAChC;AACA;AACA,gBAAgB,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAC5C,gBAAgB,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,GAAG,IAAI,OAAO,EAAE;AACjE,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAChD,gBAAgB,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AACnE,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC;AAC9C,QAAQ,IAAI,SAAS,KAAK,SAAS,EAAE;AACrC,YAAY,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;AAChD,YAAY,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;AAC/C,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;AACvD,QAAQ,IAAI,KAAK,KAAK,OAAO,CAAC,WAAW,EAAE;AAC3C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACpE,QAAQ,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACxC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACvC,KAAK;AACL;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;AACtD,QAAQ,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,SAAS,IAAI,KAAK,EAAE;AAChC,YAAY,IAAI,IAAI,CAAC,UAAU,EAAE;AACjC,gBAAgB,SAAS,GAAG,CAAC,CAAC;AAC9B,aAAa;AACb,iBAAiB;AACjB;AACA,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AACjD,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,SAAS,GAAG,CAAC,EAAE;AAC3B,YAAY,IAAI,IAAI,CAAC,UAAU,EAAE;AACjC,gBAAgB,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;AAChE,aAAa;AACb,iBAAiB;AACjB;AACA,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AACjD,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACzC,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,IAAI,gBAAgB,GAAG;AACvB,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;AAC9D,QAAQ,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AACjD,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE;AACrC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;AAC5C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;AAC5E,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,GAAG,EAAE;AAC7B,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAClC,QAAQ,MAAM,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AAC1D,QAAQ,IAAI,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7D,YAAY,GAAG,CAAC,cAAc,EAAE,CAAC;AACjC,SAAS;AACT,KAAK;AACL,IAAI,0BAA0B,CAAC,KAAK,EAAE,aAAa,GAAG,IAAI,EAAE;AAC5D,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;AAC3C,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,WAAW,EAAE;AACzD,YAAY,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACrF,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACzC,gBAAgB,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AAC1F,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACtE,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,YAAY,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACvE,SAAS;AACT,QAAQ,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC;AACtD,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpC,QAAQ,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC3C,KAAK;AACL,IAAI,yBAAyB,CAAC,QAAQ,EAAE,aAAa,GAAG,IAAI,EAAE;AAC9D,QAAQ,MAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACjE,QAAQ,MAAM,IAAI,GAAG,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACxD,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;AAC5C,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC7E,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACzC,gBAAgB,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC9E,aAAa;AACb,SAAS;AACT,QAAQ,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AACxC,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1E,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACzC,gBAAgB,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3E,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;AACvC,QAAQ,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACpD,KAAK;AACL;AACA;AACA;AACA,IAAI,iCAAiC,CAAC,KAAK,EAAE;AAC7C;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,WAAW,EAAE;AACzD,YAAY,IAAI,CAAC,qBAAqB;AACtC,gBAAgB,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,KAAK,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;AACtF,SAAS;AACT,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,KAAK,IAAI,CAAC;AAClE,QAAQ,MAAM,aAAa,GAAG,aAAa,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC;AAC3F,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,WAAW,EAAE;AACzD,YAAY,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;AAClG,SAAS;AACT,QAAQ,MAAM,kBAAkB,GAAG,aAAa,GAAG,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;AACvF,QAAQ,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,KAAK,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;AAC3F,KAAK;AACL,IAAI,mBAAmB,CAAC,KAAK,EAAE;AAC/B,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,OAAO,CAAC,WAAW,IAAI,KAAK,KAAK,CAAC,EAAE;AAC3E;AACA;AACA;AACA,YAAY,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3D,SAAS;AACT,aAAa,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,EAAE;AAClF,YAAY,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;AAChF,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI,+BAA+B,GAAG;AACtC,QAAQ,IAAI,WAAW,GAAG,CAAC,CAAC;AAC5B,QAAQ,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,QAAQ;AACnD,YAAY,IAAI,CAAC,cAAc,KAAK,OAAO,CAAC,WAAW,EAAE;AACzD,YAAY,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;AAC9C,SAAS;AACT,aAAa,IAAI,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,EAAE;AAClF,YAAY,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC9C,KAAK;AACL,IAAI,aAAa,CAAC,KAAK,EAAE;AACzB,QAAQ,IAAI,KAAK,YAAY,GAAG,EAAE;AAClC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChC,gBAAgB,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;AAC/G,aAAa;AACb,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;AAClC,gBAAgB,OAAO,IAAI,CAAC;AAC5B,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,YAAY,GAAG,KAAK,CAAC;AACzC,gBAAgB,KAAK,MAAM,KAAK,IAAI,KAAK,EAAE;AAC3C,oBAAoB,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC/D,oBAAoB,IAAI,YAAY,EAAE;AACtC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,OAAO,YAAY,CAAC;AACpC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC5C,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC/B,gBAAgB,MAAM,IAAI,KAAK,CAAC,qFAAqF;AACrH,oBAAoB,KAAK,CAAC,CAAC;AAC3B,aAAa;AACb,YAAY,OAAO,KAAK,KAAK,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAChF,SAAS;AACT,aAAa;AACb,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;AACzD,QAAQ,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,QAAQ,CAAC;AAC9C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,yBAAyB,CAAC,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE;AAC3D,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE;AACjE,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,YAAY,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE;AAC/C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;AACjE,SAAS;AACT,aAAa;AACb,YAAY,IAAI,aAAa,IAAI,KAAK,EAAE;AACxC,gBAAgB,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;AACtE,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,KAAK,KAAK,CAAC;AACpE,gBAAgB,IAAI,aAAa,EAAE;AACnC,oBAAoB,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACzE,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IAAI,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,aAAa,GAAG,IAAI,EAAE;AAC3D,QAAQ,IAAI,iBAAiB,GAAG,KAAK,CAAC;AACtC,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;AACjC,YAAY,iBAAiB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC;AACrF,SAAS;AACT,aAAa;AACb,YAAY,iBAAiB,GAAG,KAAK,CAAC;AACtC,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC/D,QAAQ,IAAI,iBAAiB,EAAE;AAC/B,YAAY,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAS;AACT,aAAa;AACb,YAAY,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACjC,SAAS;AACT,QAAQ,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;AAC9D,KAAK;AACL;;ACzeA;AACA;AACA;AACA;AACA;AAaA,SAAS,cAAc,CAAC,QAAQ,EAAE,QAAQ,GAAG,EAAE,EAAE;AACjD,IAAI,IAAI,SAAS,CAAC;AAClB;AACA,IAAI,OAAO,UAAU,WAAW,GAAG,IAAI,EAAE;AACzC,QAAQ,YAAY,CAAC,SAAS,CAAC,CAAC;AAChC,QAAQ,SAAS,GAAG,UAAU,CAAC,MAAM;AACrC,YAAY,QAAQ,CAAC,WAAW,CAAC,CAAC;AAClC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACrB,KAAK,CAAC;AACN,CAAC;AACD,MAAM,UAAU,GAAG,CAAC,OAAO,KAAK;AAChC,IAAI,OAAO,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AACjD,CAAC,CAAC;AACF,SAAS,+BAA+B,GAAG;AAC3C,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAChD,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,KAAK;AAC3C;AACA;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;AAC7C,KAAK,CAAC,CAAC;AACP,IAAI,WAAW,EAAE,CAAC;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,SAAS,WAAW,CAAC;AAC1C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;AACpD,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AACpC,QAAQ,IAAI,CAAC,kBAAkB,IAAI,MAAM;AACzC;AACA,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9C;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB,QAAQ,MAAM,iBAAiB,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzE,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,WAAW,GAAG,IAAI,KAAK;AACvD,YAAY,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,YAAY,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAC3C,SAAS,CAAC;AACV,KAAK;AACL;AACA,IAAI,MAAM,iBAAiB,GAAG;AAC9B;AACA,QAAQ,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,iBAAiB,EAAE,CAAC;AACvD,QAAQ,MAAM,IAAI,CAAC,UAAU,CAAC;AAC9B,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACvF,QAAQ,MAAM,SAAS,GAAG,EAAE,CAAC;AAC7B,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;AAClC,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,gBAAgB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1C,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AAC5E,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACvD,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AAChC,QAAQ,MAAM,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AAC7C,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1D,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC7C,aAAa;AACb,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC/B,gBAAgB,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3C,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AACzC,SAAS;AACT,aAAa;AACb,YAAY,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChG,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT,QAAQ,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AAC7F,QAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;AAC3C,KAAK;AACL,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;AAChC,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC9B,gBAAgB,OAAO,IAAI,CAAC;AAC5B,aAAa;AACb,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACrC,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,EAAE,CAAC;AAC5B,QAAQ,KAAK,MAAM,KAAK,IAAI,KAAK,EAAE;AACnC,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C,SAAS;AACT,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;AACzD,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC,CAAC;AAClB,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1E,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,KAAK,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;AACzF,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC;AACxD,QAAQ,OAAOD,CAAI,CAAC,CAAC;AACrB;AACA;AACA,mBAAmB,EAAE,QAAQ,CAAC;AAC9B,gBAAgB,EAAEW,CAAS,CAAC,IAAI,CAAC,CAAC;AAClC,sBAAsB,EAAEA,CAAS,CAAC,SAAS,CAAC,CAAC;AAC7C;AACA,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC;AACpC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC;AACpC,oBAAoB,EAAE,IAAI,CAAC,UAAU,CAAC;AACtC,4BAA4B,EAAE,IAAI,CAAC,iBAAiB,CAAC;AACrD,8BAA8B,EAAE,IAAI,CAAC,mBAAmB,CAAC;AACzD;AACA,QAAQ,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACnC;AACA,IAAI,CAAC,CAAC;AACN,KAAK;AACL,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,MAAM,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AACvF,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACnE,YAAY,OAAOX,CAAI,CAAC,CAAC;AACzB,sCAAsC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC1D,MAAM,CAAC,CAAC;AACR,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,YAAY,GAAG;AACnB,QAAQ,KAAK,CAAC,YAAY,EAAE,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAChC;AACA,YAAY,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpD;AACA,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;AAC1B,SAAS;AACT,KAAK;AACL,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,EAAE;AAChD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACrD,YAAY,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACzD,SAAS;AACT,KAAK;AACL,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,EAAE;AAChD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACrD,YAAY,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAS;AACT,KAAK;AACL,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,EAAE;AAChD,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACrD,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACtC,YAAY,MAAM,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AACtD,YAAY,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;AACzE,SAAS;AACT,KAAK;AACL,IAAI,iBAAiB,CAAC,GAAG,EAAE;AAC3B,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACnD;AACA,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC9B,gBAAgB,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,gBAAgB,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACnD;AACA,gBAAgB,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAClC,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,aAAa;AACb,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9C,YAAY,IAAI,OAAO,CAAC,QAAQ,EAAE;AAClC,gBAAgB,OAAO;AACvB,aAAa;AACb,YAAY,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;AACjD,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7C,YAAY,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,EAAE,MAAM,KAAK,aAAa,EAAE,QAAQ,CAAC,CAAC;AAChG,YAAY,GAAG,CAAC,eAAe,EAAE,CAAC;AAClC,SAAS;AACT,KAAK;AACL,IAAI,gBAAgB,CAAC,GAAG,EAAE;AAC1B,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;AACxC,QAAQ,KAAK,MAAM,QAAQ,IAAI,IAAI,EAAE;AACrC,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3B,YAAY,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACjE,gBAAgB,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnD,aAAa;AACb,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC9B,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC,CAAC;AAClB,KAAK;AACL,IAAI,aAAa,GAAG;AACpB,QAAQ,IAAI,CAAC,UAAU,GAAG;AAC1B,YAAY,gBAAgB,EAAE,MAAM;AACpC,gBAAgB,IAAI,IAAI,CAAC,OAAO,EAAE;AAClC,oBAAoB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC7C,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,CAAC;AACzB,aAAa;AACb,YAAY,sBAAsB,EAAE,IAAI,CAAC,mBAAmB;AAC5D,YAAY,2BAA2B,EAAE,CAAC,KAAK,EAAE,IAAI,KAAK;AAC1D,gBAAgB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;AACjD,gBAAgB,IAAI,CAAC,WAAW,EAAE;AAClC,oBAAoB,OAAO,EAAE,CAAC;AAC9B,iBAAiB;AACjB,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAgB,OAAO,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACjE,aAAa;AACb,YAAY,2BAA2B,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,KAAK;AAC/D,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACnC,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACpD,iBAAiB;AACjB,aAAa;AACb,YAAY,gBAAgB,EAAE,CAAC,KAAK,KAAK;AACzC,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,OAAO,CAAC,KAAK,EAAE,CAAC;AACpC,iBAAiB;AACjB,aAAa;AACb,YAAY,0BAA0B,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;AAC1D,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,IAAI,EAAE;AAC1B,oBAAoB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1C,iBAAiB;AACjB,aAAa;AACb,YAAY,YAAY,EAAE,CAAC,KAAK,KAAK;AACrC,gBAAgB,MAAM,IAAI,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC/D,gBAAgB,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC;AACxC,gBAAgB,MAAM,EAAE,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC3D,gBAAgB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACvC,aAAa;AACb,YAAY,cAAc,EAAE,CAAC,KAAK,EAAE,IAAI,KAAK;AAC7C,gBAAgB,MAAM,IAAI,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC/D,gBAAgB,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC9C,gBAAgB,MAAM,EAAE,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC7D,gBAAgB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACvC,aAAa;AACb,YAAY,iBAAiB,EAAE,MAAM;AACrC,gBAAgB,OAAO,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACrD,aAAa;AACb,YAAY,aAAa,EAAE,MAAM;AACjC,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7C,gBAAgB,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;AACnD,gBAAgB,OAAO,IAAI,CAAC,aAAa,KAAK,OAAO,CAAC;AACtD,aAAa;AACb,YAAY,+BAA+B,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;AAC/D,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtC,aAAa;AACb,YAAY,+BAA+B,EAAE,CAAC,KAAK,KAAK;AACxD,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACrC,aAAa;AACb,YAAY,+BAA+B,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;AAC/D,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtC,aAAa;AACb,YAAY,+BAA+B,EAAE,CAAC,KAAK,KAAK;AACxD,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO,KAAK,CAAC;AACjC,iBAAiB;AACjB,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC;AACrC,aAAa;AACb,YAAY,gCAAgC,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK;AAChE,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvC,aAAa;AACb,SAAS,CAAC;AACV,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,KAAK;AACL,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,GAAG,KAAK,EAAE;AACtC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACvC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACjC,YAAY,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AACtC,SAAS;AACT,KAAK;AACL,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACvC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAClC,YAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,SAAS;AACT,KAAK;AACL,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACjC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AACnD,KAAK;AACL,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChE,SAAS;AACT,KAAK;AACL,IAAI,mBAAmB,CAAC,CAAC,EAAE;AAC3B,QAAQ,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AAChC,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL,IAAI,MAAM,CAAC,WAAW,GAAG,IAAI,EAAE;AAC/B,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;AAC/B,SAAS;AACT,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACvC,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC/B,SAAS;AACT,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,IAAI,CAAC,cAAc,EAAE;AACrC,gBAAgB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AAC5C,oBAAoB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAClD,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;AACnC,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,mBAAmB,GAAG;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC3B,YAAY,OAAO,CAAC,CAAC,CAAC;AACtB,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAChC,YAAY,OAAO,CAAC,CAAC,CAAC;AACtB,SAAS;AACT,QAAQ,MAAM,iBAAiB,GAAG,qBAAqB,EAAE,CAAC;AAC1D,QAAQ,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;AACvC,YAAY,OAAO,CAAC,CAAC,CAAC;AACtB,SAAS;AACT,QAAQ,KAAK,IAAI,CAAC,GAAG,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAChE,YAAY,MAAM,UAAU,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;AACpD,YAAY,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AACxC,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACtD,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC,CAAC;AAClB,KAAK;AACL,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACvC,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACrC,gBAAgB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACnC,gBAAgB,MAAM;AACtB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;AACvC,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;AAClC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,IAAI,GAAG;AACX,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;AAClC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;AACxB,SAAS;AACT,KAAK;AACL,CAAC;AACD,UAAU,CAAC;AACX,IAAIS,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAID,GAAK,CAAC,sBAAsB,CAAC;AACjC,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC1C,UAAU,CAAC;AACX,IAAIM,GAAkB,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC;AACrC,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;AACX,IAAIA,GAAkB,CAAC,EAAE,EAAE,IAAI,EAAE,gBAAgB,CAAC;AAClD,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;AACnD,UAAU,CAAC;AACX,IAAIL,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC3D,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,IAAI,QAAQ,CAAC,UAAU,QAAQ,EAAE,QAAQ,EAAE;AAC3C,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAClD,SAAS;AACT,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;AACpC,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;AAC1B,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACnD,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,IAAI,QAAQ,CAAC,UAAU,SAAS,EAAE,QAAQ,EAAE;AAC5C,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;AACpC,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;AAC/B,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAC9B,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC/B,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C,UAAU,CAAC;AACX,IAAIA,GAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC9C,IAAI,QAAQ,CAAC,UAAU,KAAK,EAAE;AAC9B,QAAQ,IAAI,EAAE,EAAE,EAAE,CAAC;AACnB,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAClJ,YAAY,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AAC7C,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AACxD,aAAa;AACb,SAAS;AACT,aAAa,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAClD,YAAY,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AAChE,YAAY,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACzC,SAAS;AACT,KAAK,CAAC;AACN,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;;AC5ehD;AACA;AACA;AACA;AACA;AAEO,MAAM,MAAM,GAAGX,GAAG,CAAC,CAAC,i0GAAi0G,CAAC;;ACN71G;AACA;AACA;AACA;AACA;AAQA,IAAI,IAAI,GAAG,MAAM,IAAI,SAAS,QAAQ,CAAC;AACvC,CAAC,CAAC;AACF,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AACvB,IAAI,GAAG,UAAU,CAAC;AAClB,IAAIG,GAAa,CAAC,UAAU,CAAC;AAC7B,CAAC,EAAE,IAAI,CAAC;;ACyBF,SAAU,kBAAkB,CAChC,GAAkB,EAAA;AAElB,IAAA,QACE,OAAO,GAAG,KAAK,QAAQ;QACvB,GAAG,CAAC,IAAI,KAAK,SAAS;QACtB,GAAG,CAAC,KAAK,KAAK,SAAS;AACvB,QAAA,GAAG,CAAC,MAAM,KAAK,SAAS,EACxB;AACJ,CAAC;AAEK,SAAU,iBAAiB,CAAC,GAAkB,EAAA;AAClD,IAAA,QACE,OAAO,GAAG,KAAK,QAAQ;QACvB,GAAG,CAAC,IAAI,KAAK,SAAS;QACtB,GAAG,CAAC,KAAK,KAAK,SAAS;AACvB,QAAA,GAAG,CAAC,MAAM,KAAK,SAAS,EACxB;AACJ,CAAC;AAEK,SAAU,kBAAkB,CAChC,GAAkB,EAAA;AAElB,IAAA,QACE,OAAO,GAAG,KAAK,QAAQ;QACvB,GAAG,CAAC,IAAI,KAAK,SAAS;QACtB,GAAG,CAAC,KAAK,KAAK,SAAS;AACvB,QAAA,GAAG,CAAC,MAAM,KAAK,SAAS,EACxB;AACJ;;ACvEO,MAAM,OAAO,GAAG;AACrksitpHT,EAAA,CAAA;CACF,CAAC;AAOF,MAAM,eAAe,GAA8C;AACjE,IAAA,EAAE,EAAE,MAAM;AACV,IAAA,MAAM,EAAE,OAAO;AACf,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,OAAO,EAAE,OAAO;AAChB,IAAA,QAAQ,EAAE,OAAO;AACjB,IAAA,QAAQ,EAAE,QAAQ;AAClB,IAAA,QAAQ,EAAE,QAAQ;AAClB,IAAA,QAAQ,EAAE,QAAQ;CACnB,CAAC;SACc,SAAS,CACvB,OAAe,EACf,QAAgB,EAChB,OAAe,EAAA;IAEf,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC;IACpE,OAAO,OAAO,CAAC,aAAa,KAAb,IAAA,IAAA,aAAa,cAAb,aAAa,GAAI,OAAO,CAAC,CAAC;AAC3C;;AC/jSA,MAAM,UAAU,GAAuC,EAAE,CAAC;AAEnD,eAAe,cAAc,CAClC,GAAgB,EAChB,OAAe,EAAA;;IAEf,MAAM,MAAM,GAAkB,EAAE,CAAC;IAEjC,MAAM,QAAQ,GAAG,OAAO,CAAC;IACzB,IAAI,OAAO,GAAG,MAAM,CAAC;IACrB,IAAI,QAAQ,GAAG,GAAG,CAAC;IACnB,IAAI,OAAO,GAAG,GAAG,CAAC;IAElB,IAAI,GAAG,CAAC,eAAe;AACrB,QAAA,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG;YAC7B,CAAA,EAAA,GAAA,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE;YACjD,CAAA,EAAA,GAAA,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE;YAClD,CAAA,EAAA,GAAA,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE;SAClD,CAAC;AAEJ,IAAA,eAAe,YAAY,CACzB,GAAW,EACX,OAAe,EAAA;QAEf,IAAI,CAAC,MAAM,CAAC,MAAM;AAAE,YAAA,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,UAAU,CAAC,OAAO,CAAC;AAAE,YAAA,OAAO,UAAU,CAAC,OAAO,CAAE,CAAC;AAErD,QAAA,MAAM,MAAM,GAAW,IAAI,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAEvD,QAAA,eAAe,QAAQ,CACrB,GAAW,EACX,OAAe,EAAA;AAEf,YAAA,OAAO,IAAI,OAAO,CAAC,OAAO,IAAG;gBAC3B,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAA8B,KAAI;AACpE,oBAAA,IAAI,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO;AACvD,wBAAA,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACb,yBAAA,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAClC,wBAAA,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC5C,MAAM,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnD,wBAAA,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,GAAG,EAAE,CAAC;wBACtD,MAAM,CAAC,IAAI,CAAC;AACV,4BAAA,KAAK,EAAE,WAAW;4BAClB,OAAO,EAAE,CAAG,EAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAI,CAAA,EAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAI,CAAA,EAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAI,CAAA,EAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAG,EAAA,YAAY,CAAE,CAAA;AACtF,yBAAA,CAAC,CAAC;AACJ,qBAAA;AACH,iBAAC,CAAC,CAAC;AACH,gBAAA,MAAM,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AACtD,aAAC,CAAC,CAAC;SACJ;AAED,QAAA,UAAU,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;QAE/B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAA8B,KAAI;AACpE,gBAAA,IAAI,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAC9B,oBAAA,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM;wBAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;;;wBAEhC,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAC1C,iBAAA;AACH,aAAC,CAAC,CAAC;AACH,YAAA,MAAM,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;KACJ;IAED,MAAM,QAAQ,GAAG,MAAM,YAAY,CACjC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,EACrC,MAAM,OAAO,CAAA,EAAG,QAAQ,CAAG,EAAA,OAAO,CAAM,IAAA,CAAA,CACzC,CAAC;AAEF,IAAA,MAAM,MAAM,GAAG,MAAM,QAAQ,CAC3B,IAAI,aAAa,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAC1C,QAAQ,CACT,CAAC;IAEF,IAAI,MAAM,CAAC,KAAK;QAAE,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;AAEpE,IAAA,OAAO,MAAM,CAAC;AAChB;;ACrFO,eAAe,WAAW,CAAC,OAAgB,EAAA;IAChD,IAAI,aAAa,CAAC,OAAO,CAAC;QACxB,OAAO;AACL,YAAA;AACE,gBAAA,KAAK,EAAE,CAAA,4CAAA,EAA+C,OAAO,CAAC,OAAO,CAAE,CAAA;AACvE,gBAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAC,OAAO,CAAE,CAAA;AAC9B,aAAA;SACF,CAAC;AAEJ,IAAA,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,IAAI,KAAK,KAAK,IAAI;QAChB,OAAO;AACL,YAAA;gBACE,KAAK,EAAE,6CAA6C,OAAO,CAAC,YAAY,CACtE,MAAM,CACP,CAAE,CAAA;AACH,gBAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAC,OAAO,CAAE,CAAA;AAC9B,aAAA;SACF,CAAC;AAEJ,IAAA,OAAO,EAAE,CAAC;AACZ;;ACtBA,eAAe,WAAW,CACxB,GAA8B,EAC9B,MAAiC,EAAA;;AAEjC,IAAA,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC;IAE/B,MAAM,aAAa,GAAG,CAAA,EAAA,GAAA,KAAK;AACxB,SAAA,aAAa,CAAC,CAAA,UAAA,EAAa,GAAG,CAAA,yBAAA,EAA4B,MAAM,CAAA,EAAA,CAAI,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACpE,YAAY,CAAC,MAAM,CAAC,CAAC;AAEzB,IAAA,OAAO,KAAK,CAAC,IAAI,CACf,KAAK,CAAC,gBAAgB,CACpB,CAAsD,mDAAA,EAAA,aAAa,CAAqC,mCAAA,CAAA,CACzG,CACF,CAAC;AACJ,CAAC;AAED,eAAe,kBAAkB,CAC/B,MAAiC,EAAA;AAEjC,IAAA,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC;IAE/B,OAAO,KAAK,CAAC,IAAI,CACf,KAAK,CAAC,gBAAgB,CACpB,CAAoE,iEAAA,EAAA,MAAM,CAAO,KAAA,CAAA;QAC/E,CAAiC,+BAAA,CAAA,CACpC,CACF,CAAC;AACJ,CAAC;AAED,eAAe,oBAAoB,CAAC,MAAe,EAAA;;IACjD,MAAM,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACrC,IAAA,IAAI,CAAC,EAAE;AAAE,QAAA,OAAO,EAAE,CAAC;IAEnB,MAAM,aAAa,GAAG,CAAA,EAAA,GAAA,MAAM;SACzB,OAAO,CAAC,mBAAmB,CAAC,MAC3B,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAC,CAAqB,kBAAA,EAAA,EAAE,CAAI,EAAA,CAAA,CAAC,CAAC;AAC/C,IAAA,MAAM,MAAM,GAAG,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,YAAY,CAAC,MAAM,CAAC,CAAC;AAEnD,IAAA,IAAI,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC9D,QAAA,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAEpC,IAAA,MAAM,GAAG,GAAG,CAAA,EAAA,GAAA,aAAa,aAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAC,KAAK,CAAC,CAAC;AAC9D,IAAA,OAAO,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAClC,CAAC;AAED,eAAec,0BAAwB,CACrC,MAAe,EAAA;AAEf,IAAA,MAAM,iBAAiB,GAAG,MAAM,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAC7D,IAAA,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,GAAG,CAC/C,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAE,CAC/B,CAAC;IACF,MAAM,cAAc,GAAG,mBAAmB,CAAC,MAAM,CAC/C,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA,UAAA,EAAa,EAAE,CAAI,EAAA,CAAA,CAAC,CACjD,CAAC;IAEF,OAAO,cAAc,CAAC,GAAG,CAAC,SAAS,KAAK;AACtC,QAAA,WAAW,EAAE,oBAAoB;QACjC,KAAK,EAAE,CAA+C,4CAAA,EAAA,MAAM,CAAC,YAAY,CACvE,IAAI,CACJ,CAAU,OAAA,EAAA,SAAS,CAAE,CAAA;QACvB,OAAO,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAE,CAAA;AACxC,KAAA,CAAC,CAAC,CAAC;AACN,CAAC;AAEM,eAAe,eAAe,CAAC,MAAe,EAAA;IACnD,MAAM,MAAM,GAAkB,EAAE,CAAC;AAEjC,IAAA,IAAI,MAAM,CAAC,OAAO,KAAK,QAAQ;AAAE,QAAA,OAAO,EAAE,CAAC;AAE3C,IAAA,MAAM,eAAe,GAAG,MAAMA,0BAAwB,CAAC,MAAM,CAAC,CAAC;AAC/D,IAAA,MAAM,cAAc,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAEtD,OAAO,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AACxD;;AC1EO,eAAe,WAAW,CAAC,OAAgB,EAAA;IAChD,IAAI,aAAa,CAAC,OAAO,CAAC;QACxB,OAAO;AACL,YAAA;AACE,gBAAA,KAAK,EAAE,CAAA,4CAAA,EAA+C,OAAO,CAAC,OAAO,CAAE,CAAA;AACvE,gBAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAC,OAAO,CAAE,CAAA;AAC9B,aAAA;SACF,CAAC;AAEJ,IAAA,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IACpC,IAAI,KAAK,KAAK,IAAI;QAChB,OAAO;AACL,YAAA;gBACE,KAAK,EAAE,6CAA6C,OAAO,CAAC,YAAY,CACtE,MAAM,CACP,CAAE,CAAA;AACH,gBAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAC,OAAO,CAAE,CAAA;AAC9B,aAAA;SACF,CAAC;AAEJ,IAAA,OAAO,EAAE,CAAC;AACZ;;ACzBA;AAWA,eAAe,qBAAqB,CAClC,OAAkC,EAClC,MAAiC,EAAA;;AAEjC,IAAA,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM;AAAE,QAAA,OAAO,IAAI,CAAC;IAErC,MAAM,YAAY,GAAG,gBAAgB,CAAC,MAAM,UAAU,EAAE,OAAQ,CAAC,CAAC;IAElE,QACE,MAAA,YAAY;AACT,SAAA,OAAO,CAAC,UAAU,IACjB,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAY,UAAA,CAAA,CAAC,CAAC,CACtD;AACA,SAAA,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,EACzE;AACJ,CAAC;AAED,eAAe,eAAe,CAAC,OAAgB,EAAA;;IAC7C,MAAM,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAEtC,IAAA,IAAI,CAAC,EAAE;AAAE,QAAA,OAAO,IAAI,CAAC;IAErB,MAAM,OAAO,GAAG,CAAA,EAAA,GAAA,OAAO;AACpB,SAAA,OAAO,CAAC,mBAAmB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAC3B,aAAa,CACb,CAAwB,qBAAA,EAAA,EAAE,CAA6B,0BAAA,EAAA,EAAE,CAAI,EAAA,CAAA,CAC9D,CAAC;AACJ,IAAA,MAAM,MAAM,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IAE7C,MAAM,SAAS,GAAG,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,aAAa,CAAC;AACzC,IAAA,MAAM,OAAO,GAAG,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,YAAY,CAAC,SAAS,CAAC,CAAC;AAEnD,IAAA,OAAO,qBAAqB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,+BAA+B,CACtC,QAAmC,EAAA;AAEnC,IAAA,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,aAAa;AAAE,QAAA,OAAO,EAAE,CAAC;AAEvD,IAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEnD,IAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAAE,QAAA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;AAE3E,IAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;AAC/B,QAAA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;AAE9C,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,eAAe,yBAAyB,CACtC,MAAe,EACf,GAAW,EAAA;;AAEX,IAAA,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC;AAC/B,IAAA,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC;AAE/B,IAAA,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAC/B,KAAK,CAAC,gBAAgB,CAAC,CAAa,UAAA,EAAA,GAAG,CAAkC,gCAAA,CAAA,CAAC,CAC3E,CAAC;AAEF,IAAA,MAAM,gBAAgB,GAAG,+BAA+B,CACtD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAM,CAAC,aAAa,CAAC,2BAA2B,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,0CAAE,IAAI,EAAE,CACvE,CAAC;AACF,IAAA,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CACrC,KAAK,CAAC,gBAAgB,CAAC,CAAmB,gBAAA,EAAA,GAAG,CAA2B,yBAAA,CAAA,CAAC,CAC1E,CAAC,MAAM,CAAC,EAAE,IAAI,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAE,CAAC,CAAC,CAAC;AAExE,IAAA,OAAO,cAAc,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;AACrD,CAAC;AAED,eAAe,kBAAkB,CAC/B,MAAe,EACf,GAAW,EAAA;AAEX,IAAA,MAAM,SAAS,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;IAEhD,IAAI,SAAS,IAAI,GAAG,KAAK,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC;QACrD,OAAO;AACL,YAAA;AACE,gBAAA,KAAK,EAAE,CAAsD,oDAAA,CAAA;gBAC7D,OAAO,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAE,CAAA;AACxC,aAAA;SACF,CAAC;AAEJ,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,eAAeA,0BAAwB,CACrC,MAAe,EACf,GAAW,EAAA;IAEX,MAAM,MAAM,GAAkB,EAAE,CAAC;IAEjC,MAAM,YAAY,GAAG,CAAC,MAAM,yBAAyB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,CACrE,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAE,CAC/B,CAAC;AAEF,IAAA,YAAY,CAAC,OAAO,CAAC,WAAW,IAAG;QACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAY,SAAA,EAAA,WAAW,IAAI,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC;AACV,gBAAA,KAAK,EAAE,CAAA,wDAAA,EAA2D,GAAG,CAAA,MAAA,EAAS,WAAW,CAAE,CAAA;gBAC3F,OAAO,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAE,CAAA;AACxC,aAAA,CAAC,CAAC;AACP,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEM,eAAe,eAAe,CAAC,MAAe,EAAA;IACnD,MAAM,MAAM,GAAkB,EAAE,CAAC;AAEjC,IAAA,IAAI,MAAM,CAAC,OAAO,KAAK,QAAQ;AAAE,QAAA,OAAO,EAAE,CAAC;IAE3C,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACvC,IAAA,IAAI,CAAC,GAAG;QACN,OAAO;AACL,YAAA;AACE,gBAAA,KAAK,EAAE,CAAA,2CAAA,EAA8C,MAAM,CAAC,OAAO,CAAE,CAAA;gBACrE,OAAO,EAAE,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAE,CAAA;AACxC,aAAA;SACF,CAAC;IAEJ,MAAM,mBAAmB,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAClE,MAAM,eAAe,GAAG,MAAMA,0BAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpE,IAAA,MAAM,cAAc,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAEtD,OAAO,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,cAAc,EAAE,mBAAmB,CAAC,CAAC;AAC7E;;AClIA,eAAe,sBAAsB,CAAC,IAAY,EAAA;IAChD,MAAM,YAAY,GAAG,gBAAgB,CAAC,MAAM,UAAU,EAAE,IAAI,CAAC,CAAC;IAE9D,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,IACpC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CAAC,CACpE,CAAC;AACJ,CAAC;AAED,eAAe,wBAAwB,CACrC,SAAkB,EAClB,OAAe,EAAA;IAEf,MAAM,MAAM,GAAkB,EAAE,CAAC;IAEjC,MAAM,YAAY,GAAG,MAAM,CACzB,MAAM,sBAAsB,CAAC,OAAO,CAAC,EACrC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC,CAAC;AAEtC,IAAA,YAAY,CAAC,OAAO,CAAC,WAAW,IAAG;QACjC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAY,SAAA,EAAA,WAAW,IAAI,CAAC;YACvD,MAAM,CAAC,IAAI,CAAC;AACV,gBAAA,KAAK,EAAE,CAAsC,mCAAA,EAAA,OAAO,KAAK,OAAO,CAAA,MAAA,EAAS,WAAW,CAAE,CAAA;AACtF,gBAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAA,GAAA,EAAM,WAAW,CAAE,CAAA;AACvC,aAAA,CAAC,CAAC;AACP,KAAC,CAAC,CAAC;AAEH,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEM,eAAe,kBAAkB,CACtC,OAAgB,EAAA;IAEhB,MAAM,MAAM,GAAkB,EAAE,CAAC;IAEjC,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAChD,IAAA,IAAI,CAAC,OAAO;QACV,OAAO;AACL,YAAA;AACE,gBAAA,KAAK,EAAE,CAAyC,sCAAA,EAAA,OAAO,KAAK,OAAO,CAAC,OAAO,CAAE,CAAA;gBAC7E,OAAO,EAAE,CAAG,EAAA,OAAO,CAAE,CAAA;AACtB,aAAA;SACF,CAAC;IAEJ,MAAM,eAAe,GAAG,MAAM,wBAAwB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACzE,IAAA,MAAM,cAAc,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAEvD,OAAO,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;AACxD;;AC5CO,MAAM,UAAU,GAAG,KAAK,CAAC,sCAAsC,CAAC;KACpE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,KAAA,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAEjE,MAAM,UAAU,GAAG,KAAK,CAAC,sCAAsC,CAAC;KACpE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,KAAA,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAE9C,KAAK,CAAC,sCAAsC,CAAC;KACpE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,KAAA,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,EAAE;AAEjE,MAAM,UAAU,GAAG,KAAK,CAAC,sCAAsC,CAAC;KACpE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;AACjC,KAAA,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;AAalE,SAAU,aAAa,CAAC,OAAgB,EAAA;AAC5C,IAAA,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AAC5B,IAAA,MAAM,eAAe,GACnB,OAAO,KAAK,IAAI;AAChB,QAAA,OAAO,KAAK,KAAK;SAChB,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK;AACrC,aAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,MAAM;gBACvC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;IAEnD,MAAM,aAAa,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAEpD,OAAO,eAAe,IAAI,aAAa,CAAC;AAC1C,CAAC;AAEK,SAAU,YAAY,CAAC,OAAgB,EAAA;;IAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;IAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,MAAM,CAAC;AACxD,IAAA,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;IAEnE,MAAM,YAAY,GAAG,IAAI;AACvB,UAAE,QAAQ;UACR,QAAQ,IAAI,MAAM;AACpB,cAAE,QAAQ;AACR,kBAAE,QAAQ;AACV,kBAAE,UAAU;cACZ,IAAI,CAAC;AAET,IAAA,IAAI,CAAC,YAAY;AAAE,QAAA,OAAO,SAAS,CAAC;IAEpC,QACE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO;SACJ,OAAO,CAAC,mBAAmB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAC3B,aAAa,CACb,CAAA,EAAG,YAAY,CAAQ,KAAA,EAAA,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA,EAAA,CAAI,CACxD,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,EACX;AACJ,CAAC;AAEe,SAAA,gBAAgB,CAAC,GAAgB,EAAE,IAAY,EAAA;;IAC7D,IAAI,IAAI,KAAK,EAAE;AAAE,QAAA,OAAO,EAAE,CAAC;IAC3B,MAAM,SAAS,GAAG,gBAAgB,CAChC,GAAG,EACH,CAAA,EAAA,GAAA,MAAA,GAAG;AACA,SAAA,aAAa,CAAC,CAAA,cAAA,EAAiB,IAAI,CAAA,0BAAA,EAA6B,IAAI,CAAI,EAAA,CAAA,CAAC,MACxE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,CAAC,MAAM,CAAC,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAE,CAC/B,CAAC;IACF,OAAO,KAAK,CAAC,IAAI,CACf,GAAG,CAAC,gBAAgB,CAClB,CAAiB,cAAA,EAAA,IAAI,6BAA6B,IAAI,CAAA,EAAA,CAAI,CAC3D,CACF,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACtB,CAAC;AAEM,eAAe,gBAAgB,CACpC,OAAgB,EAAA;IAEhB,MAAM,MAAM,GAAkB,EAAE,CAAC;IAEjC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE9C,IAAA,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;QAC5B,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,SAAS;YAAE,SAAS;AAEzB,QAAA,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,WAAW,CAAC,MAAM;YACpB,KAAK,MAAM,UAAU,IAAI,WAAW;AAAE,gBAAA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjE,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAIM,MAAM,YAAY,GAAgD;AACvE,IAAA,SAAS,EAAE,kBAAkB;AAC7B,IAAA,MAAM,EAAE,eAAe;AACvB,IAAA,MAAM,EAAE,eAAe;AACvB,IAAA,EAAE,EAAE,WAAW;AACf,IAAA,GAAG,EAAE,WAAW;AAChB,IAAA,EAAE,EAAE,WAAW;AACf,IAAA,GAAG,EAAE,WAAW;CACjB;;ACnHM,gBAAgB,iBAAiB,CACtC,GAAgB,EAAA;AAEhB;;;;;AAKK;AAEL;;;;;;;;;;AAUI;IAEJ,MAAM,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;AACpD,IAAA,IAAI,CAAC,IAAI;QAAE,OAAO;IAElB,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE3C,IAAA,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;QAC5B,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9C,QAAA,IAAI,CAAC,SAAS;YAAE,SAAS;AAEzB,QAAA,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAErC,QAAA,MAAM,WAAW,CAAC;AACnB,KAAA;AACH;;AC7BA;AACqB,MAAA,mBAAoB,SAAQhB,CAAU,CAAA;AAA3D,IAAA,WAAA,GAAA;;;QAWE,IAAS,CAAA,SAAA,GAAG,CAAC,CAAC;QAGd,IAAY,CAAA,YAAA,GAAkB,EAAE,CAAC;QAGjC,IAAc,CAAA,cAAA,GAAkB,EAAE,CAAC;KAwEpC;AAtES,IAAA,MAAM,cAAc,GAAA;AAC1B,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,YAAY,GAAG,MAAM,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACjE,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;KACpC;AAEO,IAAA,MAAM,iBAAiB,GAAA;AAC7B,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,WAAW,MAAM,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;AACnC,YAAA,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AACtC,SAAA;KACF;AAED,IAAA,MAAM,aAAa,GAAA;;AAEjB,QAAA,MAAM,IAAI,OAAO,CAAO,OAAO,IAAI,qBAAqB,CAAC,MAAM,OAAO,EAAE,CAAC,CAAC,CAAC;QAC3E,KAAK,CAAC,aAAa,EAAE,CAAC;KACvB;;AAGO,IAAA,gBAAgB,CAAC,KAAkB,EAAA;QACzC,OAAOC,CAAI,CAAA,CAAA,cAAA,EAAiB,CAAG,EAAA,KAAK,CAAC,KAAK,CAAK,EAAA,EAAA,KAAK,CAAC,OAAO,CAAE,CAAA,CAAA;iCACjC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAA;AAC/B,eAAA,EAAA,KAAK,CAAC,KAAK,CAAA;AACK,+BAAA,EAAA,KAAK,CAAC,OAAO,CAAA;;MAExC,CAAC;KACJ;AAEO,IAAA,sBAAsB,CAAC,MAAqB,EAAA;AAClD,QAAA,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;AAAE,YAAA,OAAO,CAACA,CAAI,CAAA,CAAA,CAAE,CAAC,CAAC;QACzC,OAAO;AACL,YAAAA,CAAI,CAAA,CAA2C,yCAAA,CAAA;AAC/C,YAAA,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACrD,CAAC;KACH;IAED,MAAM,GAAA;AACJ,QAAA,OAAOA,CAAI,CAAA,CAAA;;;;AAIK,kBAAA,EAAA,IAAI,CAAC,cAAc,CAAA;;;AAG1B,WAAA,EAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;;;;;;AAMvC,kBAAA,EAAA,IAAI,CAAC,iBAAiB,CAAA;;;AAG7B,WAAA,EAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;;;eAG9C,CAAC;KACb;;AAEM,mBAAM,CAAA,MAAA,GAAGF,GAAG,CAAA,CAAA;;;;;;;;GAQlB,CAAC;AArFF,UAAA,CAAA;AADC,IAAAW,GAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;AACb,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAIlB,UAAA,CAAA;AADC,IAAAA,GAAQ,EAAE;AACM,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAIjB,UAAA,CAAA;AADC,IAAAA,GAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AACb,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAGd,UAAA,CAAA;AADC,IAAAA,GAAQ,EAAE;AACsB,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAGjC,UAAA,CAAA;AADC,IAAAA,GAAQ,EAAE;AACwB,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;;;"}